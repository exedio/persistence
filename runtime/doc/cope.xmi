<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-07-25T03:54:09" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.1</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" xmi.id="m1" isAbstract="false" name="UML-Modell" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="267" isRoot="false" isAbstract="false" name="Datentyp" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="268" isRoot="false" isAbstract="false" name="Klasse" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="269" isRoot="false" isAbstract="false" name="Schnittstelle" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="5" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="20" isRoot="false" isAbstract="false" name="interface" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="350" isRoot="false" isAbstract="false" name="constructor" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="351" isRoot="false" isAbstract="false" name="friend" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="352" isRoot="false" isAbstract="false" name="virtual" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="192" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="193" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="194" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="195" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="196" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="197" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="198" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="267" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="199" isRoot="false" isAbstract="false" name="string" />
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="200" isRoot="false" isAbstract="false" name="Attribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="380" />
      <UML:Generalization xmi.idref="392" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="404" type="194" name="mandatory" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="405" type="194" name="final" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="201" isRoot="false" isAbstract="false" name="FunctionAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="208" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="202" isRoot="false" isAbstract="false" name="StringAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="216" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="232" type="192" name="minimumLength" />
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="233" type="192" name="maximumLength" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="203" isRoot="false" isAbstract="false" name="LongAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="217" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="204" isRoot="false" isAbstract="false" name="IntegerAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="211" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="205" isRoot="false" isAbstract="false" name="DataAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="220" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Interface stereotype="269" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="206" isRoot="false" isAbstract="true" name="Function" />
    <UML:Interface stereotype="269" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="207" isRoot="false" isAbstract="true" name="IntegerFunction" />
    <UML:Interface stereotype="269" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="213" isRoot="false" isAbstract="true" name="StringFunction" />
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="218" isRoot="false" isAbstract="false" name="BooleanAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="222" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="219" isRoot="false" isAbstract="false" name="DoubleAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="221" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="223" isRoot="false" isAbstract="false" name="Type" />
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="226" isRoot="false" isAbstract="false" name="EnumAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="229" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="227" isRoot="false" isAbstract="false" name="ItemAttribute" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="228" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="239" isRoot="false" isAbstract="false" name="View" />
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="241" isRoot="false" isAbstract="false" name="SumView" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="245" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class stereotype="268" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="242" isRoot="false" isAbstract="false" name="UppercaseView" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="246" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Interface stereotype="269" isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="362" isRoot="false" isAbstract="false" name="ItemFunction" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="383" isRoot="false" isAbstract="false" name="Pattern" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="395" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" namespace="m1" xmi.id="388" isRoot="false" isAbstract="false" name="Feature" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="389" />
     </UML:GeneralizableElement.generalization>
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" visibility="private" xmi.id="398" type="199" name="name" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Generalization isSpecification="false" child="201" visibility="public" namespace="m1" xmi.id="208" parent="200" discriminator="" name="" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="209" client="201" name="" supplier="206" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="210" client="207" name="" supplier="206" />
    <UML:Generalization isSpecification="false" child="204" visibility="public" namespace="m1" xmi.id="211" parent="201" discriminator="" name="" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="212" client="204" name="" supplier="207" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="214" client="202" name="" supplier="213" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="215" client="213" name="" supplier="206" />
    <UML:Generalization isSpecification="false" child="202" visibility="public" namespace="m1" xmi.id="216" parent="201" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="203" visibility="public" namespace="m1" xmi.id="217" parent="201" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="205" visibility="public" namespace="m1" xmi.id="220" parent="200" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="219" visibility="public" namespace="m1" xmi.id="221" parent="201" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="218" visibility="public" namespace="m1" xmi.id="222" parent="201" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="224" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="31" aggregation="composite" type="223" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="32" aggregation="none" type="200" name="" multiplicity="*" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="227" visibility="public" namespace="m1" xmi.id="228" parent="201" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="226" visibility="public" namespace="m1" xmi.id="229" parent="201" discriminator="" name="" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="240" client="239" name="" supplier="206" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="243" client="242" name="" supplier="213" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="244" client="241" name="" supplier="207" />
    <UML:Generalization isSpecification="false" child="241" visibility="public" namespace="m1" xmi.id="245" parent="239" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="242" visibility="public" namespace="m1" xmi.id="246" parent="239" discriminator="" name="" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="265" client="206" name="" supplier="263" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="266" client="201" name="" supplier="206" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="296" client="239" name="" supplier="206" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="313" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="314" aggregation="none" type="227" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="315" aggregation="none" type="227" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="316" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="317" aggregation="none" type="227" name="" multiplicity="*" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="318" aggregation="none" type="223" name="targetType" multiplicity="1" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="363" client="227" name="" supplier="362" />
    <UML:Abstraction isSpecification="false" visibility="public" namespace="m1" xmi.id="366" client="362" name="" supplier="206" />
    <UML:Generalization isSpecification="false" child="200" visibility="public" namespace="m1" xmi.id="380" parent="263" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="388" visibility="public" namespace="m1" xmi.id="389" parent="223" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="200" visibility="public" namespace="m1" xmi.id="392" parent="388" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="383" visibility="public" namespace="m1" xmi.id="395" parent="388" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" namespace="m1" xmi.id="399" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="400" aggregation="composite" type="223" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="401" aggregation="none" type="388" name="" multiplicity="*" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="238" documentation="" uniqueid="405" />
  <diagrams>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="949" snapy="10" showatts="1" xmi.id="191" documentation="" type="402" showops="1" showpackage="0" name="attributes" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="863" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="110" showattsigs="602" usesdiagramusefillcolour="0" x="304" y="203" showopsigs="602" linewidth="none" fillcolour="#ffffc0" height="51" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="200" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="1" width="177" showattsigs="603" usesdiagramusefillcolour="1" x="82" y="341" showopsigs="602" linewidth="none" fillcolour="none" height="39" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="201" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="602" usesdiagramusefillcolour="1" x="267" y="482" showopsigs="602" linewidth="none" fillcolour="none" height="62" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="202" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="603" usesdiagramusefillcolour="1" x="268" y="654" showopsigs="602" linewidth="none" fillcolour="none" height="39" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="203" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="126" showattsigs="603" usesdiagramusefillcolour="1" x="269" y="607" showopsigs="602" linewidth="none" fillcolour="none" height="36" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="204" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="101" showattsigs="603" usesdiagramusefillcolour="0" x="430" y="316" showopsigs="602" linewidth="none" fillcolour="#ffffc0" height="28" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="205" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="773" y="343" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="206" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="573" y="613" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="207" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="573" y="493" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="213" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="123" showattsigs="603" usesdiagramusefillcolour="1" x="269" y="559" showopsigs="602" linewidth="none" fillcolour="none" height="34" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="218" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="120" showattsigs="603" usesdiagramusefillcolour="1" x="270" y="702" showopsigs="602" linewidth="none" fillcolour="none" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="219" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="73" showattsigs="603" usesdiagramusefillcolour="1" x="474" y="19" showopsigs="602" linewidth="none" fillcolour="none" height="38" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="223" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="113" showattsigs="603" usesdiagramusefillcolour="1" x="270" y="756" showopsigs="602" linewidth="none" fillcolour="none" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="226" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="113" showattsigs="603" usesdiagramusefillcolour="1" x="274" y="812" showopsigs="602" linewidth="none" fillcolour="none" height="36" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="227" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="0" width="125" usesdiagramusefillcolour="0" x="569" y="814" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="#ffffc0" height="32" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="362" showoperations="1" showpackage="0" showscope="0" showstereotype="1" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
     <classwidget usesdiagramfillcolour="1" width="82" showattsigs="602" usesdiagramusefillcolour="1" x="583" y="202" showopsigs="602" linewidth="none" fillcolour="none" height="43" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="383" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="90" showattsigs="602" usesdiagramusefillcolour="1" x="466" y="105" showopsigs="602" linewidth="none" fillcolour="none" height="36" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="388" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="200" widgetaid="201" xmi.id="208" linecolor="none" >
      <linepath>
       <startpoint startx="170" starty="341" />
       <endpoint endx="340" endy="254" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="206" widgetaid="201" xmi.id="209" linecolor="none" >
      <linepath>
       <startpoint startx="259" starty="360" />
       <endpoint endx="773" endy="360" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" linewidth="none" widgetbid="206" widgetaid="207" xmi.id="210" linecolor="none" >
      <linepath>
       <startpoint startx="630" starty="613" />
       <endpoint endx="830" endy="378" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="5" linewidth="none" widgetbid="201" widgetaid="204" xmi.id="211" linecolor="none" >
      <linepath>
       <startpoint startx="269" starty="630" />
       <endpoint endx="190" endy="380" />
       <point x="190" y="630" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="207" widgetaid="204" xmi.id="212" linecolor="none" >
      <linepath>
       <startpoint startx="395" starty="630" />
       <endpoint endx="573" endy="630" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="213" widgetaid="202" xmi.id="214" linecolor="none" >
      <linepath>
       <startpoint startx="392" starty="510" />
       <endpoint endx="573" endy="510" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" linewidth="none" widgetbid="206" widgetaid="213" xmi.id="215" linecolor="none" >
      <linepath>
       <startpoint startx="630" starty="493" />
       <endpoint endx="800" endy="378" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="7" linewidth="none" widgetbid="201" widgetaid="202" xmi.id="216" linecolor="none" >
      <linepath>
       <startpoint startx="267" starty="510" />
       <endpoint endx="240" endy="380" />
       <point x="240" y="510" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="4" linewidth="none" widgetbid="201" widgetaid="203" xmi.id="217" linecolor="none" >
      <linepath>
       <startpoint startx="268" starty="670" />
       <endpoint endx="170" endy="380" />
       <point x="170" y="670" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="200" widgetaid="205" xmi.id="220" linecolor="none" >
      <linepath>
       <startpoint startx="480" starty="316" />
       <endpoint endx="380" endy="254" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="3" linewidth="none" widgetbid="201" widgetaid="219" xmi.id="221" linecolor="none" >
      <linepath>
       <startpoint startx="270" starty="720" />
       <endpoint endx="150" endy="380" />
       <point x="150" y="720" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="6" linewidth="none" widgetbid="201" widgetaid="218" xmi.id="222" linecolor="none" >
      <linepath>
       <startpoint startx="269" starty="580" />
       <endpoint endx="210" endy="380" />
       <point x="210" y="580" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="8" indexb="1" linewidth="none" widgetbid="201" widgetaid="227" xmi.id="228" linecolor="none" >
      <linepath>
       <startpoint startx="274" starty="820" />
       <endpoint endx="100" endy="380" />
       <point x="100" y="820" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="8" indexb="2" linewidth="none" widgetbid="201" widgetaid="226" xmi.id="229" linecolor="none" >
      <linepath>
       <startpoint startx="270" starty="770" />
       <endpoint endx="130" endy="380" />
       <point x="120" y="770" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" linewidth="none" widgetbid="223" widgetaid="227" xmi.id="316" linecolor="none" >
      <linepath>
       <startpoint startx="274" starty="840" />
       <endpoint endx="474" endy="40" />
       <point x="50" y="840" />
       <point x="50" y="40" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="253" y="841" linewidth="none" posttext="" role="701" fillcolour="none" height="18" usefillcolor="1" pretext="" isinstance="0" xmi.id="371" text="*" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="461" y="20" linewidth="none" posttext="" role="702" fillcolour="none" height="18" usefillcolor="1" pretext="" isinstance="0" xmi.id="372" text="1" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="85" usesdiagramusefillcolour="1" x="387" y="42" linewidth="none" posttext="" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="370" text="targetType" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="362" widgetaid="227" xmi.id="363" linecolor="none" >
      <linepath>
       <startpoint startx="387" starty="830" />
       <endpoint endx="569" endy="830" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" linewidth="none" widgetbid="206" widgetaid="362" xmi.id="366" linecolor="none" >
      <linepath>
       <startpoint startx="630" starty="814" />
       <endpoint endx="860" endy="378" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="388" widgetaid="200" xmi.id="392" linecolor="none" >
      <linepath>
       <startpoint startx="360" starty="203" />
       <endpoint endx="500" endy="141" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="388" widgetaid="383" xmi.id="395" linecolor="none" >
      <linepath>
       <startpoint startx="620" starty="202" />
       <endpoint endx="530" endy="141" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="388" widgetaid="223" xmi.id="399" linecolor="none" >
      <linepath>
       <startpoint startx="510" starty="57" />
       <endpoint endx="511" endy="105" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="507" y="81" linewidth="none" posttext="" role="702" fillcolour="none" height="32" usefillcolor="1" pretext="" isinstance="0" xmi.id="403" text="*" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="965" snapy="10" showatts="1" xmi.id="238" documentation="" type="402" showops="1" showpackage="0" name="functions" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="813" >
    <widgets>
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="223" y="83" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="206" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="87" showattsigs="602" usesdiagramusefillcolour="1" x="357" y="311" showopsigs="602" linewidth="none" fillcolour="none" height="38" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="239" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="613" y="453" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="207" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="74" showattsigs="602" usesdiagramusefillcolour="1" x="333" y="453" showopsigs="602" linewidth="none" fillcolour="none" height="34" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="241" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="1" width="122" showattsigs="602" usesdiagramusefillcolour="1" x="389" y="620" showopsigs="602" linewidth="none" fillcolour="none" height="41" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="242" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="none" />
     <interfacewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="613" y="623" drawascircle="0" showopsigs="602" linewidth="none" fillcolour="none" height="35" usefillcolor="1" showpubliconly="0" isinstance="0" xmi.id="213" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,1,0,0,0,0" linecolor="none" />
     <classwidget usesdiagramfillcolour="0" width="130" showattsigs="602" usesdiagramusefillcolour="0" x="75" y="310" showopsigs="602" linewidth="none" fillcolour="#ffffc0" height="40" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="201" showoperations="1" showpackage="0" showscope="0" font="Adobe Courier,9,-1,5,75,0,0,0,0,0" linecolor="#ff0000" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="206" widgetaid="239" xmi.id="240" linecolor="none" >
      <linepath>
       <startpoint startx="400" starty="311" />
       <endpoint endx="300" endy="118" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="213" widgetaid="242" xmi.id="243" linecolor="none" >
      <linepath>
       <startpoint startx="511" starty="640" />
       <endpoint endx="613" endy="640" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="207" widgetaid="241" xmi.id="244" linecolor="none" >
      <linepath>
       <startpoint startx="407" starty="470" />
       <endpoint endx="613" endy="470" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="239" widgetaid="241" xmi.id="245" linecolor="none" >
      <linepath>
       <startpoint startx="370" starty="453" />
       <endpoint endx="390" endy="349" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" linewidth="none" widgetbid="239" widgetaid="242" xmi.id="246" linecolor="none" >
      <linepath>
       <startpoint startx="450" starty="620" />
       <endpoint endx="420" endy="349" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" linewidth="none" widgetbid="206" widgetaid="239" xmi.id="296" linecolor="none" >
      <linepath>
       <startpoint startx="444" starty="330" />
       <endpoint endx="338" endy="100" />
       <point x="630" y="330" />
       <point x="630" y="100" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="355" y="83" linewidth="none" posttext="" role="702" fillcolour="none" height="18" usefillcolor="1" pretext="" isinstance="0" xmi.id="375" text="*" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="446" y="334" linewidth="none" posttext="" role="709" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="373" text="" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
      <floatingtext usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="350" y="107" linewidth="none" posttext="" role="710" fillcolour="none" height="18" usefillcolor="1" pretext="+" isinstance="0" xmi.id="374" text="sources" font="Adobe Courier,9,-1,5,50,0,0,0,0,0" linecolor="none" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" linewidth="none" widgetbid="206" widgetaid="201" xmi.id="266" linecolor="none" >
      <linepath>
       <startpoint startx="140" starty="310" />
       <endpoint endx="260" endy="118" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Ansichten" >
    <listitem open="1" type="801" label="Logische Ansicht" >
     <listitem open="1" type="813" id="388" >
      <listitem open="0" type="814" id="398" />
     </listitem>
     <listitem open="1" type="813" id="383" />
     <listitem open="1" type="813" id="219" />
     <listitem open="1" type="813" id="203" />
     <listitem open="1" type="813" id="227" />
     <listitem open="1" type="813" id="239" />
     <listitem open="1" type="813" id="242" />
     <listitem open="1" type="813" id="226" />
     <listitem open="1" type="813" id="204" />
     <listitem open="0" type="813" id="205" />
     <listitem open="1" type="813" id="218" />
     <listitem open="1" type="813" id="200" >
      <listitem open="0" type="814" id="404" />
      <listitem open="0" type="814" id="405" />
     </listitem>
     <listitem open="1" type="813" id="201" />
     <listitem open="1" type="813" id="223" />
     <listitem open="1" type="813" id="202" >
      <listitem open="0" type="814" id="232" />
      <listitem open="0" type="814" id="233" />
     </listitem>
     <listitem open="1" type="813" id="241" />
     <listitem open="1" type="817" id="207" />
     <listitem open="1" type="817" id="362" />
     <listitem open="1" type="817" id="206" />
     <listitem open="1" type="817" id="213" />
     <listitem open="1" type="830" label="Datentypen" >
      <listitem open="1" type="829" id="199" />
      <listitem open="1" type="829" id="197" />
      <listitem open="1" type="829" id="195" />
      <listitem open="1" type="829" id="193" />
      <listitem open="1" type="829" id="192" />
      <listitem open="1" type="829" id="194" />
      <listitem open="1" type="829" id="196" />
      <listitem open="1" type="829" id="198" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Anwendungsfallansicht" />
    <listitem open="1" type="821" label="Komponentenansicht" />
    <listitem open="1" type="827" label="Verteilungsansicht" />
    <listitem open="1" type="836" label="Entity-Relationship-Modell" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Java" >
    <classifiercodedocument writeOutCode="true" package="" id="200" parent_class="200" fileExt=".java" fileName="Attribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Feature;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="200" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class Attribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="224" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="404" tag="tblock_0" canDelete="false" indentLevel="1" text="private boolean mandatory;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="405" tag="tblock_9" canDelete="false" indentLevel="1" text="private boolean final;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Attribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="404" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="404" text="return mandatory;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of mandatory&amp;#010;&amp;#010;@return the value of mandatory" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="404" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="404" text="mandatory = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of mandatory&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="405" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="405" text="return final;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of final&amp;#010;&amp;#010;@return the value of final" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="405" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="405" text="final = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of final&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="224" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="224" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="224" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Attribute to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="224" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Attribute from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="224" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Attribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:51:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="224" field_type="4" initialValue=" new Vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="224" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="224" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="224" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="224" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Attribute to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="224" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Attribute from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="224" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="1" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="380" field_type="2147483647" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Feature  = new Feature ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="392" field_type="4587552" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Feature  = new Feature ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="404" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="404" tag="tblock_0" canDelete="false" indentLevel="1" text="private boolean mandatory;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="404" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="404" text="return mandatory;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of mandatory&amp;#010;&amp;#010;@return the value of mandatory" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="404" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="404" text="mandatory = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of mandatory&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="405" tag="tblock_9" canDelete="false" indentLevel="1" text="private boolean final;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="405" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="405" text="return final;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of final&amp;#010;&amp;#010;@return the value of final" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="405" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="405" text="final = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of final&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="201" parent_class="201" fileExt=".java" fileName="FunctionAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Function;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="201" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class FunctionAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public FunctionAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			FunctionAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:54:07&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="202" parent_class="202" fileExt=".java" fileName="StringAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import StringFunction;&amp;#010;import FunctionAttribute;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="202" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class StringAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="232" tag="tblock_0" canDelete="false" indentLevel="1" text="private int minimumLength;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="233" tag="tblock_1" canDelete="false" indentLevel="1" text="private int maximumLength;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public StringAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="232" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="232" text="return minimumLength;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of minimumLength&amp;#010;&amp;#010;@return the value of minimumLength" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="232" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="232" text="minimumLength = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of minimumLength&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="233" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="233" text="return maximumLength;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of maximumLength&amp;#010;&amp;#010;@return the value of maximumLength" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="233" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="233" text="maximumLength = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of maximumLength&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			StringAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:51:01&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="232" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="232" tag="tblock_0" canDelete="false" indentLevel="1" text="private int minimumLength;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="232" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="232" text="return minimumLength;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of minimumLength&amp;#010;&amp;#010;@return the value of minimumLength" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="232" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="232" text="minimumLength = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of minimumLength&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="233" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="233" tag="tblock_1" canDelete="false" indentLevel="1" text="private int maximumLength;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="233" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="233" text="return maximumLength;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of maximumLength&amp;#010;&amp;#010;@return the value of maximumLength" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="233" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="233" text="maximumLength = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of maximumLength&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="203" parent_class="203" fileExt=".java" fileName="LongAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import FunctionAttribute;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="203" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class LongAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public LongAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			LongAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:45:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="204" parent_class="204" fileExt=".java" fileName="IntegerAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import FunctionAttribute;&amp;#010;import IntegerFunction;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="204" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class IntegerAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IntegerAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IntegerAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:45:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="205" parent_class="205" fileExt=".java" fileName="DataAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Attribute;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="205" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class DataAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DataAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DataAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:51:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="206" parent_class="206" fileExt=".java" fileName="Function" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="206" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Interface Function&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Function ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Function.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="207" parent_class="207" fileExt=".java" fileName="IntegerFunction" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="207" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Interface IntegerFunction&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IntegerFunction ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IntegerFunction.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="213" parent_class="213" fileExt=".java" fileName="StringFunction" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="213" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Interface StringFunction&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public StringFunction ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			StringFunction.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:45&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="218" parent_class="218" fileExt=".java" fileName="BooleanAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import FunctionAttribute;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="218" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class BooleanAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public BooleanAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			BooleanAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:45:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="219" parent_class="219" fileExt=".java" fileName="DoubleAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import FunctionAttribute;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="219" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class DoubleAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DoubleAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DoubleAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:46:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="223" parent_class="223" fileExt=".java" fileName="Type" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="223" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class Type&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="224" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Type  = new Type ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="389" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Feature  = new Feature ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="399" tag="tblock_17" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Type ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="224" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="224" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="224" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Type to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="224" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Type from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="224" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="389" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="389" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="389" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="389" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="389" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="399" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="399" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="399" tag="hblock_tag_20" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="399" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="399" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Type.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:40:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="224" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="224" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Type  = new Type ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="224" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="224" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="224" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Type to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="224" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Type from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="224" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="224" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="389" field_type="1" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="389" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Feature  = new Feature ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="389" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="389" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="389" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="389" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="389" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="399" field_type="4" initialValue=" new Vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="399" tag="tblock_17" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="399" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="399" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="399" tag="hblock_tag_20" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="399" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="399" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="226" parent_class="226" fileExt=".java" fileName="EnumAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="226" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class EnumAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public EnumAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			EnumAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:52:25&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="227" parent_class="227" fileExt=".java" fileName="ItemAttribute" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import FunctionAttribute;&amp;#010;import Type;&amp;#010;import ItemFunction;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="227" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class ItemAttribute&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ItemAttribute ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ItemAttribute.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:46:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="239" parent_class="239" fileExt=".java" fileName="View" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Function;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="239" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class View&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public View ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			View.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:25&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="241" parent_class="241" fileExt=".java" fileName="SumView" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import IntegerFunction;&amp;#010;import View;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="241" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class SumView&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public SumView ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			SumView.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="242" parent_class="242" fileExt=".java" fileName="UppercaseView" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import StringFunction;&amp;#010;import View;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="242" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class UppercaseView&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public UppercaseView ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			UppercaseView.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:53:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="362" parent_class="362" fileExt=".java" fileName="ItemFunction" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Function;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="362" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Interface ItemFunction&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ItemFunction ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ItemFunction.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:48:12&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="ANTDOC" fileExt=".xml" fileName="build" >
     <textblocks>
      <codeblockwithcomments tag="xmlDecl" text="&lt;?xml version=&quot;1.0&quot;?>" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <xmlelementblock nodeName="project" tag="projectDecl" canDelete="false" >
       <header>
        <codecomment tag="" text="Java ANT build document" />
       </header>
       <textblocks/>
      </xmlelementblock>
     </textblocks>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="383" parent_class="383" fileExt=".java" fileName="Pattern" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Feature;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="383" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class Pattern&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Pattern ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Pattern.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:49:57&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="395" field_type="57" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Feature  = new Feature ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Feature to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Feature from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="388" parent_class="388" fileExt=".java" fileName="Feature" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="388" tag="ClassDeclBlock" canDelete="false" >
       <header>
        <javacodedocumentation tag="" text="Class Feature&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="398" tag="tblock_0" canDelete="false" indentLevel="1" text="private String name;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="399" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Type  = new Type ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Feature ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="398" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="398" text="return name;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;&amp;#010;@return the value of name" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="398" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="398" text="name = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="399" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="399" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="399" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Type to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="399" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Type from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="399" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Feature.java - Copyright exedio&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Di Jul 25 2006 at 03:40:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="389" field_type="6881382" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Type  = new Type ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Type to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Type from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="389" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="389" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="392" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Attribute  = new Attribute ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Attribute to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Attribute from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="392" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="392" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="395" field_type="49" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Pattern  = new Pattern ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Pattern to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Pattern from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="tblock_0" canDelete="false" indentLevel="1" text="private String name;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="398" text="return name;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="398" text="name = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="399" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="399" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Type  = new Type ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="399" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="399" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="399" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Type to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="399" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Type from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="399" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="399" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
