/*
 * Copyright (C) 2004-2012  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.mxsampler;

import java.lang.management.MemoryUsage;

import com.exedio.cope.LongField;
import com.exedio.cope.SetValue;
import com.exedio.cope.pattern.Composite;

final class MxSamplerMemoryUsage extends Composite
{
	private static final long serialVersionUID = 1l;

	private static final LongField init      = new LongField().min(-1);
	private static final LongField used      = new LongField().min( 0);
	private static final LongField committed = new LongField().min( 0);
	private static final LongField max       = new LongField().min(-1);

	static MxSamplerMemoryUsage create(final MemoryUsage usage)
	{
		return usage!=null ? new MxSamplerMemoryUsage(usage) : null;
	}

	private MxSamplerMemoryUsage(final MemoryUsage thread)
	{
		this(
			init     .map(thread.getInit()),
			used     .map(thread.getUsed()),
			committed.map(thread.getCommitted()),
			max      .map(thread.getMax()));
	}

	// TODO to be generated by the instrumentor
	private MxSamplerMemoryUsage(final SetValue<?>... setValues)
	{
		super(setValues);
	}
}
