/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope;

import com.exedio.cope.pattern.Media;
import com.exedio.cope.testmodel.AttributeItem.SomeEnum;

class SchemaItem extends Item
{
	static final IntegerField nonFinalInteger = new IntegerField();
	static final StringField someNotNullString = new StringField();
	static final BooleanField someBoolean = new BooleanField().optional();
	static final BooleanField someNotNullBoolean = new BooleanField();
	static final EnumField<SomeEnum> someEnum = newEnumField(SomeEnum.class).optional();
	static final EnumField<SomeEnum> someNotNullEnum = newEnumField(SomeEnum.class);
	static final ItemField<SchemaTargetItem> someItem = newItemField(SchemaTargetItem.class).optional();
	static final Media someData = new Media().optional();
	
	@CopeSchemaName("UNIQUE_S")
	static final StringField uniqueString = new StringField().optional().unique();
	
	static final StringField string = new StringField();
	static final IntegerField integer = new IntegerField();
	static final UniqueConstraint doubleUnique = new UniqueConstraint(string, integer);
	
	@CopeSchemaName("MIN_4")
	static final StringField min4 = new StringField().optional().lengthMin(4);
	@CopeSchemaName("MAX_4")
	static final StringField max4 = new StringField().optional().lengthMax(4);
	@CopeSchemaName("MIN4_MAX8")
	static final StringField min4Max8 = new StringField().optional().lengthRange(4, 8);
	@CopeSchemaName("EXACT_6")
	static final StringField exact6 = new StringField().optional().lengthExact(6);
	
	/**

	 **
	 * Creates a new SchemaItem with all the fields initially needed.
	 * @param nonFinalInteger the initial value for field {@link #nonFinalInteger}.
	 * @param someNotNullString the initial value for field {@link #someNotNullString}.
	 * @param someNotNullBoolean the initial value for field {@link #someNotNullBoolean}.
	 * @param someNotNullEnum the initial value for field {@link #someNotNullEnum}.
	 * @param string the initial value for field {@link #string}.
	 * @param integer the initial value for field {@link #integer}.
	 * @throws com.exedio.cope.MandatoryViolationException if someNotNullString, someNotNullEnum, string is null.
	 * @throws com.exedio.cope.StringLengthViolationException if someNotNullString, string violates its length constraint.
	 * @throws com.exedio.cope.UniqueViolationException if string, integer is not unique.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	SchemaItem(
				final int nonFinalInteger,
				final java.lang.String someNotNullString,
				final boolean someNotNullBoolean,
				final SomeEnum someNotNullEnum,
				final java.lang.String string,
				final int integer)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException,
				com.exedio.cope.UniqueViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			SchemaItem.nonFinalInteger.map(nonFinalInteger),
			SchemaItem.someNotNullString.map(someNotNullString),
			SchemaItem.someNotNullBoolean.map(someNotNullBoolean),
			SchemaItem.someNotNullEnum.map(someNotNullEnum),
			SchemaItem.string.map(string),
			SchemaItem.integer.map(integer),
		});
	}/**

	 **
	 * Creates a new SchemaItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private SchemaItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private SchemaItem(final com.exedio.cope.ActivationParameters ap)
	{
		super(ap);
	}/**

	 **
	 * Returns the value of {@link #nonFinalInteger}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getNonFinalInteger()
	{
		return SchemaItem.nonFinalInteger.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #nonFinalInteger}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setNonFinalInteger(final int nonFinalInteger)
	{
		SchemaItem.nonFinalInteger.set(this,nonFinalInteger);
	}/**

	 **
	 * Returns the value of {@link #someNotNullString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getSomeNotNullString()
	{
		return SchemaItem.someNotNullString.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someNotNullString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeNotNullString(final java.lang.String someNotNullString)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.someNotNullString.set(this,someNotNullString);
	}/**

	 **
	 * Returns the value of {@link #someBoolean}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	final java.lang.Boolean getSomeBoolean()
	{
		return SchemaItem.someBoolean.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someBoolean}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeBoolean(final java.lang.Boolean someBoolean)
	{
		SchemaItem.someBoolean.set(this,someBoolean);
	}/**

	 **
	 * Returns the value of {@link #someNotNullBoolean}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	final boolean getSomeNotNullBoolean()
	{
		return SchemaItem.someNotNullBoolean.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #someNotNullBoolean}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeNotNullBoolean(final boolean someNotNullBoolean)
	{
		SchemaItem.someNotNullBoolean.set(this,someNotNullBoolean);
	}/**

	 **
	 * Returns the value of {@link #someEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final SomeEnum getSomeEnum()
	{
		return SchemaItem.someEnum.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeEnum(final SomeEnum someEnum)
	{
		SchemaItem.someEnum.set(this,someEnum);
	}/**

	 **
	 * Returns the value of {@link #someNotNullEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final SomeEnum getSomeNotNullEnum()
	{
		return SchemaItem.someNotNullEnum.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someNotNullEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeNotNullEnum(final SomeEnum someNotNullEnum)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		SchemaItem.someNotNullEnum.set(this,someNotNullEnum);
	}/**

	 **
	 * Returns the value of {@link #someItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final com.exedio.cope.SchemaTargetItem getSomeItem()
	{
		return SchemaItem.someItem.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeItem(final com.exedio.cope.SchemaTargetItem someItem)
	{
		SchemaItem.someItem.set(this,someItem);
	}/**

	 **
	 * Returns a URL the content of {@link #someData} is available under.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getURL public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getSomeDataURL()
	{
		return SchemaItem.someData.getURL(this);
	}/**

	 **
	 * Returns a Locator the content of {@link #someData} is available under.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getLocator public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final com.exedio.cope.pattern.MediaPath.Locator getSomeDataLocator()
	{
		return SchemaItem.someData.getLocator(this);
	}/**

	 **
	 * Returns the content type of the media {@link #someData}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getContentType public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getSomeDataContentType()
	{
		return SchemaItem.someData.getContentType(this);
	}/**

	 **
	 * Returns whether media {@link #someData} is null.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.isNull public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final boolean isSomeDataNull()
	{
		return SchemaItem.someData.isNull(this);
	}/**

	 **
	 * Returns the last modification date of media {@link #someData}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getLastModified public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final long getSomeDataLastModified()
	{
		return SchemaItem.someData.getLastModified(this);
	}/**

	 **
	 * Returns the body length of the media {@link #someData}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getLength public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final long getSomeDataLength()
	{
		return SchemaItem.someData.getLength(this);
	}/**

	 **
	 * Returns the body of the media {@link #someData}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getBody public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final byte[] getSomeDataBody()
	{
		return SchemaItem.someData.getBody(this);
	}/**

	 **
	 * Writes the body of media {@link #someData} into the given stream.
	 * Does nothing, if the media is null.
	 * @throws java.io.IOException if accessing <tt>body</tt> throws an IOException.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getBody public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void getSomeDataBody(final java.io.OutputStream body)
			throws
				java.io.IOException
	{
		SchemaItem.someData.getBody(this,body);
	}/**

	 **
	 * Writes the body of media {@link #someData} into the given file.
	 * Does nothing, if the media is null.
	 * @throws java.io.IOException if accessing <tt>body</tt> throws an IOException.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getBody public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void getSomeDataBody(final java.io.File body)
			throws
				java.io.IOException
	{
		SchemaItem.someData.getBody(this,body);
	}/**

	 **
	 * Sets the content of media {@link #someData}.
	 * @throws java.io.IOException if accessing <tt>body</tt> throws an IOException.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeData(final com.exedio.cope.pattern.Media.Value someData)
			throws
				java.io.IOException
	{
		SchemaItem.someData.set(this,someData);
	}/**

	 **
	 * Sets the content of media {@link #someData}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeData(final byte[] body,final java.lang.String contentType)
	{
		SchemaItem.someData.set(this,body,contentType);
	}/**

	 **
	 * Sets the content of media {@link #someData}.
	 * @throws java.io.IOException if accessing <tt>body</tt> throws an IOException.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeData(final java.io.InputStream body,final java.lang.String contentType)
			throws
				java.io.IOException
	{
		SchemaItem.someData.set(this,body,contentType);
	}/**

	 **
	 * Sets the content of media {@link #someData}.
	 * @throws java.io.IOException if accessing <tt>body</tt> throws an IOException.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeData(final java.io.File body,final java.lang.String contentType)
			throws
				java.io.IOException
	{
		SchemaItem.someData.set(this,body,contentType);
	}/**

	 **
	 * Returns the value of {@link #uniqueString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getUniqueString()
	{
		return SchemaItem.uniqueString.get(this);
	}/**

	 **
	 * Sets a new value for {@link #uniqueString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setUniqueString(final java.lang.String uniqueString)
			throws
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.uniqueString.set(this,uniqueString);
	}/**

	 **
	 * Finds a schemaItem by it's {@link #uniqueString}.
	 * @param uniqueString shall be equal to field {@link #uniqueString}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.for public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final SchemaItem forUniqueString(final java.lang.String uniqueString)
	{
		return SchemaItem.uniqueString.searchUnique(SchemaItem.class,uniqueString);
	}/**

	 **
	 * Finds a schemaItem by it's {@link #uniqueString}.
	 * @deprecated use for{@link #uniqueString} instead.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.findBy public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@Deprecated
	static final SchemaItem findByUniqueString(final java.lang.String uniqueString)
	{
		return SchemaItem.uniqueString.searchUnique(SchemaItem.class,uniqueString);
	}/**

	 **
	 * Returns the value of {@link #string}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getString()
	{
		return SchemaItem.string.get(this);
	}/**

	 **
	 * Sets a new value for {@link #string}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setString(final java.lang.String string)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.string.set(this,string);
	}/**

	 **
	 * Returns the value of {@link #integer}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getInteger()
	{
		return SchemaItem.integer.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #integer}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setInteger(final int integer)
			throws
				com.exedio.cope.UniqueViolationException
	{
		SchemaItem.integer.set(this,integer);
	}/**

	 **
	 * Finds a schemaItem by it's unique fields.
	 * @param string shall be equal to field {@link #string}.
	 * @param integer shall be equal to field {@link #integer}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	static final SchemaItem forDoubleUnique(final java.lang.String string,final int integer)
	{
		return SchemaItem.doubleUnique.search(SchemaItem.class,string,integer);
	}/**

	 **
	 * Finds a schemaItem by it's unique fields.
	 * @deprecated use forDoubleUnique instead.
	 * @param string shall be equal to field {@link #string}.
	 * @param integer shall be equal to field {@link #integer}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@Deprecated
	static final SchemaItem findByDoubleUnique(final java.lang.String string,final int integer)
	{
		return SchemaItem.doubleUnique.search(SchemaItem.class,string,integer);
	}/**

	 **
	 * Returns the value of {@link #min4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMin4()
	{
		return SchemaItem.min4.get(this);
	}/**

	 **
	 * Sets a new value for {@link #min4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMin4(final java.lang.String min4)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.min4.set(this,min4);
	}/**

	 **
	 * Returns the value of {@link #max4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMax4()
	{
		return SchemaItem.max4.get(this);
	}/**

	 **
	 * Sets a new value for {@link #max4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMax4(final java.lang.String max4)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.max4.set(this,max4);
	}/**

	 **
	 * Returns the value of {@link #min4Max8}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMin4Max8()
	{
		return SchemaItem.min4Max8.get(this);
	}/**

	 **
	 * Sets a new value for {@link #min4Max8}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMin4Max8(final java.lang.String min4Max8)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.min4Max8.set(this,min4Max8);
	}/**

	 **
	 * Returns the value of {@link #exact6}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getExact6()
	{
		return SchemaItem.exact6.get(this);
	}/**

	 **
	 * Sets a new value for {@link #exact6}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setExact6(final java.lang.String exact6)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		SchemaItem.exact6.set(this,exact6);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for schemaItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<SchemaItem> TYPE = com.exedio.cope.TypesBound.newType(SchemaItem.class)
;}
