/*
 * Copyright (C) 2004-2012  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope;

public final class MysqlStringItem extends Item
{
	static final StringField varcharMin = new StringField().lengthMax(1);
	static final StringField varcharMax = new StringField().lengthMax(85);
	static final StringField textMin    = new StringField().lengthMax(86);
	static final StringField textMax    = new StringField().lengthMax(21845);
	static final StringField mediumMin  = new StringField().lengthMax(21846);
	static final StringField mediumMax  = new StringField().lengthMax(5592405);
	static final StringField longMin    = new StringField().lengthMax(5592406);
	static final StringField longMax    = new StringField().lengthMax(Integer.MAX_VALUE);


	/**

	 **
	 * Creates a new MysqlStringItem with all the fields initially needed.
	 * @param varcharMin the initial value for field {@link #varcharMin}.
	 * @param varcharMax the initial value for field {@link #varcharMax}.
	 * @param textMin the initial value for field {@link #textMin}.
	 * @param textMax the initial value for field {@link #textMax}.
	 * @param mediumMin the initial value for field {@link #mediumMin}.
	 * @param mediumMax the initial value for field {@link #mediumMax}.
	 * @param longMin the initial value for field {@link #longMin}.
	 * @param longMax the initial value for field {@link #longMax}.
	 * @throws com.exedio.cope.MandatoryViolationException if varcharMin, varcharMax, textMin, textMax, mediumMin, mediumMax, longMin, longMax is null.
	 * @throws com.exedio.cope.StringLengthViolationException if varcharMin, varcharMax, textMin, textMax, mediumMin, mediumMax, longMin, longMax violates its length constraint.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	MysqlStringItem(
				final java.lang.String varcharMin,
				final java.lang.String varcharMax,
				final java.lang.String textMin,
				final java.lang.String textMax,
				final java.lang.String mediumMin,
				final java.lang.String mediumMax,
				final java.lang.String longMin,
				final java.lang.String longMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		this(new com.exedio.cope.SetValue<?>[]{
			MysqlStringItem.varcharMin.map(varcharMin),
			MysqlStringItem.varcharMax.map(varcharMax),
			MysqlStringItem.textMin.map(textMin),
			MysqlStringItem.textMax.map(textMax),
			MysqlStringItem.mediumMin.map(mediumMin),
			MysqlStringItem.mediumMax.map(mediumMax),
			MysqlStringItem.longMin.map(longMin),
			MysqlStringItem.longMax.map(longMax),
		});
	}/**

	 **
	 * Creates a new MysqlStringItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private MysqlStringItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #varcharMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getVarcharMin()
	{
		return MysqlStringItem.varcharMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #varcharMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setVarcharMin(final java.lang.String varcharMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.varcharMin.set(this,varcharMin);
	}/**

	 **
	 * Returns the value of {@link #varcharMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getVarcharMax()
	{
		return MysqlStringItem.varcharMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #varcharMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setVarcharMax(final java.lang.String varcharMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.varcharMax.set(this,varcharMax);
	}/**

	 **
	 * Returns the value of {@link #textMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getTextMin()
	{
		return MysqlStringItem.textMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #textMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setTextMin(final java.lang.String textMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.textMin.set(this,textMin);
	}/**

	 **
	 * Returns the value of {@link #textMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getTextMax()
	{
		return MysqlStringItem.textMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #textMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setTextMax(final java.lang.String textMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.textMax.set(this,textMax);
	}/**

	 **
	 * Returns the value of {@link #mediumMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMediumMin()
	{
		return MysqlStringItem.mediumMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #mediumMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMediumMin(final java.lang.String mediumMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.mediumMin.set(this,mediumMin);
	}/**

	 **
	 * Returns the value of {@link #mediumMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMediumMax()
	{
		return MysqlStringItem.mediumMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #mediumMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMediumMax(final java.lang.String mediumMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.mediumMax.set(this,mediumMax);
	}/**

	 **
	 * Returns the value of {@link #longMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getLongMin()
	{
		return MysqlStringItem.longMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #longMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setLongMin(final java.lang.String longMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.longMin.set(this,longMin);
	}/**

	 **
	 * Returns the value of {@link #longMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getLongMax()
	{
		return MysqlStringItem.longMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #longMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setLongMax(final java.lang.String longMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		MysqlStringItem.longMax.set(this,longMax);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for mysqlStringItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	public static final com.exedio.cope.Type<MysqlStringItem> TYPE = com.exedio.cope.TypesBound.newType(MysqlStringItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private MysqlStringItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
