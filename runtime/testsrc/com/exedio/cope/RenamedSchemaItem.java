/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope;

@CopeSchemaName("SchemaItem") class RenamedSchemaItem extends Item
{
	static final StringField someNotNullString = new StringField();
	@CopeSchemaName("zackItem")
	static final ItemField<RenamedSchemaTargetItem> someItem = newItemField(RenamedSchemaTargetItem.class).optional();
	
	@CopeSchemaName("UNIQUE_S")
	static final StringField uniqueString = new StringField().optional().unique();
	
	static final StringField doubleUnique1 = new StringField();
	static final IntegerField doubleUnique2 = new IntegerField();
	@CopeSchemaName("zackDoubleUnique")
	static final UniqueConstraint doubleUnique = new UniqueConstraint(doubleUnique1, doubleUnique2);
	
	@CopeSchemaName("MIN_4")
	static final StringField min4 = new StringField().optional().lengthMin(4);
	
	/**

	 **
	 * Creates a new RenamedSchemaItem with all the fields initially needed.
	 * @param someNotNullString the initial value for field {@link #someNotNullString}.
	 * @param doubleUnique1 the initial value for field {@link #doubleUnique1}.
	 * @param doubleUnique2 the initial value for field {@link #doubleUnique2}.
	 * @throws com.exedio.cope.MandatoryViolationException if someNotNullString, doubleUnique1 is null.
	 * @throws com.exedio.cope.StringLengthViolationException if someNotNullString, doubleUnique1 violates its length constraint.
	 * @throws com.exedio.cope.UniqueViolationException if doubleUnique1, doubleUnique2 is not unique.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	RenamedSchemaItem(
				final java.lang.String someNotNullString,
				final java.lang.String doubleUnique1,
				final int doubleUnique2)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException,
				com.exedio.cope.UniqueViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			RenamedSchemaItem.someNotNullString.map(someNotNullString),
			RenamedSchemaItem.doubleUnique1.map(doubleUnique1),
			RenamedSchemaItem.doubleUnique2.map(doubleUnique2),
		});
	}/**

	 **
	 * Creates a new RenamedSchemaItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private RenamedSchemaItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private RenamedSchemaItem(final com.exedio.cope.ActivationParameters ap)
	{
		super(ap);
	}/**

	 **
	 * Returns the value of {@link #someNotNullString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getSomeNotNullString()
	{
		return RenamedSchemaItem.someNotNullString.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someNotNullString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeNotNullString(final java.lang.String someNotNullString)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		RenamedSchemaItem.someNotNullString.set(this,someNotNullString);
	}/**

	 **
	 * Returns the value of {@link #someItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final com.exedio.cope.RenamedSchemaTargetItem getSomeItem()
	{
		return RenamedSchemaItem.someItem.get(this);
	}/**

	 **
	 * Sets a new value for {@link #someItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setSomeItem(final com.exedio.cope.RenamedSchemaTargetItem someItem)
	{
		RenamedSchemaItem.someItem.set(this,someItem);
	}/**

	 **
	 * Returns the value of {@link #uniqueString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getUniqueString()
	{
		return RenamedSchemaItem.uniqueString.get(this);
	}/**

	 **
	 * Sets a new value for {@link #uniqueString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setUniqueString(final java.lang.String uniqueString)
			throws
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		RenamedSchemaItem.uniqueString.set(this,uniqueString);
	}/**

	 **
	 * Finds a renamedSchemaItem by it's {@link #uniqueString}.
	 * @param uniqueString shall be equal to field {@link #uniqueString}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.for public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final RenamedSchemaItem forUniqueString(final java.lang.String uniqueString)
	{
		return RenamedSchemaItem.uniqueString.searchUnique(RenamedSchemaItem.class,uniqueString);
	}/**

	 **
	 * Finds a renamedSchemaItem by it's {@link #uniqueString}.
	 * @deprecated use for{@link #uniqueString} instead.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.findBy public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@Deprecated
	static final RenamedSchemaItem findByUniqueString(final java.lang.String uniqueString)
	{
		return RenamedSchemaItem.uniqueString.searchUnique(RenamedSchemaItem.class,uniqueString);
	}/**

	 **
	 * Returns the value of {@link #doubleUnique1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getDoubleUnique1()
	{
		return RenamedSchemaItem.doubleUnique1.get(this);
	}/**

	 **
	 * Sets a new value for {@link #doubleUnique1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setDoubleUnique1(final java.lang.String doubleUnique1)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		RenamedSchemaItem.doubleUnique1.set(this,doubleUnique1);
	}/**

	 **
	 * Returns the value of {@link #doubleUnique2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getDoubleUnique2()
	{
		return RenamedSchemaItem.doubleUnique2.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #doubleUnique2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setDoubleUnique2(final int doubleUnique2)
			throws
				com.exedio.cope.UniqueViolationException
	{
		RenamedSchemaItem.doubleUnique2.set(this,doubleUnique2);
	}/**

	 **
	 * Finds a renamedSchemaItem by it's unique fields.
	 * @param doubleUnique1 shall be equal to field {@link #doubleUnique1}.
	 * @param doubleUnique2 shall be equal to field {@link #doubleUnique2}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	static final RenamedSchemaItem forDoubleUnique(final java.lang.String doubleUnique1,final int doubleUnique2)
	{
		return RenamedSchemaItem.doubleUnique.search(RenamedSchemaItem.class,doubleUnique1,doubleUnique2);
	}/**

	 **
	 * Finds a renamedSchemaItem by it's unique fields.
	 * @deprecated use forDoubleUnique instead.
	 * @param doubleUnique1 shall be equal to field {@link #doubleUnique1}.
	 * @param doubleUnique2 shall be equal to field {@link #doubleUnique2}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@Deprecated
	static final RenamedSchemaItem findByDoubleUnique(final java.lang.String doubleUnique1,final int doubleUnique2)
	{
		return RenamedSchemaItem.doubleUnique.search(RenamedSchemaItem.class,doubleUnique1,doubleUnique2);
	}/**

	 **
	 * Returns the value of {@link #min4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getMin4()
	{
		return RenamedSchemaItem.min4.get(this);
	}/**

	 **
	 * Sets a new value for {@link #min4}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setMin4(final java.lang.String min4)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		RenamedSchemaItem.min4.set(this,min4);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for renamedSchemaItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<RenamedSchemaItem> TYPE = com.exedio.cope.TypesBound.newType(RenamedSchemaItem.class)
;}
