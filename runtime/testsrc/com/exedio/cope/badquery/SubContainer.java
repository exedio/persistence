/*
 * Copyright (C) 2004-2011  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.badquery;

import com.exedio.cope.BooleanField;
import com.exedio.cope.ItemField;

public class SubContainer extends SuperContainer
{
	public static final ItemField<SuperContainer> superContainer = newItemField(SuperContainer.class).toFinal();
	public static final BooleanField subflag = new BooleanField().optional().defaultTo(false);

	/**

	 **
	 * Creates a new SubContainer with all the fields initially needed.
	 * @param code the initial value for field {@link #code}.
	 * @param queryItem the initial value for field {@link #queryItem}.
	 * @param superflag the initial value for field {@link #superflag}.
	 * @param superContainer the initial value for field {@link #superContainer}.
	 * @throws com.exedio.cope.MandatoryViolationException if code, queryItem, superContainer is null.
	 * @throws com.exedio.cope.StringLengthViolationException if code violates its length constraint.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	SubContainer(
				final java.lang.String code,
				final QueryItem queryItem,
				final boolean superflag,
				final SuperContainer superContainer)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			com.exedio.cope.badquery.SuperItem.code.map(code),
			com.exedio.cope.badquery.SuperContainer.queryItem.map(queryItem),
			com.exedio.cope.badquery.SuperContainer.superflag.map(superflag),
			SubContainer.superContainer.map(superContainer),
		});
	}/**

	 **
	 * Creates a new SubContainer and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private SubContainer(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private SubContainer(final com.exedio.cope.ActivationParameters ap)
	{
		super(ap);
	}/**

	 **
	 * Returns the value of {@link #superContainer}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final SuperContainer getSuperContainer()
	{
		return SubContainer.superContainer.get(this);
	}/**

	 **
	 * Returns the value of {@link #subflag}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final java.lang.Boolean getSubflag()
	{
		return SubContainer.subflag.get(this);
	}/**

	 **
	 * Sets a new value for {@link #subflag}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setSubflag(final java.lang.Boolean subflag)
	{
		SubContainer.subflag.set(this,subflag);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for subContainer.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	public static final com.exedio.cope.Type<SubContainer> TYPE = com.exedio.cope.TypesBound.newType(SubContainer.class)
;}
