package com.exedio.cope.pattern;

import com.exedio.cope.Item;
import com.exedio.cope.ItemField;

class PartOfWithOptionalContainerItem extends Item
{
	/** @cope.initial */
	static final ItemField<PartOfContainerItem> container = ItemField.create(PartOfContainerItem.class).optional();

	static final PartOf<PartOfContainerItem> parts = PartOf.create(container);
	
/**

	 **
	 * Creates a new PartOfWithOptionalContainerItem with all the fields initially needed.
	 * @param container the initial value for field {@link #container}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	PartOfWithOptionalContainerItem(
				final PartOfContainerItem container)
	{
		this(new com.exedio.cope.SetValue<?>[]{
			PartOfWithOptionalContainerItem.container.map(container),
		});
	}/**

	 **
	 * Creates a new PartOfWithOptionalContainerItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	protected PartOfWithOptionalContainerItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #container}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final PartOfContainerItem getContainer()
	{
		return PartOfWithOptionalContainerItem.container.get(this);
	}/**

	 **
	 * Sets a new value for {@link #container}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setContainer(final PartOfContainerItem container)
	{
		PartOfWithOptionalContainerItem.container.set(this,container);
	}/**

	 **
	 * Returns the container this item is part of by {@link #parts}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getContainer public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final PartOfContainerItem getPartsContainer()
	{
		return PartOfWithOptionalContainerItem.parts.getContainer(this);
	}/**

	 **
	 * Returns the parts of the given container.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getParts public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<PartOfWithOptionalContainerItem> getPartsParts(final PartOfContainerItem container)
	{
		return PartOfWithOptionalContainerItem.parts.getParts(PartOfWithOptionalContainerItem.class,container);
	}/**

	 **
	 * Returns the parts of the given container matching the given condition.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getParts public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final java.util.List<PartOfWithOptionalContainerItem> getPartsParts(final PartOfContainerItem container,final com.exedio.cope.Condition condition)
	{
		return PartOfWithOptionalContainerItem.parts.getParts(PartOfWithOptionalContainerItem.class,container,condition);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for partOfWithOptionalContainerItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<PartOfWithOptionalContainerItem> TYPE = com.exedio.cope.TypesBound.newType(PartOfWithOptionalContainerItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	protected PartOfWithOptionalContainerItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
