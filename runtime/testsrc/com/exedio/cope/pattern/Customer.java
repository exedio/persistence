/*
 * Copyright (C) 2004-2008  exedio GmbH (www.exedio.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

package com.exedio.cope.pattern;

import java.security.SecureRandom;

import com.exedio.cope.Item;
import com.exedio.cope.StringField;
import com.exedio.cope.util.CharsetName;

/**
 * @cope.generic.constructor public
 * @cope.constructor none
 */
final class Customer extends Item
{
	static final StringField email = new StringField().unique();

	static final NestingHashMigration password = new NestingHashMigration(
			MessageDigestHashAlgorithm.create(CharsetName.UTF8, "MD5", 0, null, 1),
			MessageDigestHashAlgorithm.create(CharsetName.UTF8, "MD5", 1, new SecureRandom(), 1));


	Customer(
				final java.lang.String email,
				final java.lang.String password)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringCharSetViolationException,
				com.exedio.cope.StringLengthViolationException,
				com.exedio.cope.UniqueViolationException
	{
		this(new com.exedio.cope.SetValue<?>[]{
			Customer.email.map(email),
			Customer.password.map(password),
		});
	}

	/**

	 **
	 * Creates a new Customer and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	public Customer(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #email}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final java.lang.String getEmail()
	{
		return Customer.email.get(this);
	}/**

	 **
	 * Sets a new value for {@link #email}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setEmail(final java.lang.String email)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		Customer.email.set(this,email);
	}/**

	 **
	 * Finds a customer by it's {@link #email}.
	 * @param email shall be equal to field {@link #email}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.for public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final Customer forEmail(final java.lang.String email)
	{
		return Customer.email.searchUnique(Customer.class,email);
	}/**

	 **
	 * Returns whether the given value corresponds to the hash in {@link #password}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.check public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final boolean checkPassword(final java.lang.String password)
	{
		return Customer.password.check(this,password);
	}/**

	 **
	 * Wastes (almost) as much cpu cycles, as a call to <tt>checkPassword</tt> would have needed.
	 * Needed to prevent Timing Attacks.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.blind public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final void blindPassword(final java.lang.String password)
	{
		Customer.password.blind(password);
	}/**

	 **
	 * Sets a new value for {@link #password}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setPassword(final java.lang.String password)
	{
		Customer.password.set(this,password);
	}/**

	 **
	 * Re-hashes all old passwords to new ones.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.migrate public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final void migratePassword(final com.exedio.cope.util.JobContext context)
	{
		Customer.password.migrate(Customer.class,context);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for customer.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<Customer> TYPE = com.exedio.cope.TypesBound.newType(Customer.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private Customer(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
