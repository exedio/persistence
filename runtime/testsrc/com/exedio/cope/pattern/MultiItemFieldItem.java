/*
 * Copyright (C) 2004-2015  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.pattern;

import com.exedio.cope.Item;

final class MultiItemFieldItem extends Item
{
	/**
	 * @cope.ignore
	 */
	static final MultiItemField<MultiItemFieldItemInterface> field = MultiItemField.create(
			MultiItemFieldItemInterface.class,
			MultiItemFieldItemInterfaceImplementationA.class, MultiItemFieldItemInterfaceImplementationB.class);

	/**
	 * @cope.ignore
	 */
	static final MultiItemField<MultiItemFieldItemInterface> optionalField = MultiItemField.create(
			MultiItemFieldItemInterface.class,
			MultiItemFieldItemInterfaceImplementationA.class, MultiItemFieldItemInterfaceImplementationB.class)
			.optional();

	/**
	 * @cope.ignore
	 */
	static final MultiItemField<MultiItemFieldItemInterface> uniqueField = MultiItemField.create(
			MultiItemFieldItemInterface.class,
			MultiItemFieldItemInterfaceImplementationA.class, MultiItemFieldItemInterfaceImplementationB.class).optional().unique();

	/**
	 * @cope.ignore
	 */
	static final PartOf<MultiItemFieldItemInterfaceImplementationA> partOfClassA = PartOf.create(field.of(MultiItemFieldItemInterfaceImplementationA.class));

	MultiItemFieldItem(final MultiItemFieldItemInterface field)
			throws com.exedio.cope.MandatoryViolationException
	{
		this(new com.exedio.cope.SetValue<?>[]
		{
				MultiItemFieldItem.field.map(field),
		});
	}

	MultiItemFieldItemInterface getField()
	{
		return field.get(this);
	}

	void setField(final MultiItemFieldItemInterface value)
	{
		this.set(MultiItemFieldItem.field.map(value));
	}

	MultiItemFieldItemInterface getOptionalField()
	{
		return optionalField.get(this);
	}

	void setOptionalField(final MultiItemFieldItemInterface value)
	{
		this.set(MultiItemFieldItem.optionalField.map(value));
	}

	MultiItemFieldItemInterface getUniqueField()
	{
		return uniqueField.get(this);
	}

	void setUniqueField(final MultiItemFieldItemInterface value)
	{
		this.set(MultiItemFieldItem.uniqueField.map(value));
	}


	/**

	 **
	 * Creates a new MultiItemFieldItem with all the fields initially needed.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	MultiItemFieldItem()
	{
		this(new com.exedio.cope.SetValue<?>[]{
		});
	}/**

	 **
	 * Creates a new MultiItemFieldItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private MultiItemFieldItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for multiItemFieldItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<MultiItemFieldItem> TYPE = com.exedio.cope.TypesBound.newType(MultiItemFieldItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	@SuppressWarnings("unused") private MultiItemFieldItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
