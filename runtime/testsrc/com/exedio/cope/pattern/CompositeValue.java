/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.pattern;

import com.exedio.cope.BooleanField;
import com.exedio.cope.EnumField;
import com.exedio.cope.IntegerField;
import com.exedio.cope.ItemField;
import com.exedio.cope.StringField;

public final class CompositeValue extends Composite
{
	enum AnEnumClass
	{
		anEnumConstant1, anEnumConstant2;
	}
	
	public static final StringField aString = new StringField();
	public static final IntegerField anInt = new IntegerField();
	public static final EnumField<AnEnumClass> anEnum = newEnumField(AnEnumClass.class);
	public static final ItemField<CompositeOptionalItem> anItem = newItemField(CompositeOptionalItem.class);
	
	// test, that these fields do not become fields of the composite value
	final transient BooleanField notStatic = new BooleanField();
	static BooleanField notFinal = new BooleanField();
	static final Object noFeature = new BooleanField();
	
	/**

	 **
	 * Creates a new CompositeValue with all the fields initially needed.
	 * @param aString the initial value for field {@link #aString}.
	 * @param anInt the initial value for field {@link #anInt}.
	 * @param anEnum the initial value for field {@link #anEnum}.
	 * @param anItem the initial value for field {@link #anItem}.
	 * @throws com.exedio.cope.MandatoryViolationException if aString, anEnum, anItem is null.
	 * @throws com.exedio.cope.StringLengthViolationException if aString violates its length constraint.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	public CompositeValue(
				final java.lang.String aString,
				final int anInt,
				final AnEnumClass anEnum,
				final com.exedio.cope.pattern.CompositeOptionalItem anItem)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			CompositeValue.aString.map(aString),
			CompositeValue.anInt.map(anInt),
			CompositeValue.anEnum.map(anEnum),
			CompositeValue.anItem.map(anItem),
		});
	}/**

	 **
	 * Creates a new CompositeValue and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private CompositeValue(final com.exedio.cope.SetValue... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #aString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final java.lang.String getAString()
	{
		return get(CompositeValue.aString);
	}/**

	 **
	 * Sets a new value for {@link #aString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setAString(final java.lang.String aString)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		set(CompositeValue.aString,aString);
	}/**

	 **
	 * Returns the value of {@link #anInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final int getAnInt()
	{
		return getMandatory(CompositeValue.anInt);
	}/**

	 **
	 * Sets a new value for {@link #anInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setAnInt(final int anInt)
	{
		set(CompositeValue.anInt,anInt);
	}/**

	 **
	 * Returns the value of {@link #anEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final AnEnumClass getAnEnum()
	{
		return get(CompositeValue.anEnum);
	}/**

	 **
	 * Sets a new value for {@link #anEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setAnEnum(final AnEnumClass anEnum)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		set(CompositeValue.anEnum,anEnum);
	}/**

	 **
	 * Returns the value of {@link #anItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final com.exedio.cope.pattern.CompositeOptionalItem getAnItem()
	{
		return get(CompositeValue.anItem);
	}/**

	 **
	 * Sets a new value for {@link #anItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setAnItem(final com.exedio.cope.pattern.CompositeOptionalItem anItem)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		set(CompositeValue.anItem,anItem);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;}
