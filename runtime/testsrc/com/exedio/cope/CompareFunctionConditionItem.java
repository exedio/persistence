package com.exedio.cope;


import java.util.Date;

public class CompareFunctionConditionItem extends Item
{
	public static final StringField leftString = new StringField();
	public static final StringField rightString = new StringField();

	public static final IntegerField leftInt = new IntegerField();
	public static final IntegerField rightInt = new IntegerField();

	public static final LongField leftLong = new LongField();
	public static final LongField rightLong = new LongField();

	public static final DoubleField leftDouble = new DoubleField();
	public static final DoubleField rightDouble = new DoubleField();

	public static final DateField leftDate = new DateField();
	public static final DateField rightDate = new DateField();

	public static final EnumField<XEnum> leftEnum = newEnumField(XEnum.class);
	public static final EnumField<XEnum> rightEnum = newEnumField(XEnum.class);

	public static enum XEnum
	{
		V1, V2, V3, V4, V5;
	}
	
	static final Date date = new Date(1087365298214l);

	public CompareFunctionConditionItem(
			final java.lang.String leftString,
			final int leftInt,
			final long leftLong,
			final double leftDouble,
			final java.util.Date leftDate,
			final XEnum leftEnum)
			throws
				com.exedio.cope.LengthViolationException,
				com.exedio.cope.MandatoryViolationException
	{
		this(leftString, "string3", leftInt, 3, leftLong, 13l, leftDouble, 2.3, leftDate, date, leftEnum, XEnum.V3);
	}
	
	/**

	 **
	 * Creates a new CompareFunctionConditionItem with all the fields initially needed.
	 * @param leftString the initial value for field {@link #leftString}.
	 * @param rightString the initial value for field {@link #rightString}.
	 * @param leftInt the initial value for field {@link #leftInt}.
	 * @param rightInt the initial value for field {@link #rightInt}.
	 * @param leftLong the initial value for field {@link #leftLong}.
	 * @param rightLong the initial value for field {@link #rightLong}.
	 * @param leftDouble the initial value for field {@link #leftDouble}.
	 * @param rightDouble the initial value for field {@link #rightDouble}.
	 * @param leftDate the initial value for field {@link #leftDate}.
	 * @param rightDate the initial value for field {@link #rightDate}.
	 * @param leftEnum the initial value for field {@link #leftEnum}.
	 * @param rightEnum the initial value for field {@link #rightEnum}.
	 * @throws com.exedio.cope.LengthViolationException if leftString, rightString violates its length constraint.
	 * @throws com.exedio.cope.MandatoryViolationException if leftString, rightString, leftDate, rightDate, leftEnum, rightEnum is null.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	public CompareFunctionConditionItem(
				final java.lang.String leftString,
				final java.lang.String rightString,
				final int leftInt,
				final int rightInt,
				final long leftLong,
				final long rightLong,
				final double leftDouble,
				final double rightDouble,
				final java.util.Date leftDate,
				final java.util.Date rightDate,
				final XEnum leftEnum,
				final XEnum rightEnum)
			throws
				com.exedio.cope.LengthViolationException,
				com.exedio.cope.MandatoryViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			CompareFunctionConditionItem.leftString.map(leftString),
			CompareFunctionConditionItem.rightString.map(rightString),
			CompareFunctionConditionItem.leftInt.map(leftInt),
			CompareFunctionConditionItem.rightInt.map(rightInt),
			CompareFunctionConditionItem.leftLong.map(leftLong),
			CompareFunctionConditionItem.rightLong.map(rightLong),
			CompareFunctionConditionItem.leftDouble.map(leftDouble),
			CompareFunctionConditionItem.rightDouble.map(rightDouble),
			CompareFunctionConditionItem.leftDate.map(leftDate),
			CompareFunctionConditionItem.rightDate.map(rightDate),
			CompareFunctionConditionItem.leftEnum.map(leftEnum),
			CompareFunctionConditionItem.rightEnum.map(rightEnum),
		});
	}/**

	 **
	 * Creates a new CompareFunctionConditionItem and sets the given fields initially.
	 * This constructor is called by {@link com.exedio.cope.Type#newItem Type.newItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private CompareFunctionConditionItem(final com.exedio.cope.SetValue[] setValues)
	{
		super(setValues);
	}/**

	 **
	 * Reactivation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.util.ReactivationConstructorDummy,int)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private CompareFunctionConditionItem(com.exedio.cope.util.ReactivationConstructorDummy d,final int pk)
	{
		super(d,pk);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final java.lang.String getLeftString()
	{
		return CompareFunctionConditionItem.leftString.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftString(final java.lang.String leftString)
			throws
				com.exedio.cope.LengthViolationException,
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.leftString.set(this,leftString);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final java.lang.String getRightString()
	{
		return CompareFunctionConditionItem.rightString.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightString}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightString(final java.lang.String rightString)
			throws
				com.exedio.cope.LengthViolationException,
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.rightString.set(this,rightString);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final int getLeftInt()
	{
		return CompareFunctionConditionItem.leftInt.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftInt(final int leftInt)
	{
		CompareFunctionConditionItem.leftInt.set(this,leftInt);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final int getRightInt()
	{
		return CompareFunctionConditionItem.rightInt.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightInt}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightInt(final int rightInt)
	{
		CompareFunctionConditionItem.rightInt.set(this,rightInt);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftLong}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final long getLeftLong()
	{
		return CompareFunctionConditionItem.leftLong.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftLong}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftLong(final long leftLong)
	{
		CompareFunctionConditionItem.leftLong.set(this,leftLong);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightLong}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final long getRightLong()
	{
		return CompareFunctionConditionItem.rightLong.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightLong}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightLong(final long rightLong)
	{
		CompareFunctionConditionItem.rightLong.set(this,rightLong);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftDouble}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final double getLeftDouble()
	{
		return CompareFunctionConditionItem.leftDouble.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftDouble}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftDouble(final double leftDouble)
	{
		CompareFunctionConditionItem.leftDouble.set(this,leftDouble);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightDouble}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final double getRightDouble()
	{
		return CompareFunctionConditionItem.rightDouble.getMandatory(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightDouble}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightDouble(final double rightDouble)
	{
		CompareFunctionConditionItem.rightDouble.set(this,rightDouble);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final java.util.Date getLeftDate()
	{
		return CompareFunctionConditionItem.leftDate.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftDate(final java.util.Date leftDate)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.leftDate.set(this,leftDate);
	}/**

	 **
	 * Sets the current date for the date field {@link #leftDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	public final void touchLeftDate()
	{
		CompareFunctionConditionItem.leftDate.touch(this);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final java.util.Date getRightDate()
	{
		return CompareFunctionConditionItem.rightDate.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightDate(final java.util.Date rightDate)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.rightDate.set(this,rightDate);
	}/**

	 **
	 * Sets the current date for the date field {@link #rightDate}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	public final void touchRightDate()
	{
		CompareFunctionConditionItem.rightDate.touch(this);
	}/**

	 **
	 * Returns the value of the persistent field {@link #leftEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final XEnum getLeftEnum()
	{
		return CompareFunctionConditionItem.leftEnum.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #leftEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setLeftEnum(final XEnum leftEnum)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.leftEnum.set(this,leftEnum);
	}/**

	 **
	 * Returns the value of the persistent field {@link #rightEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final|boolean-as-is</tt> in the comment of the field.
	 */
	public final XEnum getRightEnum()
	{
		return CompareFunctionConditionItem.rightEnum.get(this);
	}/**

	 **
	 * Sets a new value for the persistent field {@link #rightEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	public final void setRightEnum(final XEnum rightEnum)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		CompareFunctionConditionItem.rightEnum.set(this,rightEnum);
	}/**

	 **
	 * The persistent type information for compareFunctionConditionItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	public static final com.exedio.cope.Type<CompareFunctionConditionItem> TYPE = newType(CompareFunctionConditionItem.class)
;}
