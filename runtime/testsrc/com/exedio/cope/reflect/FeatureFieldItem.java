/*
 * Copyright (C) 2004-2015  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.reflect;

import com.exedio.cope.CopeSchemaName;
import com.exedio.cope.Feature;
import com.exedio.cope.IntegerField;
import com.exedio.cope.Item;
import com.exedio.cope.StringField;

public final class FeatureFieldItem extends Item
{
	static final IntegerField integer1 = new IntegerField().optional();
	static final IntegerField integer2 = new IntegerField().optional();
	static final IntegerField integer3 = new IntegerField().optional();
	static final StringField string1 = new StringField().optional();
	static final StringField string2 = new StringField().optional();
	static final StringField string3 = new StringField().optional();

	static final FeatureField<Feature> feature = FeatureField.create();
	static final FeatureField<Feature> featureFinal = FeatureField.create().toFinal();
	static final FeatureField<Feature> featureOptional = FeatureField.create().optional();
	static final FeatureField<Feature> featureUnique = FeatureField.create().optional().unique();
	@CopeSchemaName("featureNewname")
	static final FeatureField<Feature> featureRenamed = FeatureField.create().optional();
	static final FeatureField<StringField> string = FeatureField.create(StringField.class).optional();

	/**

	 **
	 * Creates a new FeatureFieldItem with all the fields initially needed.
	 * @param feature the initial value for field {@link #feature}.
	 * @param featureFinal the initial value for field {@link #featureFinal}.
	 * @throws com.exedio.cope.MandatoryViolationException if feature, featureFinal is null.
	 * @throws com.exedio.cope.StringLengthViolationException if feature, featureFinal violates its length constraint.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	FeatureFieldItem(
				final Feature feature,
				final Feature featureFinal)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		this(new com.exedio.cope.SetValue<?>[]{
			FeatureFieldItem.feature.map(feature),
			FeatureFieldItem.featureFinal.map(featureFinal),
		});
	}/**

	 **
	 * Creates a new FeatureFieldItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private FeatureFieldItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #integer1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.Integer getInteger1()
	{
		return FeatureFieldItem.integer1.get(this);
	}/**

	 **
	 * Sets a new value for {@link #integer1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setInteger1(final java.lang.Integer integer1)
	{
		FeatureFieldItem.integer1.set(this,integer1);
	}/**

	 **
	 * Returns the value of {@link #integer2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.Integer getInteger2()
	{
		return FeatureFieldItem.integer2.get(this);
	}/**

	 **
	 * Sets a new value for {@link #integer2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setInteger2(final java.lang.Integer integer2)
	{
		FeatureFieldItem.integer2.set(this,integer2);
	}/**

	 **
	 * Returns the value of {@link #integer3}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.Integer getInteger3()
	{
		return FeatureFieldItem.integer3.get(this);
	}/**

	 **
	 * Sets a new value for {@link #integer3}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setInteger3(final java.lang.Integer integer3)
	{
		FeatureFieldItem.integer3.set(this,integer3);
	}/**

	 **
	 * Returns the value of {@link #string1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getString1()
	{
		return FeatureFieldItem.string1.get(this);
	}/**

	 **
	 * Sets a new value for {@link #string1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setString1(final java.lang.String string1)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.string1.set(this,string1);
	}/**

	 **
	 * Returns the value of {@link #string2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getString2()
	{
		return FeatureFieldItem.string2.get(this);
	}/**

	 **
	 * Sets a new value for {@link #string2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setString2(final java.lang.String string2)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.string2.set(this,string2);
	}/**

	 **
	 * Returns the value of {@link #string3}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getString3()
	{
		return FeatureFieldItem.string3.get(this);
	}/**

	 **
	 * Sets a new value for {@link #string3}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setString3(final java.lang.String string3)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.string3.set(this,string3);
	}/**

	 **
	 * Returns the value of {@link #feature}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final Feature getFeature()
	{
		return FeatureFieldItem.feature.get(this);
	}/**

	 **
	 * Sets a new value for {@link #feature}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeature(final Feature feature)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.feature.set(this,feature);
	}/**

	 **
	 * Returns the value of {@link #featureFinal}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final Feature getFeatureFinal()
	{
		return FeatureFieldItem.featureFinal.get(this);
	}/**

	 **
	 * Returns the value of {@link #featureOptional}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final Feature getFeatureOptional()
	{
		return FeatureFieldItem.featureOptional.get(this);
	}/**

	 **
	 * Sets a new value for {@link #featureOptional}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeatureOptional(final Feature featureOptional)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.featureOptional.set(this,featureOptional);
	}/**

	 **
	 * Returns the value of {@link #featureUnique}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final Feature getFeatureUnique()
	{
		return FeatureFieldItem.featureUnique.get(this);
	}/**

	 **
	 * Sets a new value for {@link #featureUnique}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeatureUnique(final Feature featureUnique)
			throws
				com.exedio.cope.UniqueViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.featureUnique.set(this,featureUnique);
	}/**

	 **
	 * Finds a featureFieldItem by it's {@link #featureUnique}.
	 * @param featureUnique shall be equal to field {@link #featureUnique}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.for public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final FeatureFieldItem forFeatureUnique(final Feature featureUnique)
	{
		return FeatureFieldItem.featureUnique.searchUnique(FeatureFieldItem.class,featureUnique);
	}/**

	 **
	 * Returns the value of {@link #featureRenamed}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final Feature getFeatureRenamed()
	{
		return FeatureFieldItem.featureRenamed.get(this);
	}/**

	 **
	 * Sets a new value for {@link #featureRenamed}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setFeatureRenamed(final Feature featureRenamed)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.featureRenamed.set(this,featureRenamed);
	}/**

	 **
	 * Returns the value of {@link #string}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final StringField getString()
	{
		return FeatureFieldItem.string.get(this);
	}/**

	 **
	 * Sets a new value for {@link #string}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setString(final StringField string)
			throws
				com.exedio.cope.StringLengthViolationException
	{
		FeatureFieldItem.string.set(this,string);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for featureFieldItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	public static final com.exedio.cope.Type<FeatureFieldItem> TYPE = com.exedio.cope.TypesBound.newType(FeatureFieldItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	@SuppressWarnings("unused") private FeatureFieldItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
