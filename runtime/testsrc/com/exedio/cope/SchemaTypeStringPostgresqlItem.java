/*
 * Copyright (C) 2004-2015  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope;

/**
 * @cope.constructor none
 * @cope.generic.constructor none
 */
public final class SchemaTypeStringPostgresqlItem extends Item
{
	static final StringField varcharMin = new StringField().lengthMax(1);
	static final StringField varcharMax = new StringField().lengthMax(10485760);
	static final StringField textMin    = new StringField().lengthMax(10485761);
	static final StringField textMax    = new StringField().lengthMax(Integer.MAX_VALUE);


	/**

	 **
	 * Returns the value of {@link #varcharMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getVarcharMin()
	{
		return SchemaTypeStringPostgresqlItem.varcharMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #varcharMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setVarcharMin(final java.lang.String varcharMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaTypeStringPostgresqlItem.varcharMin.set(this,varcharMin);
	}/**

	 **
	 * Returns the value of {@link #varcharMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getVarcharMax()
	{
		return SchemaTypeStringPostgresqlItem.varcharMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #varcharMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setVarcharMax(final java.lang.String varcharMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaTypeStringPostgresqlItem.varcharMax.set(this,varcharMax);
	}/**

	 **
	 * Returns the value of {@link #textMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getTextMin()
	{
		return SchemaTypeStringPostgresqlItem.textMin.get(this);
	}/**

	 **
	 * Sets a new value for {@link #textMin}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setTextMin(final java.lang.String textMin)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaTypeStringPostgresqlItem.textMin.set(this,textMin);
	}/**

	 **
	 * Returns the value of {@link #textMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final java.lang.String getTextMax()
	{
		return SchemaTypeStringPostgresqlItem.textMax.get(this);
	}/**

	 **
	 * Sets a new value for {@link #textMax}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setTextMax(final java.lang.String textMax)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.StringLengthViolationException
	{
		SchemaTypeStringPostgresqlItem.textMax.set(this,textMax);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for schemaTypeStringPostgresqlItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	public static final com.exedio.cope.Type<SchemaTypeStringPostgresqlItem> TYPE = com.exedio.cope.TypesBound.newType(SchemaTypeStringPostgresqlItem.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	@SuppressWarnings("unused") private SchemaTypeStringPostgresqlItem(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
