/*
 * Copyright (C) 2004-2007  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope;

@CopeID("NameSubItemX")
public class NameSubItem extends NameLongNameLongNameLongNameLongNameLongNameLongItem
{
	static final IntegerField unique = new IntegerField().unique();
	static final IntegerField integer = new IntegerField();
	static final ItemField<NameSubItem> item = newItemField(NameSubItem.class);
	static final UniqueConstraint integers = new UniqueConstraint(integer, item);
	
	/**

	 **
	 * Creates a new NameSubItem with all the fields initially needed.
	 * @param code the initial value for field {@link #code}.
	 * @param unique the initial value for field {@link #unique}.
	 * @param integer the initial value for field {@link #integer}.
	 * @param item the initial value for field {@link #item}.
	 * @throws com.exedio.cope.LengthViolationException if code violates its length constraint.
	 * @throws com.exedio.cope.MandatoryViolationException if code, item is null.
	 * @throws com.exedio.cope.UniqueViolationException if code, unique, integer, item is not unique.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	NameSubItem(
				final java.lang.String code,
				final int unique,
				final int integer,
				final NameSubItem item)
			throws
				com.exedio.cope.LengthViolationException,
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.UniqueViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			NameSubItem.code.map(code),
			NameSubItem.unique.map(unique),
			NameSubItem.integer.map(integer),
			NameSubItem.item.map(item),
		});
	}/**

	 **
	 * Creates a new NameSubItem and sets the given fields initially.
	 * This constructor is called by {@link com.exedio.cope.Type#newItem Type.newItem}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private NameSubItem(final com.exedio.cope.SetValue... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Reactivation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.util.ReactivationConstructorDummy,int)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private NameSubItem(final com.exedio.cope.util.ReactivationConstructorDummy d,final int pk)
	{
		super(d,pk);
	}/**

	 **
	 * Returns the value of {@link #unique}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getUnique()
	{
		return NameSubItem.unique.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #unique}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setUnique(final int unique)
			throws
				com.exedio.cope.UniqueViolationException
	{
		NameSubItem.unique.set(this,unique);
	}/**

	 **
	 * Finds a nameSubItem by it's {@link #unique}.
	 * @param unique shall be equal to field {@link #unique}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.finder public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final NameSubItem forUnique(final int unique)
	{
		return NameSubItem.unique.searchUnique(NameSubItem.class,unique);
	}/**

	 **
	 * Finds a nameSubItem by it's {@link #unique}.
	 * @deprecated use for{@link #unique} instead.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.finder public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@Deprecated
	static final NameSubItem findByUnique(final int unique)
	{
		return NameSubItem.unique.searchUnique(NameSubItem.class,unique);
	}/**

	 **
	 * Returns the value of {@link #integer}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int getInteger()
	{
		return NameSubItem.integer.getMandatory(this);
	}/**

	 **
	 * Sets a new value for {@link #integer}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setInteger(final int integer)
			throws
				com.exedio.cope.UniqueViolationException
	{
		NameSubItem.integer.set(this,integer);
	}/**

	 **
	 * Returns the value of {@link #item}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.getter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final NameSubItem getItem()
	{
		return NameSubItem.item.get(this);
	}/**

	 **
	 * Sets a new value for {@link #item}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.setter public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void setItem(final NameSubItem item)
			throws
				com.exedio.cope.MandatoryViolationException,
				com.exedio.cope.UniqueViolationException
	{
		NameSubItem.item.set(this,item);
	}/**

	 **
	 * Finds a nameSubItem by it's unique fields.
	 * @param integer shall be equal to field {@link #integer}.
	 * @param item shall be equal to field {@link #item}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	static final NameSubItem forIntegers(final int integer,final NameSubItem item)
	{
		return NameSubItem.integers.searchUnique(NameSubItem.class,integer,item);
	}/**

	 **
	 * Finds a nameSubItem by it's unique fields.
	 * @deprecated use forIntegers instead.
	 * @param integer shall be equal to field {@link #integer}.
	 * @param item shall be equal to field {@link #item}.
	 * @return null if there is no matching item.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@Deprecated
	static final NameSubItem findByIntegers(final int integer,final NameSubItem item)
	{
		return NameSubItem.integers.searchUnique(NameSubItem.class,integer,item);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for nameSubItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	public static final com.exedio.cope.Type<NameSubItem> TYPE = newType(NameSubItem.class)
;}
