
CHANGELOG for cope util

This file lists all changes relevant for the user - especially all
API changes and new features recommended for most users. The log may
omit bug fixes.
The items are sorted inversely, i.e. latest items are on top

--------------------------------------------------------------------------
* JobContext#deferOrStopIfRequested, #requestsDeferral and #sleepAndStopIfRequested added.
	This breaks backwards API compatibility.
* JobContext#requestedToStop dropped.
	Was deprecated some long time ago.
	This breaks backwards API compatibility.
* @ServiceProperties added
* Properties#valueService added
* Properties#valueMessageDigest added
* Properties#getOrphanedKeys added
* Stricter CharSet consistency checks: Areas of valid characters must be separated by at least one invalid character.
	If you use com.exedio.cope.pattern.Media, make sure you have at least cope build 9410 - otherwise instantiation
	of Media features (and hence model setup) will fail.
* CharSet.EMAIL is now deprecated, use one of CharSet.EMAIL_* instead
  (one-to-one replacement is CharSet.EMAIL_RESTRICTIVE)
* Properties: workaround for javac problem with method value(String, Factory):
		error: reference to value is ambiguous
	Use new method valnp instead.
* Properties do support Duration
* Day#toLocalDate/from(LocalDate) added
* requires JDK 1.8.0_60
* Properties do support enum, added
	value(String key, Class<Enum> valueClass) and
	value(String key, Enum defaultValue)
* added ivy configurations 'sources' and 'changelog'
	sources and changelog won't be included in 'runtime' config per default anymore
* Properties#newException added
* TimeZoneStrict added
* requires JDK 1.7u6
* IllegalPropertiesException added
* bugfix: PrefixSource nested twice did nest the wrong way,
	did also affect PropertiesField.
* CharSet#getRegularExpression escapes non-ASCII and control characters
* CharSet#isSubsetOfAscii added
* bugfix: Day requires TimeZone where needed
	old API was deprecated
* bugfix: Day#hashCode produces distinct values for days like 2/5/2005 and 5/2/2005
* Pool will not fail anymore, if Factory#isValidOnPut returns false.
	Instead of throwing an IllegalArgumentException (invalid on put)
	the pooled object is silently dropped. Any logging should be done by
	isValidOnPut itself.
	This breaks backwards API compatibility.
* Properties#fieldFile becomes mandatory
	This breaks backwards API compatibility.
* Clock added and used by Day
* bugfix: Pool get counter is incremented even if create fails
* bugfix: Pool fails with idleLimit==idleInitial on first put
* Sources#load(URL) added
* Sources#cascade added
* constructor Properties(Source source) added,
	is equivalent to Properties(source, null) which has been deprecated
* StringField#hide() replaced by Properties#valueHidden
	This breaks backwards API compatibility since svn24386 jenkins245copeutil 2012-09-21_21-44-57
* Properties supports value-methods and optional nesting
* Sources#checkKey added
* Properties supports nesting
* SequenceChecker is and always was not suitable for concurrent access.
	Certain internal states are not volatile anymore.
* JobContext#requestedToStop deprecated
* CharsetName added.
* add Day#after(Day) method
* add Day#before(Day) method
* add JobContext#stopIfRequested()
* deprecate Interrupter in favour of JobContext
* add JobContexts
* add ProxyJobContext
* add Properties.EMPTY_SOURCE
* rename SafeFile to StrictFile
* add AssertionErrorJobContext
* add JobContext&Co
* add Interrupters#iterator
* add Hex#encode[Lower|Upper](bytes, offset, length)
* add Day#valueOf methods
* add Day constructors with long
* add Day constructors with GregorianCalendar and XMLGregorianCalendar
* add Day#getGregorianCalendar
* add Day#getXMLGregorianCalendar
* add PrefixSource
* add Day#getTimeFrom/To
* add Day#getTimeInMillisTo()
* add Hex#decodeLower
* add SafeFile
* add Properties#getTests()
* add Hex#append
* add MessageDigestUtil
* add Hex
* add Interrupters
* add CharSet.indexOfNotContains(String)
* Day implements Comparable
* add XMLEncoder.append(StringBuilder, char)
* add XMLEncoder.append(StringBuilder, String)
* add XMLEncoder
* add class Cast
* rename Pool.Info.getIdleCounter to getIdleLevel
	 deprecated method with old name is provided
* add Pool.Info.getIdle[Limit|Initial]
* added getPending to SequenceChecker.Info
* renamed SequenceChecker.Counter to Info
