<%
/*
 * Copyright (C) 2004-2007  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.copernica;

import java.io.BufferedReader;
import java.io.PrintStream;
import java.io.IOException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import com.exedio.cope.Type;

import com.exedio.cops.CopsServlet;

public final class Copernica_Jspm
{
	static final void write(
			final PrintStream out,
			final HttpServletRequest request,
			final CopernicaUser user,
			final CopernicaCop cop)
		throws IOException
	{
		final CopernicaProvider provider = cop.provider;
		final CopernicaLanguage language = cop.language;
	
%><html>
	<head>
		<meta http-equiv="content-type" content="text/html; charset=<%=CopernicaServlet.ENCODING%>">
		<title><%=cop.getTitle()%></title><%
		
		final CopernicaCop home = cop.toHome();
		%>
		<link rel="home" href="<%=home%>"><%
		final CopernicaCop prev = cop.toPrev();
		if(prev!=null)
		{
		%>
		<link rel="prev" href="<%=prev%>"><%
		}
		final CopernicaCop next = cop.toNext();
		if(next!=null)
		{
		%>
		<link rel="next" href="<%=next%>"><%
		}
		
		%>
		<link rel="STYLESHEET" type="text/css" href="<%=CopernicaServlet.stylesheet.url(request)%>">
	</head>
	<body><%
		final Collection<? extends CopernicaLanguage> displayLanguages = provider.getDisplayLanguages();
		if( (!displayLanguages.isEmpty()) || (user!=null) )
		{
		%>
		<div id="langcontainer">
			<ul id="langlist"><%
			for(final CopernicaLanguage l : displayLanguages)
			{
				final String name = l.getCopernicaName(language);
				final boolean active = l.equals(language);
				%>
				<li<%if(active){%> id="active"<%}%>>
					<a href="<%=cop.switchLanguage(l)%>"<%
						if(active){%> id="current"<%}%>><%=name%></a>
				</li><%
			}
			if(user!=null)
			{
				%>
				<li>
					<%=user.getCopernicaName()%>
				</li><%
			}
			%>
			</ul>
		</div><%
		}
		Copernica_Jspm.writeTypeList(out, cop);
		%>
		<div id="main"><%
		cop.writeBody(request, out);
		//cop.log();
		%>
		</div>
	</body>
</html>
<%
	}
	
	static final void writeAuthenticationError(
				final PrintStream out,
				final CopernicaAuthorizationFailedException cafe)
	{
%><html>
	<head>
		<title>Copernica - Authorization Required</title>
	</head>
	<body>
		<h1>Authorization Required.</h1>
		<div>
			Copernica could not verify that you are authorized to access
			the application. Either you supplied the wrong credentials
			(e.g., bad password), or your browser doesn't understand how
			to supply the credentials required.
		</div>
		<div>
			If you think, this error is unjustified, please report the
			error id <code><%=cafe.getDisplayCode()%></code> with your
			complaint.
		</div>
	</body>
</html>
<%
	}
	
	public static final void writeException(
				final PrintStream out,
				final CopsServlet servlet,
				final Exception exception,
				final boolean onPage)
	{
%><html>
	<head>
		<title>Copernica System Error</title>
	</head>
	<body>
		<b>Sorry, an internal error occurred.</b><br><%
		if(onPage)
		{
		%>
		<hr>
		<font color="#ff0000">
		<pre>
<%
			servlet.printException(out, exception);
		%>
		</pre>
		</font>
		<hr><%
		}
		else
		{
		%>
		Please report the error code <i><%=
			servlet.reportException(exception)
			%></i> to the webmaster.<%
		}
		%>
	</body>
</html>
<%
	}
	
	static final void writeTypeList(final PrintStream out, final CopernicaCop cop)
	{
		final CopernicaProvider provider = cop.provider;
		final CopernicaLanguage language = cop.language;
%>
		<ul id="typelist"><%
		for(final Type type : provider.getModel().getTypes())
		{
			final String name = provider.getDisplayName(language, type);
			final boolean active = cop.isType(type);
			%>
			<li<%
			if(active)
			{
				%> id="active"<%
			}
			%>><a href="<%=(cop.toType(type))
			%>"<%
			if(active)
			{
				%> id="current"<%
			}
			%>><%=name%></a></li><%
		}
		%>
		</ul><%
	}
	
	static final void writeEmptyBody(final HttpServletRequest request, final PrintStream out)
	{
			%>
			<h1>Copernica</h1>
			<h2>Generic Backoffice for COPE</h2>
			<img src="<%=CopernicaServlet.logo.url(request)%>" width="200" height="66"><%
	}

	public static final void writeParameters(final PrintStream out, final HttpServletRequest request)
		throws IOException
	{
		for( final Iterator it = request.getParameterMap().entrySet().iterator(); it.hasNext(); )
		{
			final Map.Entry entry = (Map.Entry)it.next();
			%>
			<small>param</small> &gt;<%=entry.getKey()%>&lt; :<%
			final String[] values = (String[])entry.getValue();
			for(int jt=0; jt<values.length; jt++)
			{
				%> &gt;<%=values[jt]%>&lt;<%
			}
			%><br><%
		}
		for( final Enumeration it = request.getHeaderNames(); it.hasMoreElements(); )
		{
			final String name = (String)it.nextElement();
			%>
			<small>header</small> &gt;<%=name%>&lt; :<%
			%> &gt;<%=request.getHeader(name)%>&lt;<%
			%><br><%
			//System.out.println("header <"+name+">: <"+request.getHeader(name)+">");
		}
		final BufferedReader body = new BufferedReader(request.getReader());
		int i = 0;
		for(String line = body.readLine(); line!=null; line = body.readLine())
		{
			%>
			<small><%=i%>:</small> &gt;<%=line%>&lt;<%
			%><br><%
		}
	}
}
%>