
timestamps
{
	def jdk = 'openjdk-8'
	def isRelease = env.BRANCH_NAME.toString().equals("master")
	def cache = 'dependencies-cache-' + env.JOB_NAME.substring(0, env.JOB_NAME.indexOf("/"))

	properties([
			buildDiscarder(logRotator(
					numToKeepStr         : isRelease ? '1000' : '30',
					artifactNumToKeepStr : isRelease ? '1000' :  '2'
			))
	])

	//noinspection GroovyAssignabilityCheck
	lock(cache) { node('GitCloneExedio && docker')
	{
		try
		{
			abortable
			{
				echo("Delete working dir before build")
				deleteDir()

				checkout scm

				def dockerName = env.JOB_NAME.replace("/", "-") + "-" + env.BUILD_NUMBER
				def dockerDate = new Date().format("yyyyMMdd")
				def mainImage = docker.build(
						'exedio-jenkins:' + dockerName + '-' + dockerDate,
						'--build-arg JDK=' + jdk + ' ' +
						'conf/main')
				mainImage.inside(
						"--name '" + dockerName + "' " +
						"--cap-drop all " +
						"--security-opt no-new-privileges " +
						"--mount type=volume,src=" + cache + ",target=/var/dependencies-cache")
				{
					sh "ant/bin/ant -noinput" +
						" -buildfile ivy" +
						" -Divy.user.home=/var/dependencies-cache"
				}
				archiveArtifacts 'ivy/artifacts/report/**'

				sh "git status --porcelain --untracked-files=normal > git-status.txt"
				def gitStatus = readFile('git-status.txt')
				if(gitStatus!='?? git-status.txt\n')
				{
					echo 'FAILURE because fetching dependencies produces git diff, see git-status.txt'
					archiveArtifacts 'git-status.txt'
					currentBuild.result = 'FAILURE'
				}
			}
		}
		catch(Exception e)
		{
			//todo handle script returned exit code 143
			throw e
		}
		finally
		{
			def to = emailextrecipients([culprits(), requestor()])
			//TODO details
			step([$class: 'Mailer',
					recipients: to,
					attachLog: true,
					notifyEveryUnstableBuild: true])

			echo("Delete working dir after build")
			deleteDir()
		}
	}}
}

def abortable(Closure body)
{
	try
	{
		body.call()
	}
	catch(hudson.AbortException e)
	{
		if(e.getMessage().contains("exit code 143"))
			return
		throw e
	}
}
