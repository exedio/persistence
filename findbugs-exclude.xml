<FindBugsFilter>
	<Match>
		<!-- Non-transient non-serializable instance field in serializable class -->
		<Bug pattern="SE_BAD_FIELD" />
		<Or>
			<Class name="com.exedio.cope.Model" />
			<Class name="com.exedio.cope.Type" />
			<Class name="com.exedio.cope.CheckConstraint" />
			<Class name="com.exedio.cope.DataField" />
			<Class name="com.exedio.cope.IntegerField" />
			<Class name="com.exedio.cope.ItemField" />
			<Class name="com.exedio.cope.EnumField" />
			<Class name="com.exedio.cope.StringField" />
			<Class name="com.exedio.cope.PlusView" />
			<Class name="com.exedio.cope.PlusLiteralView" />
			<Class name="com.exedio.cope.MultiplyView" />
			<Class name="com.exedio.cope.MultiplyLiteralView" />
			<Class name="com.exedio.cope.DivideView" />
			<Class name="com.exedio.cope.UppercaseView" />
			<Class name="com.exedio.cope.LengthView" />
			<Class name="com.exedio.cope.AsStringView" />
			<Class name="com.exedio.cope.CompositeCondition$Operator" />
			<Class name="com.exedio.cope.pattern.SetField" />
			<Class name="com.exedio.cope.pattern.ListField" />
			<Class name="com.exedio.cope.pattern.MapField" />
			<Class name="com.exedio.cope.pattern.CompositeField" />
			<Class name="com.exedio.cope.pattern.JavaView" />
			<Class name="com.exedio.cope.pattern.Media" />
			<Class name="com.exedio.cope.pattern.Hash" />
			<Class name="com.exedio.cope.pattern.Dispatcher" />
			<Class name="com.exedio.cope.pattern.Schedule" />
			<Class name="com.exedio.cope.pattern.PasswordLimiter" />
			<Class name="com.exedio.cope.pattern.DynamicModel" />
			
			<Class name="com.exedio.cope.pattern.MediaServlet" />
		</Or>
	</Match>
	<Match>
		<!-- Non-serializable class has a serializable inner class -->
		<Bug pattern="SE_BAD_FIELD_INNER_CLASS" />
		<Or>
			<Class name="com.exedio.cope.instrument.Lexer$ParseException" />
			<Class name="com.exedio.cope.instrument.JavaClass$NS" />
			<Class name="com.exedio.cope.instrument.JavaRepository$NS" />
		</Or>
	</Match>
	<Match>
		<!-- Non-serializable value stored into instance field of a serializable class -->
		<Bug pattern="SE_BAD_FIELD_STORE" />
		<Or>
			<Class name="com.exedio.cope.ItemField" />
		</Or>
	</Match>
	<Match>
		<Or>
			<!-- Equals method for class assumes the argument is of that type -->
			<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS" />
			<!-- equals() method does not check for null argument -->
			<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT" />
		</Or>
		<Or>
			<Class name="com.exedio.cope.QueryCache$Key" />
			<Class name="com.exedio.cope.Statement$JoinTable" />
		</Or>
	</Match>
	<Match>
		<!-- Random object created and used only once -->
		<Bug pattern="DMI_RANDOM_USED_ONLY_ONCE" />
		<Class name="com.exedio.cope.ClusterProperties" />
	</Match>
	<Match>
		<!-- May expose internal representation by returning reference to mutable object -->
		<Bug pattern="EI_EXPOSE_REP" />
		<Class name="com.exedio.cope.DataField$ArrayValue" />
	</Match>
	<Match>
		<!-- May expose internal representation by incorporating reference to mutable object -->
		<Bug pattern="EI_EXPOSE_REP2" />
		<Class name="com.exedio.cope.StartsWithCondition" />
	</Match>
	<Match>
		<!-- Could be refactored into a named static inner class -->
		<Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON" />
		<!-- Used often for ResultSethandler -->
	</Match>
	<Match>
		<!-- Class defines compareTo(...) and uses Object.equals() -->
		<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS" />
		<Or>
			<Class name="com.exedio.cope.Type" />
			<Class name="com.exedio.cope.Type$Mount" />
		</Or>
	</Match>
	<Match>
		<!-- Confusing method names -->
		<Bug pattern="NM_CONFUSING" />
		<Or>
			<Class name="com.exedio.cope.Type" />
			<Class name="com.exedio.cope.Feature" />
			<Class name="com.exedio.cope.ThreadController" />
			<Class name="com.exedio.cope.Transaction" />
		</Or>
	</Match>
	<Match>
		<!-- Method with Boolean return type returns explicit null -->
		<Bug pattern="NP_BOOLEAN_RETURN_NULL" />
		<Class name="com.exedio.cope.BooleanField" />
	</Match>
	<Match>
		<!-- Comparison of String parameter using == or != -->
		<Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ" />
		<Class name="com.exedio.dsmf.Node" />
	</Match>
	<Match>
		<Or>
			<!-- Nonconstant string passed to execute method on an SQL statement -->
			<Bug pattern="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE" />
			<!-- A prepared statement is generated from a nonconstant String -->
			<Bug pattern="SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" />
		</Or>
		<Class name="com.exedio.cope.Executor" />
	</Match>
	<Match>
		<!-- Nonconstant string passed to execute method on an SQL statement -->
		<Bug pattern="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE" />
		<Or>
			<Class name="com.exedio.dsmf.Node" />
			<Class name="com.exedio.dsmf.MysqlDialect" />
			<Class name="com.exedio.cope.OracleDialect" />
		</Or>
	</Match>
	<Match>
		<Or>
			<!-- A prepared statement is generated from a nonconstant String -->
			<Bug pattern="SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" />
		</Or>
		<Or>
			<Class name="com.exedio.cope.sampler.SamplerPurge" />
		</Or>
	</Match>
	<Match>
		<!-- Consider returning a zero length array rather than null -->
		<Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
		<Or>
			<Class name="com.exedio.cope.Type" />
			<Class name="com.exedio.cope.ThreadController" />
			<Class name="com.exedio.cope.OracleDialect" />
			<Class name="com.exedio.cope.HsqldbDialect" />
			<Class name="com.exedio.cope.misc.SetValueUtil" />
			<Class name="com.exedio.cope.pattern.Serializer" />
			<Class name="com.exedio.cope.pattern.MediaImageioFilter" />
			<Class name="com.exedio.cope.pattern.MediaImageMagickFilter" />
		</Or>
	</Match>
	<Match>
		<!-- Method invoked that should be only be invoked inside a doPrivileged block -->
		<Bug pattern="DP_DO_INSIDE_DO_PRIVILEGED" />
		<Or>
			<Class name="com.exedio.cope.Model$Serialized" />
			<Class name="com.exedio.cope.TypesBound" />
			<Class name="com.exedio.cope.pattern.CompositeType" />
		</Or>
	</Match>
	<Match>
		<!-- Field only ever set to null -->
		<Bug pattern="UWF_NULL_FIELD" />
		<Class name="com.exedio.cope.ClusterListener" />
	</Match>
	<Match>
		<Or>
			<!-- Class extends Servlet class and uses instance variables -->
			<Bug pattern="MTIA_SUSPECT_SERVLET_INSTANCE_FIELD" />
			<!-- Mutable servlet field -->
			<Bug pattern="MSF_MUTABLE_SERVLET_FIELD" />
		</Or>
		<Or>
			<Class name="com.exedio.cope.pattern.MediaServlet" />
		</Or>
	</Match>
	<Match>
		<!-- Redundant nullcheck of value known to be null -->
		<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE" />
		<Class name="com.exedio.cope.Model" />
	</Match>
	<Match>
		<!-- Exception is caught when Exception is not thrown -->
		<Bug pattern="REC_CATCH_EXCEPTION" />
		<Class name="com.exedio.cope.pattern.Dispatcher" />
	</Match>
	<Match>
		<!-- Useless control flow -->
		<!-- TODO -->
		<Bug pattern="UCF_USELESS_CONTROL_FLOW" />
		<And><Class name="com.exedio.cope.instrument.Lexer" /><Method name="readComment" /></And>
	</Match>
	<Match>
		<!-- Method uses the same code for two switch clauses -->
		<Bug pattern="DB_DUPLICATE_SWITCH_CLAUSES" />
		<And><Class classname="com.exedio.cope.instrument.Parser" /><Method name="parseClass" /></And>
	</Match>
	<Match>
		<!-- Inefficient use of keySet iterator instead of entrySet iterator -->
		<Bug pattern="WMI_WRONG_MAP_ITERATOR" />
		<Or>
			<Class name="com.exedio.cope.Type" />
			<Class name="com.exedio.cope.Item" />
		</Or>
	</Match>
</FindBugsFilter>
