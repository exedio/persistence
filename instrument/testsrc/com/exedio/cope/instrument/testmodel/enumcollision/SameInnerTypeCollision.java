package com.exedio.cope.instrument.testmodel.enumcollision;

import com.exedio.cope.EnumField;
import com.exedio.cope.Item;

class SameInnerTypeCollision extends Item
{
	/**
	 uncommenting this makes resolving "CollisionBase.XCollide1" fail - see JavaClass.NS
	static class XCollide1
	{
	}*/

	static final EnumField<CollisionBase.XCollide1> innerX1 = EnumField.create(CollisionBase.XCollide1.class).defaultTo(CollisionBase.XCollide1.one);

/**

	 **
	 * Creates a new SameInnerTypeCollision with all the fields initially needed.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	SameInnerTypeCollision()
	{
		this(new com.exedio.cope.SetValue<?>[]{
		});
	}/**

	 **
	 * Creates a new SameInnerTypeCollision and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	protected SameInnerTypeCollision(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #innerX1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	@javax.annotation.Nonnull()
	final CollisionBase.XCollide1 getInnerX1()
	{
		return SameInnerTypeCollision.innerX1.get(this);
	}/**

	 **
	 * Sets a new value for {@link #innerX1}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.set public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	final void setInnerX1(@javax.annotation.Nonnull final CollisionBase.XCollide1 innerX1)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		SameInnerTypeCollision.innerX1.set(this,innerX1);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for sameInnerTypeCollision.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	static final com.exedio.cope.Type<SameInnerTypeCollision> TYPE = com.exedio.cope.TypesBound.newType(SameInnerTypeCollision.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@javax.annotation.Generated("com.exedio.cope.instrument")
	protected SameInnerTypeCollision(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
