/*
 * Copyright (C) 2004-2011  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.instrument.testmodel;

import com.exedio.cope.Item;
import com.exedio.cope.instrument.testfeature.WrapFeature;

class WrapItem extends Item
{
	static final WrapFeature feature = new WrapFeature();


   /**

	 **
	 * Creates a new WrapItem with all the fields initially needed.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	WrapItem()
	{
		this(new com.exedio.cope.SetValue[]{
		});
	}/**

	 **
	 * Creates a new WrapItem and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	private WrapItem(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	@SuppressWarnings("unused") private WrapItem(final com.exedio.cope.ActivationParameters ap)
	{
		super(ap);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.simple public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final int simpleFeature()
	{
		return WrapItem.feature.simple(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.simpleVoid public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final void simpleFeatureVoid()
	{
		WrapItem.feature.simpleVoid(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.simpleStatic public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final int simpleFeatureStatic()
	{
		return WrapItem.feature.simpleStatic();
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.simpleStaticVoid public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final void simpleFeatureStaticVoid()
	{
		WrapItem.feature.simpleStaticVoid();
	}/**

	 **
	 * method documentation
	 * @param feature parameter documentation
	 * @return return documentation
	 * @throws java.lang.RuntimeException throws documentation
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.documented public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final int documentedFeature(final int feature)
			throws
				java.lang.RuntimeException
	{
		return WrapItem.feature.documented(feature);
	}/**

	 **
	 * method documentation line 1 {@link #feature} feature wrapItem Feature {4}
	 * method documentation line 2 {@link #feature} feature wrapItem Feature {4}
	 * 
	 * method documentation line 3 {@link #feature} feature wrapItem Feature {4}
	 * @param feature parameter documentation line 1 {@link #feature} feature wrapItem Feature {4}
	 *        parameter documentation line 2 {@link #feature} feature wrapItem Feature {4}
	 *        
	 *        parameter documentation line 3 {@link #feature} feature wrapItem Feature {4}
	 * @return return documentation line 1 {@link #feature} feature wrapItem Feature {4}
	 *         return documentation line 2 {@link #feature} feature wrapItem Feature {4}
	 *         
	 *         return documentation line 3 {@link #feature} feature wrapItem Feature {4}
	 * @throws java.lang.RuntimeException throws documentation RuntimeException {@link #feature} feature wrapItem Feature {4}
	 * @throws java.lang.IllegalArgumentException throws documentation IllegalArgumentException line 1 {@link #feature} feature wrapItem Feature {4}
	 *         throws documentation IllegalArgumentException line 2 {@link #feature} feature wrapItem Feature {4}
	 *         
	 *         throws documentation IllegalArgumentException line 3 {@link #feature} feature wrapItem Feature {4}
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.documentedMulti public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final int documentedFeatureMulti(final int feature)
			throws
				java.lang.RuntimeException,
				java.lang.IllegalArgumentException
	{
		return WrapItem.feature.documentedMulti(feature);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.notHidden public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	static final int notFeatureHidden()
	{
		return WrapItem.feature.notHidden();
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for wrapItem.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<WrapItem> TYPE = com.exedio.cope.TypesBound.newType(WrapItem.class)
;}
