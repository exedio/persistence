/*
 * Copyright (C) 2004-2011  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.instrument.testmodel;

import com.exedio.cope.EnumField;
import com.exedio.cope.Item;
import com.exedio.cope.ItemField;
import com.exedio.cope.instrument.testmodel.EnumContainer.Enum4;
import com.exedio.cope.instrument.testmodel.sub.SubTarget;

class CrossPackageSuper extends Item
{
	static final ItemField<SubTarget> superField = ItemField.create(SubTarget.class).toFinal();
	static final EnumField<SuperEnum> superField2 = EnumField.create(SuperEnum.class).toFinal();
	static final EnumField<EnumContainer.Enum3> externalEnum = EnumField.create(EnumContainer.Enum3.class).toFinal();
	static final EnumField<Enum4> shortExternalEnum = EnumField.create(Enum4.class).toFinal();

	enum SuperEnum
	{
		A, B;
	}

	/**

	 **
	 * Creates a new CrossPackageSuper with all the fields initially needed.
	 * @param superField the initial value for field {@link #superField}.
	 * @param superField2 the initial value for field {@link #superField2}.
	 * @param externalEnum the initial value for field {@link #externalEnum}.
	 * @param shortExternalEnum the initial value for field {@link #shortExternalEnum}.
	 * @throws com.exedio.cope.MandatoryViolationException if superField, superField2, externalEnum, shortExternalEnum is null.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tags <tt>@cope.constructor public|package|protected|private|none</tt> in the class comment and <tt>@cope.initial</tt> in the comment of fields.
	 */
	CrossPackageSuper(
				final SubTarget superField,
				final SuperEnum superField2,
				final EnumContainer.Enum3 externalEnum,
				final Enum4 shortExternalEnum)
			throws
				com.exedio.cope.MandatoryViolationException
	{
		this(new com.exedio.cope.SetValue[]{
			CrossPackageSuper.superField.map(superField),
			CrossPackageSuper.superField2.map(superField2),
			CrossPackageSuper.externalEnum.map(externalEnum),
			CrossPackageSuper.shortExternalEnum.map(shortExternalEnum),
		});
	}/**

	 **
	 * Creates a new CrossPackageSuper and sets the given fields initially.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.generic.constructor public|package|protected|private|none</tt> in the class comment.
	 */
	protected CrossPackageSuper(final com.exedio.cope.SetValue<?>... setValues)
	{
		super(setValues);
	}/**

	 **
	 * Returns the value of {@link #superField}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final SubTarget getSuperField()
	{
		return CrossPackageSuper.superField.get(this);
	}/**

	 **
	 * Returns the value of {@link #superField2}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final SuperEnum getSuperField2()
	{
		return CrossPackageSuper.superField2.get(this);
	}/**

	 **
	 * Returns the value of {@link #externalEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final EnumContainer.Enum3 getExternalEnum()
	{
		return CrossPackageSuper.externalEnum.get(this);
	}/**

	 **
	 * Returns the value of {@link #shortExternalEnum}.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.get public|package|protected|private|none|non-final</tt> in the comment of the field.
	 */
	final Enum4 getShortExternalEnum()
	{
		return CrossPackageSuper.shortExternalEnum.get(this);
	}/**

	 **
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	private static final long serialVersionUID = 1l;/**

	 **
	 * The persistent type information for crossPackageSuper.
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 *       It can be customized with the tag <tt>@cope.type public|package|protected|private|none</tt> in the class comment.
	 */
	static final com.exedio.cope.Type<CrossPackageSuper> TYPE = com.exedio.cope.TypesBound.newType(CrossPackageSuper.class);/**

	 **
	 * Activation constructor. Used for internal purposes only.
	 * @see com.exedio.cope.Item#Item(com.exedio.cope.ActivationParameters)
	 * @cope.generated This feature has been generated by the cope instrumentor and will be overwritten by the build process.
	 */
	protected CrossPackageSuper(final com.exedio.cope.ActivationParameters ap){super(ap);
}}
