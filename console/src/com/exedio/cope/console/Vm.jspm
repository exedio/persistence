<%
/*
 * Copyright (C) 2004-2007  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.TreeSet;

import javax.servlet.http.HttpServletRequest;

final class Vm_Jspm extends Console_Jspm
{
	private final static void write(final PrintStream out, final String key, final String title, final String version, final String vendor)
	{
		final LinkedHashMap<String, String> values = new LinkedHashMap<String, String>();
		if(title!=null)
			values.put("Title", title);
		if(version!=null)
			values.put("Version", version);
		if(vendor!=null)
			values.put("Vendor", vendor);
			
		if(!values.isEmpty())
		{
			final Iterator<Map.Entry<String, String>> i = values.entrySet().iterator();
			final Map.Entry<String, String> first = i.next();
			%>
			<tr>
				<th rowspan="<%=values.size()%>"><%=key%></th>
				<th><%=encode(first.getKey())%></th>
				<td class="text"><%=encode(first.getValue())%></td>
			</tr><%
			
			while(i.hasNext())
			{
				final Map.Entry<String, String> next = i.next();
			%>
			<tr>
				<th><%=encode(next.getKey())%></th>
				<td class="text"><%=encode(next.getValue())%></td>
			</tr><%
			}
		}
	}

	private final static void writeDetailed(final PrintStream out, final TreeSet<Package> jar)
	{
			final Package p = jar.iterator().next();
			
			final String name;
			if(p.getSpecificationTitle()!=null)
				name = p.getSpecificationTitle();
			else if(p.getImplementationTitle()!=null)
				name = p.getImplementationTitle();
			else
				name = jar.iterator().next().getName();

			%>
			<tr>
				<td colspan="2"></td>
				<th><%=encode(name)%></th>
			</tr><%
			write(out, "Specification",  p.getSpecificationTitle(),  p.getSpecificationVersion(),  p.getSpecificationVendor());
			write(out, "Implementation", p.getImplementationTitle(), p.getImplementationVersion(), p.getImplementationVendor());
			%>
			<tr>
				<th colspan="2">Packages</th>
				<td class="text"><%
				boolean first = true;
				for(final Package pack : jar)
				{
					if(first)
						first = false;
					else
						{%>, <%}
						
					%><%=encode(pack.getName())%><%
				}
				%></td>
			</tr><%
	}

	private final static void writeShort(final PrintStream out, final TreeSet<Package> jar)
	{
			final Package p = jar.iterator().next();
			final String spec = p.getSpecificationVersion();
			final String impl = p.getImplementationVersion();
			%>
			<tr>
				<th><%
				
					if(p.getSpecificationTitle()!=null)
					{
						%><%=encode(p.getSpecificationTitle())%><%
					}
					else if(p.getImplementationTitle()!=null)
					{
						%><%=encode(p.getImplementationTitle())%><%
					}
					else
					{
						%><%=encode(p.getName())%><%
					}
				%></th>
				<td class="text"><% if(spec!=null) { %><%=encode(spec)%><% } %></td>
				<td class="text"><% if(impl!=null) { %><%=encode(impl)%><% } %></td>
			</tr><%
	}

	final static void writeBody(final PrintStream out, final HttpServletRequest request, final VmCop cop, final ArrayList<TreeSet<Package>> jars)
	{
		%>
		<table>
			<tr>
				<th class="caption" colspan="3">Packages in Virtual Machine</th>
			</tr>
			<tr>
				<th colspan="3">
					<% writeToggle(out, request, cop.toToggleDetailed(), cop.detailed); %> detailed
					<% writeToggle(out, request, cop.toToggleAllPackages(), cop.allPackages); %> show none-cope
				</th>
			</tr><%
			
			if(cop.detailed)
			{
				for(final TreeSet<Package> jar : jars)
					writeDetailed(out, jar);
			}
			else
			{
			%>
			<tr><th>Package</th><th>Spec</th><th>Impl</th></tr><%
			
				for(final TreeSet<Package> jar : jars)
					writeShort(out, jar);
			}
			%>
		</table><%
	}
}%>