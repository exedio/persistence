<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.Format.formatAndHide;
import static com.exedio.cope.console.Format.highlightSQL;
import static com.exedio.cope.console.Format.ratio;

import com.exedio.cope.info.QueryCacheHistogram;
import com.exedio.cope.info.QueryCacheInfo;

import static com.exedio.cops.XMLEncoder.encode;

final class QueryCache_Jspm extends Console_Jspm
{
	final static void writeBody(
			final QueryCacheCop cop,
			final Out out,
			final int limit,
			final QueryCacheInfo info,
			final QueryCacheCop.Content content)
	{
		final long hits = info.getHits();
		final long misses = info.getMisses();
		%>
		<table>
			<caption>Query Cache Statistics</caption>
			<tr><th colspan="2">Limit</th><td><%= format(limit)%></td></tr>
			<tr><th colspan="2">Level</th><td><%= format(info.getLevel()) %></td></tr>
			<tr><th colspan="2">Replacements</th><td><%=format(info.getReplacements())%></td></tr>
			<tr><th colspan="2">Invalidations</th><td><%=format(info.getInvalidations())%></td></tr>
			<tr><th colspan="2">log<sub>10</sub> Hits/Misses</th><td><%=ratio(hits, misses)%></td></tr>
			<tr><th colspan="2">Hits</th><td><%=  format(hits)  %></td></tr>
			<tr><th colspan="2">Misses</th><td><%=format(misses)%></td></tr><%
			if(content.histogram.length>0)
			{
			%>
			<tr><th rowspan="3">Key Length</th><th>Average</th><td><%=format(content.avgKeyLength)%></td></tr>
			<tr><th>Maximum</th><td><%=format(content.maxKeyLength)%></td></tr>
			<tr><th>Minimum</th><td><%=format(content.minKeyLength)%></td></tr>
			<tr><th rowspan="<%=content.resultSizes.length+3%>">Result Size</th><th>Average</th><td><%=format(content.avgResultSize)%></td></tr>
			<tr><th>Maximum</th><td><%=format(content.maxResultSize)%></td></tr>
			<tr><th>Minimum</th><td><%=format(content.minResultSize)%></td></tr><%
			for(int i = 0; i<content.resultSizes.length; i++)
			{
			%>
			<tr><th>Size <%=i%></th><td><%=format(content.resultSizes[i])%></td></tr><%
			}
			%>
			<tr><th rowspan="3">Hits</th><th>Average</th><td><%=format(content.avgHits)%></td></tr>
			<tr><th>Maximum</th><td><%=format(content.maxHits)%></td></tr>
			<tr><th>Minimum</th><td><%=format(content.minHits)%></td></tr><%
			}
		%>
		</table>
		<hr>
		<% writeToggle(out, cop.toToggleCondense(), cop.condense); %> condense<%
		
		if(cop.condense)
		{
		
		final String[] names = {
			"Recent Usage (LRU) (Average)",
			"Count",
			"Result Size (Sum)",
			"Cache Hits (Sum)",
			"Query",
		};
		final String[] shortNames = {
			"ru",
			"cnt",
			"rs",
			"ch",
		};
		%>
		<table id="coloredTable">
			<caption>Query Cache Histogram</caption><%
			ColoredTable_Jspm.writeHeader(out, names, shortNames);
		
		final int histogramLimit = cop.histogramLimit;
		
		for(int i = 0; i<content.histogramCondensed.length; i++)
		{
			if(i>=histogramLimit)
			{
			%>
			<tr>
				<td class="text" colspan="<%=names.length%>">
					Skipped display of <%=content.histogramCondensed.length-histogramLimit%> more queries because limited to <%=histogramLimit%> queries.
					<form action="<%=cop%>" method="GET">
						New limit:
						<input type="text" name="<%=cop.HISTOGRAM_LIMIT%>" value="<%=histogramLimit%>">
						<input type="submit" value="set">
					</form>
				</td>
			</tr><%
				break;
			}
			final QueryCacheCop.Condense condense = content.histogramCondensed[i];
			final String[] data = {
					format(condense.getRecentUsage()),
					format(condense.getCount()),
					format(condense.getResultSize()),
					formatAndHide(0, condense.getHits()),
				};
			%>
			<tr><%
				ColoredTable_Jspm.writeData(out, data); %>
				<td class="text"><%=highlightSQL(encode(condense.query))%></td>
			</tr><%
		}
		
		}
		else
		{
		
		final String[] names = {
			"Recent Usage (LRU)",
			"Result Size",
			"Cache Hits",
			"Query",
		};
		final String[] shortNames = {
			"ru",
			"rs",
			"ch",
		};
		%>
		<table id="coloredTable">
			<caption>Query Cache Histogram</caption><%
			ColoredTable_Jspm.writeHeader(out, names, shortNames);
		
		final int histogramLimit = cop.histogramLimit;
		
		for(int i = 0; i<content.histogram.length; i++)
		{
			if(i>=histogramLimit)
			{
			%>
			<tr>
				<td class="text" colspan="<%=names.length%>">
					Skipped display of <%=content.histogram.length-histogramLimit%> more queries because limited to <%=histogramLimit%> queries.
					<form action="<%=cop%>" method="GET">
						New limit:
						<input type="text" name="<%=cop.HISTOGRAM_LIMIT%>" value="<%=histogramLimit%>">
						<input type="submit" value="set">
					</form>
				</td>
			</tr><%
				break;
			}
			final QueryCacheHistogram histogram = content.histogram[i];
			final String[] data = {
					format(i),
					format(histogram.getResultSize()),
					formatAndHide(0, histogram.getHits()),
				};
			%>
			<tr><%
				ColoredTable_Jspm.writeData(out, data); %>
				<td class="text"><%=highlightSQL(encode(histogram.getQuery()))%></td>
			</tr><%
		}
		
		}
		%>
		</table><%
	}
}%>