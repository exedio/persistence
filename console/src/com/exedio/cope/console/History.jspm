<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;

import java.util.Date;
import java.util.HashMap;
import java.util.List;

import com.exedio.cope.Model;
import com.exedio.cope.Type;
import com.exedio.cope.console.HistoryCop.Info;

final class History_Jspm
{
	final static void writeBody(
			final HistoryCop cop,
			final Out out,
			final boolean historyModelShown,
			final Model historyModel,
			final String threadId,
			final boolean historyRunning,
			final boolean analyze)
	{
		%>
		Showing model of COPE History:
		<a href="<%=cop.toHistoryModelShown(true )%>"<% if( historyModelShown){%> class="selected"<%} %>>on</a>
		<a href="<%=cop.toHistoryModelShown(false)%>"<% if(!historyModelShown){%> class="selected"<%} %>>off</a>
		<br>
		History:<% if(!historyRunning){%> not<%} %> running<%
		if(threadId!=null)
		{
		%>
		<small><%=threadId%></small><%
		}
		%>
		<form action="<%=cop%>" method="POST">
			<input type="submit" name="<%=ConsoleServlet.HISTORY_START%>" value="Start">
			<input type="submit" name="<%=ConsoleServlet.HISTORY_STOP %>" value="Stop">
		</form>
		<hr>
		<form action="<%=cop%>" method="POST">
			<input type="submit" name="<%=cop.ANALYZE%>" value="Analyze"><%
			
				final ConsoleServlet.Store<HashMap<Type<?>, Info>> analyzeStore = cop.getStore();
				Console_Jspm.write(out, analyze, analyzeStore);
				
				final HashMap<Type<?>, Info> infos;
				if(analyze)
					infos = new HashMap<Type<?>, Info>();
				else if(analyzeStore!=null)
					infos = analyzeStore.value;
				else
					infos = null;
			%>
		</form>
		<table>
			<caption>History Amount</caption>
			<tr>
				<th>Type</th><%
			
			if(infos!=null)
			{
				%>
				<th>Count</th>
				<th>From</th>
				<th>Until</th><%
			}
			%>
			</tr><%
		
		for(final Type<?> type : historyModel.getTypes())
		{
			%>
			<tr>
				<td class="text"><%=type.getID()%></td><%
			
			if(analyze)
			{
				final int count = HistoryThread.analyzeCount(type);
				%>
				<td><%=format(count)%></th><%
				out.flush();
				
				final Date[] dates = HistoryThread.analyzeDate(type);
				%>
				<td><%=dates[0]%></td>
				<td><%=dates[1]%></td><%
				out.flush();
				
				infos.put(type, new Info(count, dates[0], dates[1]));
			}
			else if(analyzeStore!=null)
			{
				final Info info = infos.get(type);
				%>
				<td><%=format(info.count)%></th>
				<td><%=info.from%></td>
				<td><%=info.until%></td><%
			}
			%>
			</tr><%
		}
		%>
		</table><%
		
		if(analyze)
			cop.putStore(infos);
	}
		
	final static void writePurges(
			final HistoryCop cop,
			final Out out,
			final List<HistoryPurge> purges)
	{
		%>
		<hr>
		<table>
			<caption>History Purge<% cop.writePager(out, cop); %></caption>
			<tr>
				<th>Type</th>
				<th>Limit</th>
				<th>Finished</th>
				<th>Rows</th>
				<th>Elapsed</th>
			</tr><%
		
		for(final HistoryPurge purge : purges)
		{
			%>
			<tr>
				<td class="text"><%=purge.getType()%></td>
				<td><%=purge.getLimit()%></th>
				<td><%=purge.getFinished()%></th>
				<td><%=format(purge.getRows())%></th>
				<td><%=format(purge.getElapsed())%></th>
			</tr><%
		}
		%>
		</table><%
	}
	
	final static void writeBodyNotAvailable(final Out out)
	{
		%>
		<table>
			<caption>History</caption>
			<tr>
				<td class="text">
					History is not available for this model.
				</td>
			</td>
		</table><%
	}
}%>