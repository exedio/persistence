<%
/*
 * Copyright (C) 2004-2008  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;

import java.io.PrintStream;

import com.exedio.cope.util.ClusterListenerInfo;
import com.exedio.cope.util.SequenceChecker;

final class Cluster_Jspm
{
	final static void writeBody(
			final ClusterCop cop,
			final PrintStream out,
			final ClusterListenerInfo listenerInfo,
			final int donePing)
	{
		%>
		<table>
			<caption>Cluster Network</caption>
			<tr><th>Exception</th><td><%=format(listenerInfo.getException())%></td></tr>
			<tr><th>Missing Magic</th><td><%=format(listenerInfo.getMissingMagic())%></td></tr>
			<tr><th>Wrong Secret</th><td><%=format(listenerInfo.getWrongSecret())%></td></tr>
			<tr><th>From Myself</th><td><%=format(listenerInfo.getFromMyself())%></td></tr>
		</table>
		<hr>
		<table>
			<caption>Cluster Network Nodes</caption>
			<tr>
				<th rowspan="2">ID</th>
				<th rowspan="2">First<br>Encounter</th>
				<th colspan="2">From</th>
				<th colspan="2">Ping</th>
				<th colspan="2">Pong</th>
				<th colspan="5">Invalidate</th>
			</tr>
			<tr>
				<th>Address</th>
				<th>Port</th>
				<th>#</th>
				<th>Last</th>
				<th>#</th>
				<th>Last</th><%
				writeSequenceCheckerHead(out);
				%>
			</tr><%
			
			for(final ClusterListenerInfo.Node node : listenerInfo.getNodes())
			{
			%>
			<tr>
				<td><%=node.getID()%></td>
				<td><%=format(node.getFirstEncounter())%></td>
				<td><%=node.getAddress()%></td>
				<td><%=node.getPort()%></td>
				<td><%=format(node.getPing())%></td>
				<td><%=format(node.getPingLast())%></td>
				<td><%=format(node.getPong())%></td>
				<td><%=format(node.getPongLast())%></td><%
				write(out, node.getInvalidateCounter());
				%>
			</tr><%
			}
			%>
		</table>
		<form action="<%=cop%>" method="POST">
			<input type="text"   name="<%=cop.PING_COUNT%>" value="1" size="5">
			<input type="submit" name="<%=cop.PING%>" value="ping">
		</form><%
		if(donePing>0)
		{
		%>
		<div><%=donePing%> ping packets sent.</div><%
		}
	}
	
	private final static void writeSequenceCheckerHead(final PrintStream out)
	{
				%>
				<th>In Order</th>
				<th>Out of Order</th>
				<th>Duplicate</th>
				<th>Lost</th>
				<th>Late</th><%
	}
	
	private final static void write(final PrintStream out, final SequenceChecker.Counter ic)
	{
				%>
				<td><%=format(ic.getInOrder())%></td>
				<td><%=format(ic.getOutOfOrder())%></td>
				<td><%=format(ic.getDuplicate())%></td>
				<td><%=format(ic.getLost())%></td>
				<td><%=format(ic.getLate())%></td><%
	}
	
	final static void writeBodyDisabled(final PrintStream out)
	{
		%>
		<table>
			<caption>Cluster Network</caption>
			<tr>
				<td class="text">
					Cluster Network is not enabled for this model.
					<br>
					Use the cope property <tt>cluster</tt>
					and the context property <tt>cluster.secret</tt>
					to enable.
				</td>
			</td>
		</table><%
	}
}%>