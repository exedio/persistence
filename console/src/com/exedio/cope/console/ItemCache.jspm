<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.formatAndHide;
import static com.exedio.cope.console.Format.ratio;

import java.util.Date;

import com.exedio.cope.info.ItemCacheInfo;

final class ItemCache_Jspm extends Console_Jspm
{
	final static void writeBody(
			final Out out,
			final int allLimit,
			final int allLevel,
			final long allHits,
			final long allMisses,
			final int allReplacementRuns,
			final int allReplacements,
			final Date allLastReplacementRun,
			final long allAgeMinMillis,
			final long allAgeAverageMillis,
			final long allAgeMaxMillis,
			final long allInvalidationsOrdered,
			final long allInvalidationsDone,
			final ItemCacheInfo[] infos)
	{
		final String[] names = {
			"Limit",
			"Level",
			"Hits",
			"Misses",
			"Replacement Runs",
			"Replacements",
			"Last Replacement Run",
			"Age Min (s)",
			"Age Average (s)",
			"Age Max (s)",
			"Invalidations Ordered",
			"Invalidations Done",
			"log<sub>10</sub> Hits/Misses",
			"Type",
		};
		final String[] shortNames = {
			"lm",
			"lv",
			"ht",
			"ms",
			"rr",
			"r",
			"lrr",
			"an",
			"aa",
			"ax",
			"io",
			"id",
			"ratio",
		};
		%>
		<table id="coloredTable">
			<caption>Item Cache Statistics</caption><%
			ColoredTable_Jspm.writeHeader(out, names, shortNames);
			%>
			<tr><%
				final String[] allData = {
						formatAndHide(0, allLimit),
						formatAndHide(0, allLevel),
						formatAndHide(0, allHits),
						formatAndHide(0, allMisses),
						formatAndHide(0, allReplacementRuns),
						formatAndHide(0, allReplacements),
						formatAndHide(allLastReplacementRun),
						formatAndHide(0, allAgeMinMillis/1000l),
						formatAndHide(0, allAgeAverageMillis/1000l),
						formatAndHide(0, allAgeMaxMillis/1000l),
						formatAndHide(0, allInvalidationsOrdered),
						formatAndHide(0, allInvalidationsDone),
					};
				ColoredTable_Jspm.writeData(out, allData);
				%>
				<td class="color0"><%=ratio(allHits, allMisses)%></td>
				<th>All</th>
			</tr><%
			for(final ItemCacheInfo info : infos)
			{
				final String[] data = {
						formatAndHide(0, info.getLimit()),
						formatAndHide(0, info.getLevel()),
						formatAndHide(0, info.getHits()),
						formatAndHide(0, info.getMisses()),
						formatAndHide(0, info.getReplacementRuns()),
						formatAndHide(0, info.getReplacements()),
						formatAndHide(info.getLastReplacementRun()),
						formatAndHide(Long.MAX_VALUE/1000l, info.getAgeMinMillis()/1000l),
						formatAndHide(0, info.getAgeAverageMillis()/1000l),
						formatAndHide(0, info.getAgeMaxMillis()/1000l),
						formatAndHide(0, info.getInvalidationsOrdered()),
						formatAndHide(0, info.getInvalidationsDone()),
					};
			%>
			<tr><%
				ColoredTable_Jspm.writeData(out, data);
				%>
				<td class="color0"><%=ratio(info.getHits(), info.getMisses())%></td>
				<td class="text"><%=info.getType().getID()%></td>
			</tr><%
			}
		%>
		</table><%
	}
}%>