<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import java.io.PrintStream;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.exedio.cope.RevisionInfoRevise.Body;
import com.exedio.cope.console.RevisionLine;

import static com.exedio.cops.XMLEncoder.encode;
import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.Format.formatAndHide;
import static com.exedio.cope.console.Format.highlightSQL;

final class Revision_Jspm extends Console_Jspm
{
	final static void writeHead(final PrintStream out)
	{
		%>
		<style>
			tr.sql
			{
				display:none;
			}
			tr.sql td
			{
				border-color:#ddf;
				background-color:#ddf;
				color:#007;
			}
			td.toggle
			{
				border-width:0px;
				padding:10px 2px;
			}
			tr.sql td.toggle
			{
				border-width:0px;
				background-color:#fff;
			}
			td.sql
			{
				border-width:0px;
				padding-top:8px;
				text-align:left;
				font-size:9px; /* size of node image */
			}
			td.grey
			{
				color:#ccc;
			}
			tr.env
			{
				display:none;
			}
		</style>
		<script>
			function toggleRev(image,revision,bodies)
			{
				var imageSrc = image.src;
				if(imageSrc.substring(imageSrc.length-8)=="true.png")
				{
					image.src = imageSrc.substring(0, imageSrc.length-8) + "false.png";
					for(body=0; body<bodies; body++)
						document.getElementById("r"+revision+"b"+body).style.display = "none";
				}
				else
				{
					image.src = imageSrc.substring(0, imageSrc.length-9) + "true.png";
					for(body=0; body<bodies; body++)
						document.getElementById("r"+revision+"b"+body).style.display = "table-row";
				}
			}
			function toggleEnv(image,revision,bodies)
			{
				var imageSrc = image.src;
				if(imageSrc.substring(imageSrc.length-8)=="true.png")
				{
					image.src = imageSrc.substring(0, imageSrc.length-8) + "false.png";
					for(body=0; body<bodies; body++)
					{
						document.getElementById("e"+revision+"b"+body+"b").style.display = "none";
						document.getElementById("e"+revision+"b"+body+"a").style.display = "none";
					}
				}
				else
				{
					image.src = imageSrc.substring(0, imageSrc.length-9) + "true.png";
					for(body=0; body<bodies; body++)
					{
						document.getElementById("e"+revision+"b"+body+"b").style.display = "table-row";
						document.getElementById("e"+revision+"b"+body+"a").style.display = "table-row";
					}
				}
			}
		</script><%
	}
	
	final static void writeBody(
			final PrintStream out,
			final RevisionCop cop,
			final List<RevisionLine> lines)
	{
		%>
		<table>
			<caption>Revisions<% cop.writePager(out, cop); %></caption>
			<tr>
				<th></th>
				<th title="Number">No.</th>
				<th>Date</th>
				<th>Content</th>
				<th>Rows</th>
				<th title="Elapsed Time (milliseconds)">Elpsd</th>
			</tr><%
			
			boolean lastHasRevision = true;
			Date lastDate = null;
			Map<String, String> lastEnvironment = null;
			
			for(final RevisionLine line : lines)
			{
				final int number = line.number;
				final boolean hasRevision = line.hasRevision();
				final Date date = line.getDate();
				final Map<String, String> environment = line.getEnvironment();
				
				if(lastHasRevision!=hasRevision)
				{
			%>
			<tr>
				<td class="sql"></td>
				<th colspan="3"><% if(hasRevision){%>Start<%}else{%>End<%} %> of Revisions in Application</td>
			</tr><%
				}
			
				if(lastEnvironment!=null && environment!=null && !environment.equals(lastEnvironment))
				{
			%>
			<tr>
				<td class="sql"><%
					final Set<String> diff = RevisionLine.diff(environment, lastEnvironment);
					final int bodyCount = diff.size();
					if(bodyCount>0)
					{
						%><img src="<%=ConsoleServlet.nodeFalse%>" onClick="toggleEnv(this,<%=number%>,<%=bodyCount%>)">&nbsp;<%
					}
					%><%=bodyCount%></td>
				<th colspan="3">Change of Environment</td>
			</tr><%
						
					int currentBodyNumber = 0;
					for(final String key : diff)
					{
						final String before = lastEnvironment.get(key);
						final String after  = environment.get(key);
			%>
			<tr id="e<%=number%>b<%=currentBodyNumber%>b" class="env">
				<td rowspan="2" class="sql"></td>
				<th colspan="2" rowspan="2"><%=key%></th>
				<td class="text" colspan="3"><% if(before!=null){%><%=before%><%}else{%>n/a<%} %></td>
			</tr>
			<tr id="e<%=number%>b<%=currentBodyNumber%>a" class="env">
				<td class="text" colspan="3"><% if(after !=null){%><%=after %><%}else{%>n/a<%} %></td>
			</tr><%
						currentBodyNumber++;
					}
				}
			
			%>
			<tr>
				<td class="sql"><%
					final int bodyCount = line.getBodyCount();
					if(bodyCount>0)
					{
						%><img src="<%=ConsoleServlet.nodeFalse%>" onClick="toggleRev(this,<%=number%>,<%=bodyCount%>)">&nbsp;<%
					}
					%><%=bodyCount%></td>
				<td><% if(line.isCurrent()){%>&#187;&nbsp;<%} %><%=number%></td>
				<td<% if(date!=null && date.equals(lastDate)){%> class="grey"<%} %>><%=formatAndHide(date)%></td>
				<td class="text" onClick="alert('<%
				final String logString = line.getLogString();
				final Map<String, String> logProperty = line.getLogProperties();
				if(logProperty!=null)
				{
					for(final Map.Entry<String, String> entry : logProperty.entrySet())
					{
						%><%=encode(entry.getKey())%>=<%=encode(entry.getValue().replace('\'', '|'))%>\n<%
					}
				}
				else if(logString!=null)
				{
					%><%=encode(logString)%><%
				}
				else
				{
				}
				final String content = line.getContent();
				%>');"><% if(content!=null){%><%=encode(content)%><%}else{%>-<%} %></td>
				<td><%=formatAndHide(-1, line.getRows   ())%></td>
				<td><%=formatAndHide(-1, line.getElapsed())%></td>
			</tr><%
		{
			int currentBodyNumber = 0;
			for(final Body body : line.getBody())
			{
			%>
			<tr id="r<%=number%>b<%=currentBodyNumber%>" class="sql">
				<td class="toggle"></td>
				<td><%=currentBodyNumber%></td>
				<td class="text" colspan="2"><%=highlightSQL(encode(body.getSQL()))%></td>
				<td><%=format(body.getRows   ())%></td>
				<td><%=format(body.getElapsed())%></td>
			</tr><%
				currentBodyNumber++;
			}
		}
				lastHasRevision = hasRevision;
				lastDate        = date;
				lastEnvironment = environment;
			}
			%>
		</table><%
	}
	
	final static void writeBodyDisabled(final PrintStream out)
	{
		%>
		<table>
			<caption>Revisions</caption>
			<tr>
				<td class="text">
					Revisions are not enabled for this model.
					<br>
					Use the <a
						href="http://cope.sourceforge.net/api/com/exedio/cope/Model.html#Model(com.exedio.cope.Revision[], com.exedio.cope.Type...)"
						target="_blank">revision constructor</a> to enable.
				</td>
			</td>
		</table><%
	}
}%>