<%
/*
 * Copyright (C) 2004-2008  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import java.io.PrintStream;
import java.util.List;

import com.exedio.cope.util.ModificationListener;

import static com.exedio.cops.XMLEncoder.encode;

final class ModificationListener_Jspm extends Console_Jspm
{
	final static void writeBody(
			final ModificationListenerCop cop,
			final PrintStream out,
			final int clearedBefore,
			final List<ModificationListener> listeners,
			final int clearedAfter)
	{
		%>
		<table>
			<caption>Listener Statistics</caption>
			<tr><th>Size</td><td><%=cop.format(listeners.size())%></td></tr>
			<tr><th>Cleared</td><td><%=cop.format(clearedBefore)%><%
					if(clearedBefore!=clearedAfter)
					{
						%>/<%=cop.format(clearedAfter)%><%
					}
					%></td></tr>
		</table>
		<hr>
		<form action="<%=cop%>" method="POST"><%
		writeButtons(out);
		%>
			<table>
				<caption>Modifying Commit Listeners</caption><%
			
			if(listeners.isEmpty())
			{
				%>
				<tr><td>There are no modification listeners registered.</td></tr><%
			}
			else
			{
				%>
				<tr>
					<th></th>
					<th>#</th>
					<th>getClass</th>
					<th>toString</th>
				</tr><%
				int number = 0;
				for(final ModificationListener listener : listeners)
				{
				%>
				<tr>
					<td><input type="checkbox" name="<%=cop.REMOVE_CHECKBOX%>" value="<%=cop.toID(listener)%>" /></td>
					<td><%=cop.format(number++)%></td><%
					if(listener instanceof ModificationListenerCop.Introspector)
					{
						final ModificationListenerCop.Introspector introspector =
							(ModificationListenerCop.Introspector)listener;
					%>
					<td class="text" colspan="2">
						added <%=cop.format(introspector.getStart())%>,
						session <%=encode(introspector.getSessionId())%><%
						if(introspector.isSessionAttached())
						{
							%> <b>attached</b><%
						}
						final List<ModificationListenerCop.Commit> commits = introspector.getCommits();
						if(!commits.isEmpty())
						{
						%>
						<ul><%
							for(final ModificationListenerCop.Commit commit : commits)
							{
								final String name = commit.getTransactionName();
							%>
							<li><%=cop.format(commit.transactionId)%> <%=cop.format(commit.getTimeStamp())%> <%=cop.format(commit.elapsedTime)%>ms <% if(name!=null){%> <u><%=encode(name)%></u><%} %> <%=commit.getModifiedItems()%></li><%
							}
							%>
						</ul><%
						}
						%>
					<%
					}
					else
					{
					%>
					<td class="text"><%=listener.getClass().getName()%></td>
					<td class="text"><%
						try
						{
							%><%=encode(listener.toString())%><%
						}
						catch(RuntimeException e)
						{
							e.printStackTrace(out);
						}
					}
					%></td>
				</tr><%
				}
			}
			%>
			</table><%
		
		if(!listeners.isEmpty())
			writeButtons(out);
		
		%>
		</form><%
	}
	
	private static final void writeButtons(final PrintStream out)
	{
			%>
			<input type="submit" name="<%=ModificationListenerCop.ADD_INTROSPECTOR%>" value="add introspector" />
			<input type="submit" name="<%=ModificationListenerCop.REMOVE_SELECTED%>" value="remove selected" /><%
	}
}%>