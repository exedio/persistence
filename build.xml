<?xml version="1.0"?>

<project name="cope.persistence" default="build" basedir=".">

	<taskdef name="LoadFile" classname="org.apache.tools.ant.taskdefs.LoadFile" />

	<taskdef
			resource="net/sf/antcontrib/antcontrib.properties"
			classpath="lib/ant-contrib.jar" />

	<target name="jspm.taskdef">
		<taskdef name="jspm"
					classname="com.exedio.jspm.AntTask"
					classpath="lib/exedio-jspm.jar" />
	</target>
	
	<path id="emma.lib">
		<pathelement location="lib/emma.jar" />
		<pathelement location="lib/emma_ant.jar" />
	</path>
	
	<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
	
	<macrodef name="ljavac">
		<attribute name="srcdir" />
		<attribute name="destdir" />
		<attribute name="includeAntRuntime" default="false" />
		<element name="classpath" optional="true" implicit="true" />
		<sequential>
			<!--echo message="local compile @{srcdir} to @{destdir}" /-->
			<mkdir dir="@{destdir}" />
			<javac srcdir="@{srcdir}"
					 destdir="@{destdir}"
					 includeAntRuntime="@{includeAntRuntime}"
					 source="1.5"
					 deprecation="on"
					 debug="on"
					 optimize="off">
				<classpath />
				<compilerarg value="-Xlint" />
			</javac>
		</sequential>
	</macrodef>
	
	<macrodef name="ljar">
		<attribute name="jarfile" />
		<attribute name="name" />
		<attribute name="classpath" />
		<element name="fileset" optional="true" implicit="true" />
		<sequential>
			<!--echo message="local jar @{jarfile}" /-->
			<jar jarfile="@{jarfile}" duplicate="fail">
				<fileset />
				<manifest>
					<attribute name="Specification-Title" value="exedio @{name}" />
					<attribute name="Specification-Version" value="${build.tag}" />
					<attribute name="Specification-Vendor" value="exedio GmbH" />
					<attribute name="Implementation-Title" value="exedio @{name}" />
					<attribute name="Implementation-Version" value="${build.tag}" />
					<attribute name="Implementation-Vendor" value="exedio GmbH" />
					<attribute name="Class-Path" value="@{classpath}" />
				</manifest>
			</jar>
		</sequential>
	</macrodef>
	
	<macrodef name="foreachdb">
		<attribute name="skipSwitch" />
		<element name="body" optional="false" />
		<sequential>
			<for param="db.file">
				<path>
					<fileset dir="${basedir}" includes="*.test.cope.properties" />
				</path>
				<sequential>
					<basename file="@{db.file}" property="@{db.file}.db" suffix=".test.cope.properties" />
					<!-- this is a dummy loop to create the attribute @{db} -->
					<for param="db" list="${@{db.file}.db}">
						<sequential>
							<property file="@{db.file}" prefix="@{db.file}." />
							<!--echo message="Doing @{skipSwitch} for @{db} skip switch:${@{db.file}.x-build.skip.@{skipSwitch}}." /-->
							<if>
								<istrue value="${@{db.file}.x-build.skip.@{skipSwitch}}"/>
								<then>
									<echo level="warning" message="Skipped @{skipSwitch} for @{db}." />
								</then>
								<else>
									<echo level="info" message="Doing @{skipSwitch} for @{db}" />
									<!-- this is a dummy loop to create the attribute @{db.driver} -->
									<for param="db.driver" list="${@{db.file}.x-build.driver}">
										<sequential>
											<body />
										</sequential>
									</for>
								</else>
							</if>
						</sequential>
					</for>
				</sequential>
			</for>
		</sequential>
	</macrodef>
	
	<target name="local.properties">
		<property file="local.properties" />
	</target>
	
	<target name="catalina.home" depends="local.properties">
		<property name="catalina.home" value="../tomcat" />
		<echo message="assuming tomcat in directory ${catalina.home}" />
	</target>
	
	<!-- dsmf -->
	
	<target name="dsmf.compile">
		<ljavac srcdir="dsmf/src" destdir="build/runtime/classes" />
	</target>
	
	<target name="dsmf.test.compile" depends="dsmf.compile, runtime.compile">
		<ljavac srcdir="dsmf/testsrc" destdir="build/dsmf/testclasses">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/junit.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="dsmf.test" depends="dsmf.test.compile">
		<mkdir dir="build/testresults" />
		<foreachdb skipSwitch="dsmf.test">
			<body>
				<junit taskname="junit @{db}" fork="yes"
						 haltonerror="true" haltonfailure="true"
						 showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<formatter type="xml" />
					<classpath>
						<pathelement location="build/runtime/classes" />
						<pathelement location="build/dsmf/testclasses" />
						<pathelement location="lib/@{db.driver}" />
					</classpath>
					<test name="com.exedio.dsmf.PackageTest" todir="build/testresults" outfile="dsmf-@{db}" />
					<sysproperty key="com.exedio.cope.properties" file="@{db.file}" />
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachdb>
	</target>
	
	<target name="dsmf.clean">
		<delete dir="build/dsmf" />
	</target>
	
	<!-- runtime -->
	
	<target name="runtime.core.compile" depends="dsmf.compile">
		<ljavac srcdir="runtime/src" destdir="build/runtime/classes">
			<classpath>
				<pathelement location="lib/pcj.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="runtime.driver.compile" depends="runtime.core.compile">
		<for param="driver.file">
			<path>
				<fileset dir="${basedir}" includes="*.driver.properties" />
			</path>
			<sequential>
				<basename file="@{driver.file}" property="@{driver.file}.name" suffix=".driver.properties" />
				<property file="@{driver.file}" prefix="@{driver.file}." />
				<echo message="Compiling driver ${@{driver.file}.name} with ${@{driver.file}.jar}." />
				<!--echo message="file=@{driver.file},driver=${@{driver.file}.name},jar=${@{driver.file}.jar}." /-->
				<ljavac srcdir="runtime/${@{driver.file}.name}src" destdir="build/runtime/classes">
					<classpath>
						<pathelement location="lib/pcj.jar" />
						<pathelement location="lib/${@{driver.file}.jar}" />
					</classpath>
				</ljavac>
			</sequential>
		</for>
	</target>

	<target name="runtime.pattern.compile" depends="runtime.core.compile">
		<ljavac srcdir="runtime/patternsrc" destdir="build/runtime/classes" />
	</target>
	
	<target name="runtime.servlet.compile" depends="runtime.core.compile">
		<ljavac srcdir="runtime/servletsrc" destdir="build/runtime/classes">
			<classpath>
				<pathelement location="lib/servlet-api.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="runtime.junit.compile" depends="runtime.core.compile">
		<ljavac srcdir="runtime/junitsrc" destdir="build/runtime/classes">
			<classpath>
				<pathelement location="lib/junit.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="runtime.compile"
				depends="runtime.core.compile,
							runtime.driver.compile,
							runtime.pattern.compile,
							runtime.servlet.compile,
							runtime.junit.compile" />
	
	<target name="runtime.jar" depends="runtime.compile">
		<ljar name="cope" jarfile="build/exedio-cope.jar" classpath="pcj.jar">
			<fileset dir="build/runtime/classes" />
		</ljar>
	</target>
	
	<target name="runtime.testmodel.instrument" depends="instrument.taskdef" unless="skip.instrument">
		<instrument verbose="false">
			<fileset dir="runtime/testmodelsrc/com/exedio/cope/testmodel">
				<include name="**/*.java" />
			</fileset>
		</instrument>
		<instrument verbose="false">
			<fileset dir="runtime/testsrc/com/exedio/cope">
				<include name="**/*.java" />
				<exclude name="ModelTest.java" /><!-- TODO remove -->
				<exclude name="FieldTest.java" /><!-- TODO remove -->
			</fileset>
		</instrument>
	</target>
	
	<target name="runtime.testmodel.compile" depends="runtime.testmodel.instrument">
		<ljavac srcdir="runtime/testmodelsrc" destdir="build/runtime/testmodelclasses">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/servlet-api.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="runtime.test.compile"
			depends="runtime.testmodel.compile, runtime.junit.compile">
		<ljavac srcdir="runtime/testsrc" destdir="build/runtime/testclasses">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/runtime/testmodelclasses" />
				<pathelement location="lib/servlet-api.jar" />
				<pathelement location="lib/junit.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="runtime.test.jar" depends="dsmf.test.compile, runtime.test.compile">
		<ljar name="cope test" jarfile="build/exedio-cope-test.jar" classpath="exedio-cope.jar junit.jar">
			<fileset dir="build/dsmf/testclasses" />
			<fileset dir="build/runtime/testclasses" />
			<fileset dir="build/runtime/testmodelclasses" />
		</ljar>
	</target>
	
	<target name="runtime.test" depends="runtime.compile, runtime.test.compile">
		<delete file="build/runtime/classes/com/exedio/cope/testprotocol.properties" />
		<mkdir dir="build/testresults" />
		<foreachdb skipSwitch="runtime.test">
			<body>
				<mkdir dir="build/runtime/test.@{db}/data" />
				<copy file="@{db.file}"
						tofile="build/runtime/test.@{db}/cope.properties">
					<filterset>
						<filter token="DATADIR_PATH" value="build/runtime/test.@{db}/data" />
					</filterset>
				</copy>
				<!--nbjpdastart addressproperty="jpda.address" name="cope" transport="dt_socket">
					<classpath>
						<pathelement location="build/runtime/classes" />
						<pathelement location="build/runtime/testmodelclasses" />
						<pathelement location="build/runtime/testclasses" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/pcj.jar" />
						<pathelement location="lib/@{db.driver}" />
					</classpath>
				</nbjpdastart-->
				<junit taskname="junit @{db}" fork="yes"
						 haltonerror="true" haltonfailure="true"
						 dir="${basedir}"
						 showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<formatter type="xml" />
					<classpath>
						<pathelement location="build/runtime/classes" />
						<pathelement location="build/runtime/testmodelclasses" />
						<pathelement location="build/runtime/testclasses" />
						<pathelement location="lib/pcj.jar" />
						<pathelement location="lib/servlet-api.jar" />
						<pathelement location="lib/@{db.driver}" />
					</classpath>
					<test name="com.exedio.cope.PackageTest" todir="build/testresults" outfile="runtime-@{db}" />
					<sysproperty key="com.exedio.cope.properties" file="build/runtime/test.@{db}/cope.properties" />
					<sysproperty key="com.exedio.cope.testprotocol.file" file="build/runtime/classes/com/exedio/cope/testprotocol.properties" />
					<sysproperty key="com.exedio.cope.testprotocol.prefix" value="@{db}" />
					<!--jvmarg value="-Xdebug"/>
					<jvmarg value="-Xnoagent"/>
					<jvmarg value="-Djava.compiler=none"/>
					<jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/-->
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachdb>
	</target>
	
	<target name="runtime.test.teardown" depends="runtime.compile, runtime.test.compile">
		<foreachdb skipSwitch="runtime.teardown">
			<body>
				<mkdir dir="build/runtime/teardown.@{db}/data" />
				<copy file="@{db.file}"
						tofile="build/runtime/teardown.@{db}/cope.properties">
					<filterset>
						<filter token="DATADIR_PATH"
								value="build/runtime/teardown.@{db}/data" />
					</filterset>
				</copy>
				<java classname="com.exedio.cope.PackageTest" taskname="tear down @{db}"
						fork="yes" failonerror="yes">
					<classpath>
						<pathelement location="build/runtime/classes" />
						<pathelement location="build/runtime/testmodelclasses" />
						<pathelement location="build/runtime/testclasses" />
						<pathelement location="lib/pcj.jar" />
						<pathelement location="lib/servlet-api.jar" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/@{db.driver}" />
					</classpath>
					<sysproperty key="com.exedio.cope.properties"
									file="build/runtime/teardown.@{db}/cope.properties" />
					<assertions><enable/></assertions>
				</java>
			</body>
		</foreachdb>
	</target>

	<target name="runtime.emma" depends="runtime.test.compile">
		<!-- TODO does not yet work -->
		
		<delete file="metadata.emma" />
		<emma>
			<instr destdir="build/runtime/classes.emma" metadatafile="metadata.emma" merge="no">
				<instrpath>
					<fileset dir="build/runtime/classes" />
				</instrpath>
			</instr>
		</emma>
		
		<foreachdb skipSwitch="runtime.test">
			<body>
				<mkdir dir="build/runtime/emma.@{db}/data" />
				<copy file="@{db.file}"
						tofile="build/runtime/emma.@{db}/cope.properties">
					<filterset>
						<filter token="DATADIR_PATH" value="build/runtime/emma.@{db}/data" />
					</filterset>
				</copy>
				<junit taskname="emma @{db}" fork="yes"
						haltonerror="true" haltonfailure="true"
						dir="${basedir}"
						showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<classpath>
						<pathelement location="build/runtime/classes.emma" />
						<pathelement location="build/runtime/testmodelclasses" />
						<pathelement location="build/runtime/testclasses" />
						<pathelement location="lib/pcj.jar" />
						<pathelement location="lib/servlet-api.jar" />
						<pathelement location="lib/@{db.driver}" />
						<pathelement location="lib/servlet-api.jar" />
					</classpath>
					<test name="com.exedio.cope.PackageTest" />
					<sysproperty key="com.exedio.cope.properties" file="build/runtime/emma.@{db}/cope.properties" />
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachdb>
	</target>

	<target name="runtime.testwebapp"
			  depends="runtime.compile, runtime.test.compile, runtime.testmodel.compile,
							console.compile, copernica.compile">
		<foreachdb skipSwitch="runtime.testwebapp">
			<body>
				<mkdir dir="build/runtime/testwebapp-@{db}" />
				
				<copy todir="build/runtime/testwebapp-@{db}/WEB-INF/classes">
					<fileset dir="build/runtime/classes" />
					<fileset dir="build/runtime/testclasses" />
					<fileset dir="build/runtime/testmodelclasses" />
					<fileset dir="build/console/classes" />
					<fileset dir="build/copernica/classes" />
				</copy>
				
				<copy todir="build/runtime/testwebapp-@{db}/WEB-INF/lib">
					<fileset file="lib/pcj.jar" />
					<fileset file="lib/exedio-cops.jar" />
					<fileset file="lib/@{db.driver}" />
				</copy>
				
				<path id="runtime.webdatadir.@{db.file}.path">
					<pathelement location="build/runtime/testwebapp-@{db}-data" />
				</path>
				<pathconvert targetos="unix" property="runtime.webdatadir.@{db.file}" refid="runtime.webdatadir.@{db.file}.path" />
				
				<copy tofile="build/runtime/testwebapp-@{db}/WEB-INF/cope.properties"
						file="@{db.file}">
					<filterset>
						<filter token="DATADIR_PATH" value="${runtime.webdatadir.@{db.file}}" />
					</filterset>
				</copy>
				<copy todir="build/runtime/testwebapp-@{db}/WEB-INF/"
						file="runtime/web.xml" />
				<mkdir dir="build/runtime/testwebapp-@{db}-data" />
				<touch file="build/runtime/testwebapp-@{db}/WEB-INF/web.xml" />
			</body>
		</foreachdb>
	</target>
	
	<target name="runtime.tomcat" depends="runtime.testwebapp, catalina.home">
		<foreachdb skipSwitch="runtime.tomcat">
			<body>
				<copy tofile="${catalina.home}/conf/Catalina/localhost/copelibtest-@{db}.xml"
						file="runtime/testwebapp.xml">
					<filterset>
						<filter token="DATABASE" value="@{db}" />
					</filterset>
				</copy>
			</body>
		</foreachdb>
	</target>
	
	<target name="runtime.clean" depends="catalina.home">
		<delete dir="build/runtime" />
		<delete>
			<fileset dir="${catalina.home}">
				<include name="conf/Catalina/localhost/copelibtest-*.xml" />
			</fileset>
		</delete>
	</target>
	
	<!-- instrument -->
	
	<target name="instrument.core.compile" depends="runtime.compile">
		<ljavac srcdir="instrument/src" destdir="build/instrument/classes">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/bsh-core.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="instrument.ant.compile" depends="runtime.compile, instrument.core.compile">
		<ljavac srcdir="instrument/antsrc" destdir="build/instrument/classes" includeAntRuntime="true">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/bsh-core.jar" />
			</classpath>
		</ljavac>
	</target>
	
	<target name="instrument.compile" depends="instrument.core.compile, instrument.ant.compile" />

	<target name="instrument.jar" depends="instrument.compile">
		<ljar name="cope instrumentor" jarfile="build/exedio-cope-instrument.jar" classpath="exedio-cope.jar bsh-core.jar">
			<fileset dir="build/instrument/classes" />
		</ljar>
	</target>
	
	<target name="instrument.taskdef" depends="runtime.compile, instrument.compile">
		<taskdef name="instrument" classname="com.exedio.cope.instrument.AntTask">
			<classpath>
				<pathelement location="lib/pcj.jar" />
				<pathelement location="lib/servlet-api.jar" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/instrument/classes" />
			</classpath>
		</taskdef>
	</target>
	
	<target name="instrument.test.instrument" depends="instrument.taskdef" unless="skip.instrument">
		<instrument verbose="false">
			<fileset dir="instrument/testsrc/com/exedio/cope/instrument/testmodel">
				<include name="**/*.java" />
			</fileset>
		</instrument>
	</target>
	
	<target name="instrument.test.compile" depends="instrument.test.instrument, runtime.compile, instrument.compile">
		<ljavac srcdir="instrument/testsrc" destdir="build/instrument/testclasses">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/instrument/classes" />
				<pathelement location="lib/junit.jar" />
			</classpath>
		</ljavac>
		<copy todir="build/instrument/testclasses">
			<fileset dir="instrument/examplesrc">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="instrument.test"
				depends="runtime.compile, instrument.compile, instrument.test.compile">
		<mkdir dir="build/testresults" />
		<junit fork="yes"
				 haltonerror="true" haltonfailure="true"
				 showoutput="true" printsummary="true">
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/instrument/classes" />
				<pathelement location="build/instrument/testclasses" />
				<pathelement location="lib/pcj.jar" />
				<pathelement location="lib/servlet-api.jar" />
				<pathelement location="lib/bsh-core.jar" />
			</classpath>
			<test name="com.exedio.cope.instrument.PackageTest" todir="build/testresults" outfile="instrument" />
			<assertions><enable/></assertions>
		</junit>
	</target>
	
	<target name="instrument.clean">
		<delete dir="build/instrument" />
	</target>
	
	<!-- console -->
	
	<target name="console.jspm" depends="jspm.taskdef">
		<jspm>
			<fileset dir="console/src" includes="**/*.jspm" />
		</jspm>
	</target>
	
	<target name="console.compile" depends="runtime.compile, console.jspm">
		<ljavac srcdir="console/src" destdir="build/console/classes">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/servlet-api.jar" />
			</classpath>
		</ljavac>
		<copy todir="build/console/classes">
			<fileset dir="console/src">
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.png" />
			</fileset>
		</copy>
	</target>
	
	<target name="console.jar" depends="console.compile">
		<ljar name="cope console" jarfile="build/exedio-cope-console.jar" classpath="exedio-cope.jar exedio-cops.jar">
			<fileset dir="build/console/classes" />
		</ljar>
	</target>
	
	<target name="console.clean" depends="catalina.home">
		<delete dir="build/console" />
		<delete>
			<fileset dir="console/src">
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
	</target>
	
	<!-- copernica -->
	
	<target name="copernica.jspm" depends="jspm.taskdef">
		<jspm>
			<fileset dir="copernica/src" includes="**/*.jspm" />
		</jspm>
	</target>
	
	<target name="copernica.compile" depends="runtime.compile, copernica.jspm">
		<ljavac srcdir="copernica/src" destdir="build/copernica/classes">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/servlet-api.jar" />
				<pathelement location="lib/commons-fileupload.jar" />
			</classpath>
		</ljavac>
		<copy todir="build/copernica/classes">
			<fileset dir="copernica/src">
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.png" />
			</fileset>
		</copy>
	</target>
	
	<target name="copernica.jar" depends="copernica.compile">
		<ljar name="copernica" jarfile="build/exedio-copernica.jar" classpath="exedio-cope.jar exedio-cops.jar">
			<fileset dir="build/copernica/classes" />
		</ljar>
	</target>
	
	<target name="copernica.test.jspm" depends="jspm.taskdef">
		<jspm>
			<fileset dir="copernica/testsrc" includes="**/*.jspm" />
		</jspm>
	</target>
	
	<target name="copernica.test.compile"
				depends="runtime.compile, runtime.test.compile, copernica.compile, copernica.test.jspm">
		<ljavac srcdir="copernica/testsrc" destdir="build/copernica/testclasses">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/runtime/testmodelclasses" />
				<pathelement location="build/copernica/classes" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/servlet-api.jar" />
			</classpath>
		</ljavac>
		<copy todir="build/copernica/testclasses/com/exedio/copernica">
			<fileset dir="copernica/testresources" />
		</copy>
	</target>
	
	<target name="copernica.testwebapp" depends="copernica.compile, copernica.test.compile">
		<foreachdb skipSwitch="copernica.testwebapp">
			<body>
				<mkdir dir="build/copernica/testwebapp-@{db}" />
				
				<copy todir="build/copernica/testwebapp-@{db}/WEB-INF/classes">
					<fileset dir="build/runtime/classes" />
					<fileset dir="build/runtime/testmodelclasses" />
					<fileset dir="build/console/classes" />
					<fileset dir="build/copernica/classes" />
					<fileset dir="build/copernica/testclasses" />
				</copy>
				
				<copy todir="build/copernica/testwebapp-@{db}/WEB-INF/lib">
					<fileset file="lib/pcj.jar" />
					<fileset file="lib/commons-fileupload.jar" />
					<fileset file="lib/commons-io.jar" />
					<fileset file="lib/exedio-cops.jar" />
					<fileset file="lib/@{db.driver}" />
				</copy>
				
				<path id="copernica.webdatadir.@{db.file}.path">
					<pathelement location="build/copernica/testwebapp-@{db}-data" />
				</path>
				<pathconvert targetos="unix" property="copernica.webdatadir.@{db.file}" refid="copernica.webdatadir.@{db.file}.path" />
				
				<copy tofile="build/copernica/testwebapp-@{db}/WEB-INF/cope.properties"
						file="@{db.file}">
					<filterset>
						<filter token="DATADIR_PATH" value="${copernica.webdatadir.@{db.file}}" />
					</filterset>
				</copy>
				<copy todir="build/copernica/testwebapp-@{db}/WEB-INF/"
						file="copernica/web.xml" />
				<mkdir dir="build/copernica/testwebapp-@{db}-data" />
				<touch file="build/copernica/testwebapp-@{db}/WEB-INF/web.xml" />
			</body>
		</foreachdb>
	</target>
	
	<target name="copernica.tomcat" depends="copernica.testwebapp, catalina.home">
		<foreachdb skipSwitch="copernica.tomcat">
			<body>
				<copy tofile="${catalina.home}/conf/Catalina/localhost/copetest-@{db}.xml"
						file="copernica/copetest.xml">
					<filterset>
						<filter token="DATABASE" value="@{db}" />
					</filterset>
				</copy>
			</body>
		</foreachdb>
	</target>
	
	<target name="copernica.webtest.compile">
		<ljavac srcdir="copernica/webtestsrc" destdir="build/copernica/webtestclasses">
			<classpath>
				<fileset dir="lib/jwebunit">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</ljavac>
	</target>
	
	<target name="copernica.webtest" depends="copernica.webtest.compile">
		<mkdir dir="build/testresults" />
		<junit fork="yes"
				 haltonerror="true" haltonfailure="true"
				 showoutput="true" printsummary="true">
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<classpath>
				<pathelement location="build/copernica/webtestclasses" />
				<fileset dir="lib/jwebunit">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<test name="com.exedio.copernica.PackageTest" todir="build/testresults" outfile="copernica" />
			<assertions><enable/></assertions>
		</junit>
	</target>

	<target name="copernica.index">
		<foreachdb skipSwitch="copernica.db">
			<body>
				<mkdir dir="build/copernica/index" />
				<copy file="copernica/index.html" tofile="build/copernica/index/@{db}.html">
					<filterset>
						<filter token="HOST" value="http://localhost:8080/" />
						<filter token="DATABASE" value="@{db}" />
					</filterset>
				</copy>
			</body>
		</foreachdb>
	</target>
	
	<target name="copernica.clean" depends="catalina.home">
		<delete dir="build/copernica" />
		<delete>
			<fileset dir="copernica/src">
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="copernica/testsrc">
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="${catalina.home}">
				<include name="conf/Catalina/localhost/copetest-*.xml" />
			</fileset>
		</delete>
	</target>
	
	<target name="copernica" depends="copernica.compile" />
	
	<!-- common -->
	
	<target name="jspm" depends="console.jspm, copernica.jspm, copernica.test.jspm" />
	
	<target name="instrument" depends="instrument.test.instrument, runtime.testmodel.instrument" />
	
	<target name="compile"
			  depends="runtime.compile,
			  instrument.compile,
			  console.compile,
			  copernica.compile, copernica.test.compile" />
	
	<target name="jar" depends="runtime.jar, runtime.test.jar, instrument.jar, console.jar, copernica.jar" />
	
	<target name="teardown" depends="runtime.test.teardown" />
	
	<target name="test" depends="dsmf.test, runtime.test, instrument.test" />
	
	<target name="testwebapp" depends="runtime.testwebapp, copernica.testwebapp" />
	
	<target name="tomcat" depends="runtime.tomcat, copernica.tomcat" />
	
	<target name="webtest" depends="copernica.webtest" />
	
	<target name="index" depends="copernica.index" />
	
	<target name="clean" depends="dsmf.clean, runtime.clean, instrument.clean, console.clean, copernica.clean">
		<delete dir="build" />
		<delete dir="home/lib" />
		<delete dir="home/testprotocol.html" />
	</target>
	
	<!-- home -->
	
	<target name="home.api" depends="local.properties">

		<property name="api.private" value="off" />
		<property name="api.link.cops"  value="http://download.exedio.com/api/cops" />
		<property name="api.link.jdk"   value="http://java.sun.com/j2se/1.5.0/docs/api" />
		<property name="api.link.j2ee"  value="http://java.sun.com/j2ee/1.4/docs/api" />
		<property name="api.link.junit" value="http://junit.sourceforge.net/javadoc" />
		<property name="api.link.ant"   value="http://www.dpml.net/api/ant/1.6.5" />

		<delete dir="home/api" />
		<mkdir  dir="home/api" />

		<copy todir="home/api/com/exedio/cope">
			<fileset dir="runtime/doc">
				<include name="*.png" />
			</fileset>
		</copy>

		<javadoc
				destdir="home/api"
				maxmemory="60m"
				source="1.5"
				private="${api.private}"
				author="on"
				use="on"
				version="on"
				windowtitle="exedio cope"
				splitindex="on"
				failonerror="true"
			>
			<doctitle><![CDATA[Cope with Object Persistence<br>API Specification]]></doctitle>
			<header><![CDATA[<a href="http://cope.sourceforge.net/" target="_top">exedio cope</a>]]></header>
			<footer><![CDATA[Cope with<br>Object<br>Persistence]]></footer>
			<bottom><![CDATA[<a href="http://sourceforge.net/" target="_top"><img src="http://sourceforge.net/sflogo.php?group_id=152867&amp;type=1" width="88" height="31" border="0" align="right" alt="SourceForge.net Logo" /></a><small>Copyright &copy; 2004-2006 <a href="http://www.exedio.com/" target="_top">exedio</a> Gesellschaft f&uuml;r Softwareentwicklung mbH. All rights reserved.</small><br><font size="-3">${build.tag}</font>]]></bottom>
			<link href="${api.link.jdk}"   packagelistLoc="package-list/jdk"   offline="true" />
			<link href="${api.link.j2ee}"  packagelistLoc="package-list/j2ee"  offline="true" />
			<link href="${api.link.junit}" packagelistLoc="package-list/junit" offline="true" />
			<link href="${api.link.ant}"   packagelistLoc="package-list/ant"   offline="true" />
			<link href="${api.link.cops}"  packagelistLoc="package-list/cops"  offline="true" />
			<fileset file="dsmf/src/com" includes="**/*.java" />
			<fileset file="runtime/src/com" includes="**/*.java" />
			<fileset file="runtime/patternsrc/com" includes="**/*.java" />
			<fileset file="runtime/servletsrc/com" includes="**/*.java" />
			<fileset file="runtime/junitsrc/com" includes="**/*.java" />
			<fileset file="instrument/src/com" includes="**/*.java" />
			<fileset file="instrument/antsrc/com" includes="**/*.java" />
			<fileset file="console/src/com" includes="**/*.java" />
			<fileset file="copernica/src/com" includes="**/*.java" />
			<classpath>
				<pathelement location="lib/pcj.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="${ant.jar}" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/servlet-api.jar" />
				<pathelement location="lib/commons-fileupload.jar" />
			</classpath>
			<group title="Cope Runtime Library" packages="com.exedio.cope:com.exedio.cope.*" />
			<group title="Copernica - Generic Backoffice" packages="com.exedio.copernica*" />
			<group title="Cope Instrumentor" packages="com.exedio.cope.instrument" />
			<group title="Database Schema Management Facility" packages="com.exedio.dsmf" />
		</javadoc>
	</target>
	
	<target name="api" depends="home.api" />
	
	<target name="home.lib" depends="runtime.jar, runtime.test.jar, instrument.jar">
		<copy todir="home/lib">
			<fileset dir="build">
				<include name="exedio-cope.jar" />
				<include name="exedio-cope-test.jar" />
				<include name="exedio-cope-instrument.jar" />
			</fileset>
			<fileset dir="lib">
				<include name="pcj.jar" />
				<include name="bsh-core.jar" />
			</fileset>
		</copy>
	</target>

	<target name="home.testprotocol" depends="runtime.test, console.compile">
		<java classname="com.exedio.cope.console.EnvironmentCop" taskname="testprotocol"
				fork="yes" failonerror="yes">
			<classpath>
				<pathelement location="build/runtime/classes" />
				<pathelement location="build/console/classes" />
				<pathelement location="lib/pcj.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/servlet-api.jar" />
			</classpath>
			<arg value="build/runtime/testprotocol.html"/>
			<assertions><enable/></assertions>
		</java>
		<LoadFile srcFile="build/runtime/testprotocol.html" property="testprotocol.html" />
		<copy file="home/testprotocol-template.html"
				tofile="home/testprotocol.html"
				overwrite="true">
			<filterset>
				<filter token="BUILD_TAG" value="${build.tag}" />
				<filter token="TABLE" value="${testprotocol.html}" />
			</filterset>
		</copy>
	</target>
	
	<target name="home.zip" depends="home.api, home.lib, home.testprotocol">
		<mkdir dir="build/runtime" />
		<tar destfile="build/exedio-cope-home.tar.bz2"
			  compression="bzip2">
			<tarfileset dir="${basedir}/home" />
		</tar>
	</target>
	
	<target name="home" depends="home.zip" />
	
	<target name="build"
			depends="compile, test, jar, home,
						tomcat,
						copernica.webtest.compile" />
	
	<target name="dist.tar">
		<mkdir dir="build/runtime" />
		<echo file="build/runtime/build.number" message="${build.tag}" />
		<tar destfile="build/exedio-cope-src.tar.gz"
			  compression="gzip">
			<tarfileset file="${basedir}/build/runtime/build.number" />
			<tarfileset dir="${basedir}">
				<exclude name="build/**" />
				<exclude name="home/api/**" />
				<exclude name="home/lib/**" />
				<exclude name="cruise/**" />
				<exclude name="**/*_Jspm.java" />
				
				<exclude name="*.driver.properties" />
				
				<exclude name="*.test.cope.properties" />
				
				<exclude name="lib/mysql-connector-java*.jar" />
				<exclude name="lib/classes12.jar" />
				<exclude name="lib/ojdbc14*.jar" />
				<exclude name="lib/pg74.*.jdbc*.jar" />
			</tarfileset>
			<tarfileset dir="${basedir}">
				<include name="hsqldb.driver.properties" />
				<include name="hsqldb.test.cope.properties" />
				<include name="hsqldbextra.test.cope.properties" />
			</tarfileset>
		</tar>
	</target>
	
	<target name="dist.test" depends="dist.tar">
		<delete dir="build/dist-test" />
		<mkdir dir="build/dist-test" />
		<untar src="build/exedio-cope-src.tar.gz"
				 dest="build/dist-test"
				 compression="gzip" />
		<ant dir="build/dist-test" target="build" />
	</target>
	
	<target name="dist" depends="dist.tar, dist.test" />
	
	<target name="all" depends="build, dist" />

	<target name="cruise" depends="all">
		<delete dir="cruise" />
		<mkdir dir="cruise" />
		<copy todir="${basedir}/cruise">
			<fileset file="${basedir}/build/exedio-cope.jar" />
			<fileset file="${basedir}/build/exedio-cope-test.jar" />
			<fileset file="${basedir}/build/exedio-cope-instrument.jar" />
			<fileset file="${basedir}/build/exedio-cope-console.jar" />
			<fileset file="${basedir}/build/exedio-copernica.jar" />
			<fileset file="${basedir}/build/exedio-cope-src.tar.gz" />
			<fileset file="${basedir}/build/exedio-cope-home.tar.bz2" />
		</copy>
	</target>
	
</project>
