<?xml version="1.0"?>

<project name="cope" default="build" basedir=".">

	<property file="local.properties" />
	<property file="project.properties" />

	<import>
		<fileset dir="macros">
			<include name="*.xml" />
		</fileset>
	</import>

	<taskdef name="LoadFile" classname="org.apache.tools.ant.taskdefs.LoadFile" />

	<taskdef
			resource="net/sf/antcontrib/antcontrib.properties"
			classpath="lib/ant-contrib.jar" />

	<macrodef name="ljarn">
		<attribute name="jarfile" />
		<attribute name="name" />
		<element name="fileset" optional="true" implicit="true" />
		<sequential>
			<!--echo message="local jar @{jarfile}" /-->
			<jar jarfile="@{jarfile}" filesonly="true" duplicate="fail" strict="fail" level="9">
				<fileset />
				<manifest>
					<attribute name="Specification-Title" value="exedio @{name}" />
					<attribute name="Specification-Version" value="${build.tag}" />
					<attribute name="Specification-Vendor" value="exedio GmbH" />
					<attribute name="Implementation-Title" value="exedio @{name}" />
					<attribute name="Implementation-Version" value="${build.tag}" />
					<attribute name="Implementation-Vendor" value="exedio GmbH" />
				</manifest>
			</jar>
			<plot file="@{jarfile}" />
		</sequential>
	</macrodef>

	<macrodef name="ljar">
		<attribute name="jarfile" />
		<attribute name="name" />
		<attribute name="classpath" />
		<element name="fileset" optional="true" implicit="true" />
		<sequential>
			<!--echo message="local jar @{jarfile}" /-->
			<jar jarfile="@{jarfile}" filesonly="true" duplicate="fail" strict="fail" level="9">
				<fileset />
				<manifest>
					<attribute name="Specification-Title" value="exedio @{name}" />
					<attribute name="Specification-Version" value="${build.tag}" />
					<attribute name="Specification-Vendor" value="exedio GmbH" />
					<attribute name="Implementation-Title" value="exedio @{name}" />
					<attribute name="Implementation-Version" value="${build.tag}" />
					<attribute name="Implementation-Vendor" value="exedio GmbH" />
					<attribute name="Class-Path" value="@{classpath}" />
				</manifest>
			</jar>
			<plot file="@{jarfile}" />
		</sequential>
	</macrodef>

	<macrodef name="ljunit">
		<attribute name="test" />
		<attribute name="env" default="N" />
		<element name="classpath" optional="true" implicit="true" />
		<sequential>
			<mkdir dir="build/testresults" />
			<junit fork="yes"
					haltonerror="true" haltonfailure="true"
					showoutput="true" printsummary="true">
				<formatter type="brief" usefile="false" />
				<formatter type="xml" />
				<classpath />
				<test name="@{test}" todir="build/testresults" outfile="@{test}-@{env}" />
				<sysproperty key="user.timezone" value="${test-DefaultTimeZone}" />
				<sysproperty key="tomcat.port.http" value="${tomcat.port.http}" />
				<assertions><enable/></assertions>
			</junit>
		</sequential>
	</macrodef>

	<macrodef name="foreachEnvironment">
		<attribute name="skipSwitch" />
		<element name="body" optional="false" />
		<sequential>
			<for param="env.file">
				<path>
					<fileset dir="${basedir}/conf/environment" includes="*.properties" />
				</path>
				<sequential>
					<basename file="@{env.file}" property="@{env.file}.env" suffix=".properties" />
					<!-- this is a dummy loop to create the attribute @{env} -->
					<for param="env" list="${@{env.file}.env}">
						<sequential>
							<property file="@{env.file}" prefix="@{env.file}." />
							<!--echo message="Doing @{skipSwitch} for @{env} skip switch:${@{env.file}.x-build.skip.@{skipSwitch}}." /-->
							<if>
								<istrue value="${@{env.file}.x-build.skip.@{skipSwitch}}"/>
								<then>
									<echo level="warning" message="Skipped @{skipSwitch} for @{env}." />
								</then>
								<else>
									<echo level="info" message="Doing @{skipSwitch} for @{env}" />
									<!-- this is a dummy loop to create the attribute @{env.driver} -->
									<for param="env.driver" list="${@{env.file}.x-build.driver}">
										<sequential>
											<body />
										</sequential>
									</for>
								</else>
							</if>
						</sequential>
					</for>
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<macrodef name="runInTomcat">
		<attribute name="name" />
		<element name="body" optional="false" />
		<sequential>
			<trycatch>
				<try>
					<echo message="tomcat (@{name}): starting ..." />
					<condition property="catalina.executable" value="catalina.bat" else="catalina.sh">
						<os family="windows"/>
					</condition>
					<forget>
						<exec dir="${basedir}/tomcat/bin"
								executable="${basedir}/tomcat/bin/${catalina.executable}"
								failonerror="true"
								output="build/@{name}-catalina-start.log">
							<arg value="run" />
							<env key="CATALINA_OPTS" value="-enableassertions -XX:MaxPermSize=150M" />
						</exec>
					</forget>
					<echo message="tomcat (@{name}): waiting to be ready ..." />
					<waitfor
							maxwait="40" maxwaitunit="second"
							checkevery="5" checkeveryunit="second"
							timeoutproperty="server.app.init.failed">
						<http url="http://127.0.0.1:${tomcat.port.http}/cope-runtime-servlet/mediaConsole/" />
					</waitfor>
					<echo message="tomcat (@{name}): ready ..." />
					<fail if="server.app.init.failed" message="tomcat could not be started." />
					<body />
				</try>
				<finally>
					<echo message="tomcat (@{name}): stopping ..." />
					<exec dir="${basedir}/tomcat/bin"
							executable="${basedir}/tomcat/bin/${catalina.executable}"
							failonerror="true"
							output="build/@{name}-catalina-stop.log">
						<arg value="stop" />
					</exec>
					<echo message="tomcat (@{name}): waiting to be stopped ..." />
					<sleep seconds="10" />
					<echo message="tomcat (@{name}): stopped." />
				</finally>
			</trycatch>
		</sequential>
	</macrodef>

	<target name="sleepInTomcat" depends="tomcat" description="for inspecting tomcat manually">
		<runInTomcat name="sleepInTomcat">
			<body>
				<sleep seconds="60" />
			</body>
		</runInTomcat>
	</target>

	<target name="catalina">
		<property name="catalina.root" value="apache-tomcat-7.0.67" />
		<untar src="lib/apache-tomcat.tar.gz"
				 compression="gzip"
				 dest="${basedir}">
			<patternset>
				<exclude name="${catalina.root}/conf/server.xml" />
				<exclude name="${catalina.root}/conf/tomcat-users.xml" />
				<exclude name="${catalina.root}/webapps/ROOT/**" />
				<exclude name="${catalina.root}/webapps/docs/**" />
				<exclude name="${catalina.root}/webapps/examples/**" />
			</patternset>
			<mapper type="glob" from="${catalina.root}/*" to="tomcat/*" />
		</untar>
		<chmod dir="tomcat/bin" perm="ugo+x" includes="*.sh" />
		<copy todir="tomcat/conf">
			<fileset dir="${basedir}/conf">
				<include name="tomcat-users.xml" />
			</fileset>
		</copy>
		<echo message="tomcat ports: shutdown=${tomcat.port.shutdown} http=${tomcat.port.http}" />
		<copy file="conf/server.xml" todir="tomcat/conf" overwrite="true">
			<filterset>
				<filter token="PORT_SHUTDOWN" value="${tomcat.port.shutdown}" />
				<filter token="PORT_HTTP"     value="${tomcat.port.http}"     />
			</filterset>
		</copy>
	</target>

	<!-- dsmf -->

	<target name="dsmf.compile">
		<compile srcdir="dsmf/src">
			<classpath>
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="dsmf.test.compile" depends="dsmf.compile">
		<compile srcdir="dsmf/testsrc">
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="dsmf.test" depends="dsmf.test.compile">
		<foreachEnvironment skipSwitch="dsmf.test">
			<body>
				<ljunit test="com.exedio.dsmf.AllTests" env="@{env}">
					<classpath>
						<pathelement location="build/classes/dsmf/src" />
						<pathelement location="build/classes/dsmf/testsrc" />
						<pathelement location="lib/@{env.driver}" />
						<pathelement location="lib/slf4j-api.jar" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/cpsuite.jar" />
						<pathelement location="lib/exedio-cope-util.jar" />
					</classpath>
					<sysproperty key="com.exedio.cope.properties" file="@{env.file}" />
				</ljunit>
			</body>
		</foreachEnvironment>
	</target>

	<target name="dsmf.clean">
		<delete dir="build/dsmf" />
	</target>

	<!-- runtime -->

	<target name="runtime.core.compile" depends="dsmf.compile, instrument.anno.compile">
		<compile srcdir="runtime/src">
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.dialect.compile" depends="dsmf.compile, runtime.core.compile, instrument.anno.compile">
		<for param="dialect.file">
			<path>
				<fileset dir="${basedir}/conf/dialect" includes="*.properties" />
			</path>
			<sequential>
				<basename file="@{dialect.file}" property="@{dialect.file}.name" suffix=".properties" />
				<property file="@{dialect.file}" prefix="@{dialect.file}." />
				<echo message="Compiling dialect ${@{dialect.file}.name} with ${@{dialect.file}.jar}." />
				<!--echo message="file=@{dialect.file},dialect=${@{dialect.file}.name},jar=${@{dialect.file}.jar}." /-->
				<compile srcdir="runtime/${@{dialect.file}.name}src">
					<classpath>
						<pathelement location="build/classes/dsmf/src" />
						<pathelement location="build/classes/runtime/src" />
						<pathelement location="build/classes/instrument/annosrc" />
						<pathelement location="lib/exedio-cope-util.jar" />
						<pathelement location="lib/trove4j.jar" />
						<pathelement location="lib/slf4j-api.jar" />
						<pathelement location="lib/findbugs-annotations.jar" />
						<pathelement location="lib/${@{dialect.file}.jar}" />
					</classpath>
				</compile>
				<copy todir="build/classes/runtime/dialects">
					<fileset dir="build/classes/runtime/${@{dialect.file}.name}src" />
				</copy>
			</sequential>
		</for>
	</target>

	<target name="runtime.pattern.compile" depends="runtime.core.compile, instrument.anno.compile">
		<compile srcdir="runtime/patternsrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.servlet.compile" depends="dsmf.compile, runtime.core.compile, runtime.pattern.compile, instrument.anno.compile">
		<compile srcdir="runtime/servletsrc">
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope-servletutil.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.junit.compile" depends="runtime.core.compile">
		<compile srcdir="runtime/junitsrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.compile"
				depends="runtime.core.compile,
							runtime.dialect.compile,
							runtime.pattern.compile,
							runtime.servlet.compile,
							runtime.junit.compile" />

	<target name="runtime.core.jar" depends="dsmf.compile, runtime.core.compile, runtime.dialect.compile, runtime.pattern.compile, runtime.servlet.compile, runtime.test.protocol">
		<ljar name="cope" jarfile="build/exedio-cope.jar" classpath="trove4j.jar exedio-cope-util.jar">
			<fileset dir="build/classes/dsmf/src" />
			<fileset dir="build/classes/runtime/src" />
			<fileset dir="build/classes/runtime/dialects" />
			<fileset dir="build/classes/runtime/patternsrc" />
			<fileset dir="build/classes/runtime/servletsrc" />
		</ljar>
	</target>

	<target name="runtime.junit.jar" depends="runtime.junit.compile">
		<ljar name="cope junit" jarfile="build/exedio-cope-junit.jar" classpath="exedio-cope.jar">
			<fileset dir="build/classes/runtime/junitsrc" />
		</ljar>
	</target>

	<target name="runtime.jar" depends="runtime.core.jar, runtime.junit.jar" />

	<target name="runtime.jar.src">
		<mkdir dir="build" />
		<zip destfile="build/exedio-cope-src.zip" filesonly="true" whenempty="fail" duplicate="fail" level="9">
			<zipfileset dir="${basedir}/dsmf/src"          ><include name="**/*.java"/></zipfileset>
			<zipfileset dir="${basedir}/runtime/src"       ><include name="**/*.java"/></zipfileset>
			<zipfileset dir="${basedir}/runtime/patternsrc"><include name="**/*.java"/></zipfileset>
			<zipfileset dir="${basedir}/runtime/servletsrc"><include name="**/*.java"/></zipfileset>
			<zipfileset dir="${basedir}/runtime/junitsrc"  ><include name="**/*.java"/></zipfileset>
		</zip>
	</target>

	<target name="runtime.test.feature.compile"
			depends="runtime.core.compile, runtime.pattern.compile, runtime.servlet.compile, instrument.anno.compile">
		<compile srcdir="runtime/testfeaturesrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.test.instrument" depends="instrument.taskdef" unless="skip.instrument">
		<instrument
				verify="${instrument.verify}"
				suppressUnusedWarningOnPrivateActivationConstructor="true"
				timestampFile="build/timestamps/runtime.test.timestamp">
			<resources refid="instrument.resources" />
			<fileset dir="runtime/testsrc/com/exedio/cope">
				<include name="**/*.java" />
				<exclude name="AbstractRuntimeTest.java" /><!-- TODO remove -->
				<exclude name="AbstractRuntimeModelTest.java" /><!-- TODO remove -->
				<exclude name="SchemaTest.java" /><!-- TODO remove -->
				<exclude name="TypesBoundTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="TypesBoundComplexTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="TypesBoundAnnotationTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="TypesBoundErrorTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="TypeSetTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="TypeCompareTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="CreateLimitAnnotationTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="FeatureTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="ModelCharSetTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="RenamedSchemaPattern.java" /><!-- ok, shall not instrument test types -->
				<exclude name="RenamedPatternSchemaTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="SchemaTypeStringField.java" /><!-- ok, shall not instrument test types -->
				<exclude name="EnumTest.java" /><!-- TODO remove -->
				<exclude name="MakeMaxStringTest.java" /><!-- TODO remove -->
				<exclude name="ModelTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="CoalesceTest.java" /><!-- TODO remove -->
				<exclude name="CoalesceFunctionTest.java" /><!-- TODO remove -->
				<exclude name="InstanceOfTest.java" /><!-- TODO remove -->
				<exclude name="NameTest.java" /><!-- TODO remove -->
				<exclude name="FieldTest.java" /><!-- TODO remove -->
				<exclude name="TestAnnotation.java" /><!-- TODO remove -->
				<exclude name="TestAnnotation2.java" /><!-- TODO remove -->
				<exclude name="RevisionInfoTest.java" /><!-- TODO remove -->
				<exclude name="CheckTypeColumnTest.java" /><!-- TODO remove -->
				<exclude name="CheckTypeColumnAbstractTest.java" /><!-- TODO remove -->
				<exclude name="tojunit/Assert.java" /><!-- TODO remove -->
				<exclude name="RuntimeAssert.java" /><!-- TODO remove -->
				<exclude name="RuntimeTester.java" /><!-- TODO remove -->
				<exclude name="QueryTest.java" /><!-- TODO remove -->
				<exclude name="QueryCopyTest.java" /><!-- TODO remove -->
				<exclude name="CapabilitiesTest.java" /><!-- TODO remove -->
				<exclude name="ModificationListenerTest.java" /><!-- TODO remove -->
				<exclude name="misc/ConnectTokenNotSetTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="misc/ConnectTokenSetTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="misc/AssertionFailedServletContext.java" /><!-- TODO remove -->
				<exclude name="pattern/DispatcherTest.java" /><!-- TODO remove -->
				<exclude name="pattern/DynamicModelTest.java" /><!-- TODO remove -->
				<exclude name="pattern/CompositeErrorTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="pattern/PasswordRecoveryTest.java" /><!-- TODO remove -->
				<exclude name="pattern/PatternTest.java" /><!-- TODO remove -->
				<exclude name="pattern/RecursiveTest.java" /><!-- TODO remove -->
				<exclude name="pattern/TextUrlFilterModelTest.java" /><!-- TODO remove -->
				<exclude name="pattern/MediaTest.java" /><!-- TODO remove -->
				<exclude name="sampler/*.java" /><!-- TODO remove -->
				<exclude name="mxsampler/*.java" /><!-- TODO remove -->
				<exclude name="util/ConnectTokenTest.java" /><!-- TODO remove -->
				<exclude name="util/TransactionSlicerTest.java" /><!-- TODO remove -->
				<exclude name="pattern/PatternTestTypeItem.java" /><!-- ok, shall not instrument test types -->
				<exclude name="serialize/ModelSerializationTest.java" /><!-- ok, shall not instrument test types -->
				<exclude name="tojunit/Subclasses.java" /><!-- TODO remove -->
				<exclude name="tojunit/LogRule.java" /><!-- TODO remove -->
				<exclude name="tojunit/AssertionErrorResultSet.java" /><!-- TODO remove -->
				<exclude name="ByteAlgorithmTest.java" /><!-- TODO remove -->
				<exclude name="DirectRevisionsFactoryTest.java" /><!-- TODO remove -->
				<exclude name="DirectRevisionsFutureTest.java" /><!-- TODO remove -->
				<exclude name="DummyDatabaseMetaData.java" /><!-- TODO remove -->
				<exclude name="EnumSchemaTest.java" /><!-- TODO remove -->
				<exclude name="QueryCopyTest.java" /><!-- TODO remove -->
				<exclude name="RevisionInfoTest.java" /><!-- TODO remove -->
				<exclude name="StringCopyTest.java" /><!-- TODO remove -->
				<exclude name="misc/CompareTest.java" /><!-- TODO remove -->
				<exclude name="misc/CopeNameUtilFieldTest.java" /><!-- TODO remove -->
				<exclude name="misc/ServletUtilContextTest.java" /><!-- TODO remove -->
				<exclude name="mxsampler/SampleTest.java" /><!-- TODO remove -->
				<exclude name="util/ServletUtilContextTest.java" /><!-- TODO remove -->
				<!-- ok, shall not instrument test types -->
				<exclude name="pattern/BlockErrorTest.java" />
				<exclude name="pattern/CompositeErrorTest.java" />
				<exclude name="pattern/HashAlgorithmAdapterTest.java" />
				<exclude name="pattern/TextUrlFilterAnnotationTest.java" />
				<exclude name="pattern/TextUrlFilterDelegatorAnnotationTest.java" />
				<exclude name="AutoIncrementEvaluator.java" />
				<exclude name="ChangeListenersTest.java" />
				<exclude name="ClusterDisabledTest.java" />
				<exclude name="ClusterNetworkTest.java" />
				<exclude name="ClusterPropertiesNoContextTest.java" />
				<exclude name="ClusterPropertiesTest.java" />
				<exclude name="CommitHookTest.java" />
				<exclude name="CopyConstraintNotAFunctionFieldTest.java" />
				<exclude name="CopyConstraintNotFinalTest.java" />
				<exclude name="CopyConstraintNotFoundTest.java" />
				<exclude name="DateFieldWrongDefaultNowTest.java" />
				<exclude name="DayFieldWrongDefaultNowTest.java" />
				<exclude name="ItemCacheLimitTest.java" />
				<exclude name="LRUMapTest.java" />
				<exclude name="MediaUrlSecretTest.java" />
				<exclude name="PatternComputedItem.java" />
				<exclude name="PatternComputedPattern.java" />
				<exclude name="QueryRangeTest.java" />
				<exclude name="QuerySelectTest.java" />
				<exclude name="QuerySerializeTest.java" />
				<exclude name="TypeCollisionItem.java" />
				<exclude name="TypeColumnTypeErrorTest.java" />
				<exclude name="TypeColumnTypeTest.java" />
				<exclude name="TypeCompareTest.java" />
				<exclude name="TypeMountTest.java" />
				<exclude name="TypeMountWrongTest.java" />
				<exclude name="TypeSetModelComplexTest.java" />
				<exclude name="TypeSetModelErrorTest.java" />
				<exclude name="TypeSetModelTest.java" />
				<exclude name="TypeSetTest.java" />
				<exclude name="TypesBoundComplexTest.java" />
				<exclude name="TypesBoundErrorTest.java" />
				<exclude name="TypesBoundTest.java" />
				<exclude name="ViewSerializeTest.java" />
				<exclude name="misc/ComputedTest.java" />
				<exclude name="misc/ConditionsTest.java" />
				<exclude name="misc/ConnectTokenItem.java" />
				<exclude name="misc/ConnectTokenNotSetTest.java" />
				<exclude name="misc/ConnectTokenSetTest.java" />
				<exclude name="misc/CopeNameUtilTest.java" />
				<exclude name="misc/ModelByStringTest.java" />
				<exclude name="misc/SerializationCheckTest.java" />
				<exclude name="misc/ServletUtilTest.java" />
				<exclude name="misc/SetValueUtilTest.java" />
				<exclude name="pattern/BlockComputedTest.java" />
				<exclude name="pattern/BlockMountTest.java" />
				<exclude name="pattern/BlockRenamedIdTest.java" />
				<exclude name="pattern/CompositeFieldComputedTest.java" />
				<exclude name="pattern/CompositeFieldRenamedIdTest.java" />
				<exclude name="pattern/CompositeMountTest.java" />
				<exclude name="pattern/EnumFieldNameTest.java" />
				<exclude name="pattern/EnumMapFieldSchemaNameTest.java" />
				<exclude name="pattern/EnumSetFieldSchemaNameTest.java" />
				<exclude name="pattern/JavaViewGetterMissingTest.java" />
				<exclude name="pattern/JavaViewInPatternTest.java" />
				<exclude name="pattern/MediaFilterFinalTest.java" />
				<exclude name="pattern/MediaPathConditionUnsupportedTest.java" />
				<exclude name="pattern/MultiItemFieldErrorTest.java" />
				<exclude name="pattern/MultiItemFieldStandardTest.java" />
				<exclude name="pattern/PartOfReverseTest.java" />
				<exclude name="pattern/TypeFutureInPatternsFeature.java" />
				<exclude name="pattern/TypeFutureInconsistentTest.java" />
				<exclude name="pattern/UniqueHashedMediaAnnotationTest.java" />
				<exclude name="pattern/UniqueHashedMediaErrorTest.java" />
				<exclude name="typecollision/TypeCollisionItem.java" />
				<exclude name="util/ServletUtilTest.java" />
			</fileset>
		</instrument>
	</target>

	<target name="runtime.test.compile"
			depends="runtime.test.instrument, dsmf.compile, runtime.core.compile, runtime.pattern.compile, runtime.servlet.compile, runtime.junit.compile, runtime.test.feature.compile, instrument.anno.compile">
		<compile srcdir="runtime/testsrc">
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/runtime/junitsrc" />
				<pathelement location="build/classes/runtime/testfeaturesrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/log4j-bundle.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.test.readyToRun" depends="dsmf.compile, runtime.core.compile, runtime.dialect.compile, runtime.pattern.compile, runtime.servlet.compile, runtime.junit.compile, runtime.test.feature.compile, runtime.test.compile" />

	<target name="runtime.test.withoutEnv" depends="runtime.test.readyToRun">
		<mkdir dir="build/testresults" />
		<junit taskname="junit noEnv" fork="yes"
					haltonerror="true" haltonfailure="true"
					dir="${basedir}"
					showoutput="true" printsummary="true">
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/dialects" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/runtime/junitsrc" />
				<pathelement location="build/classes/runtime/testfeaturesrc" />
				<pathelement location="build/classes/runtime/testsrc" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/hsqldb.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/slf4j-log4j12.jar" />
				<pathelement location="lib/log4j-bundle.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope-servletutil.jar" />
			</classpath>
			<test name="${runtime.test.withoutEnv}" todir="build/testresults" outfile="runtime-noEnv" />
			<sysproperty key="user.timezone" value="${test-DefaultTimeZone}" />
			<assertions><enable/></assertions>
		</junit>
	</target>

	<target name="runtime.test.withEnv" depends="runtime.test.readyToRun">
		<mkdir dir="build/testresults" />
		<foreachEnvironment skipSwitch="runtime.test">
			<body>
				<junit taskname="junit @{env}" fork="yes"
						 haltonerror="true" haltonfailure="true"
						 dir="${basedir}"
						 showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<formatter type="xml" />
					<classpath>
						<pathelement location="build/classes/dsmf/src" />
						<pathelement location="build/classes/runtime/src" />
						<pathelement location="build/classes/runtime/dialects" />
						<pathelement location="build/classes/runtime/patternsrc" />
						<pathelement location="build/classes/runtime/servletsrc" />
						<pathelement location="build/classes/runtime/junitsrc" />
						<pathelement location="build/classes/runtime/testfeaturesrc" />
						<pathelement location="build/classes/runtime/testsrc" />
						<pathelement location="lib/trove4j.jar" />
						<pathelement location="lib/javax.servlet-api.jar" />
						<pathelement location="lib/@{env.driver}" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/cpsuite.jar" />
						<pathelement location="lib/slf4j-api.jar" />
						<pathelement location="lib/slf4j-log4j12.jar" />
						<pathelement location="lib/log4j-bundle.jar" />
						<pathelement location="lib/exedio-cope-util.jar" />
					</classpath>
					<test name="${runtime.test.withEnv}" todir="build/testresults" outfile="runtime-@{env}" />
					<sysproperty key="user.timezone" value="${test-DefaultTimeZone}" />
					<sysproperty key="com.exedio.cope.properties" file="@{env.file}" />
					<sysproperty key="contextPath" value="/junitContextPath" />
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachEnvironment>
	</target>

	<target name="runtime.test" depends="runtime.test.withoutEnv, runtime.test.withEnv" />

	<target name="runtime.test.protocol" depends="dsmf.compile, runtime.core.compile, runtime.dialect.compile, runtime.junit.compile, runtime.test.compile">
		<delete file="build/classes/runtime/src/com/exedio/cope/testprotocol.properties" />
		<foreachEnvironment skipSwitch="runtime.test.protocol">
			<body>
				<junit taskname="junit @{env}" fork="yes"
						 haltonerror="true" haltonfailure="true"
						 dir="${basedir}"
						 showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<classpath>
						<pathelement location="build/classes/dsmf/src" />
						<pathelement location="build/classes/runtime/src" />
						<pathelement location="build/classes/runtime/dialects" />
						<pathelement location="build/classes/runtime/servletsrc" />
						<pathelement location="build/classes/runtime/junitsrc" />
						<pathelement location="build/classes/runtime/testsrc" />
						<pathelement location="lib/trove4j.jar" />
						<pathelement location="lib/@{env.driver}" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/slf4j-api.jar" />
						<pathelement location="lib/slf4j-log4j12.jar" />
						<pathelement location="lib/log4j-bundle.jar" />
						<pathelement location="lib/exedio-cope-util.jar" />
					</classpath>
					<test name="com.exedio.cope.ProtocolWriter" />
					<sysproperty key="user.timezone" value="${test-DefaultTimeZone}" />
					<sysproperty key="com.exedio.cope.properties" file="@{env.file}" />
					<sysproperty key="com.exedio.cope.testprotocol.file" file="build/classes/runtime/src/com/exedio/cope/testprotocol.properties" />
					<sysproperty key="com.exedio.cope.testprotocol.prefix" value="@{env}" />
					<sysproperty key="contextPath" value="/junitContextPath" />
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachEnvironment>
	</target>

	<target name="runtime.web"
			  depends="runtime.core.compile, runtime.dialect.compile, runtime.test.compile">
		<foreachEnvironment skipSwitch="runtime.web">
			<body>
				<mkdir dir="build/runtime/web-@{env}" />
				<copy todir="build/runtime/web-@{env}/WEB-INF/classes">
					<fileset dir="build/classes/dsmf/src" />
					<fileset dir="build/classes/runtime/src" />
					<fileset dir="build/classes/runtime/dialects" />
					<fileset dir="build/classes/runtime/patternsrc" />
					<fileset dir="build/classes/runtime/servletsrc" />
					<fileset dir="build/classes/runtime/junitsrc" />
					<fileset dir="build/classes/runtime/testfeaturesrc" />
					<fileset dir="build/classes/runtime/testsrc" />
				</copy>
				<copy todir="build/runtime/web-@{env}/WEB-INF/lib">
					<fileset file="lib/trove4j.jar" />
					<fileset file="lib/slf4j-api.jar" />
					<fileset file="lib/exedio-cope-util.jar" />
					<fileset file="lib/exedio-cope-servletutil.jar" />
					<fileset file="lib/exedio-cope-console.jar" />
					<fileset file="lib/exedio-cops.jar" />
					<fileset file="lib/@{env.driver}" />
					<fileset file="lib/junit.jar" />
				</copy>
				<copy tofile="build/runtime/web-@{env}/WEB-INF/cope.properties" file="@{env.file}" />
				<copy todir="build/runtime/web-@{env}/WEB-INF/"
						file="runtime/web.xml" />
				<touch file="build/runtime/web-@{env}/WEB-INF/web.xml" />
			</body>
		</foreachEnvironment>
	</target>

	<target name="runtime.tomcat" depends="runtime.web, catalina">
		<foreachEnvironment skipSwitch="runtime.tomcat">
			<body>
				<copy tofile="tomcat/conf/Catalina/localhost/copelibtest-@{env}.xml"
						file="runtime/context.xml">
					<filterset>
						<filter token="ENV" value="@{env}" />
					</filterset>
				</copy>
			</body>
		</foreachEnvironment>
	</target>

	<target name="runtime.servlet.test.instrument" depends="instrument.taskdef" unless="skip.instrument">
		<instrument
				verify="${instrument.verify}"
				suppressUnusedWarningOnPrivateActivationConstructor="true"
				annotateGenerated="false"
				timestampFile="build/timestamps/runtime.servlet.test.timestamp">
			<resources refid="instrument.resources" />
			<fileset dir="runtime/servlettestsrc">
				<include name="**/*.java" />
				<exclude name="com/exedio/cope/pattern/MediaPattern.java" />
			</fileset>
		</instrument>
	</target>

	<target name="runtime.servlet.test.web"
			  depends="runtime.servlet.test.instrument, dsmf.compile, runtime.core.compile, runtime.dialect.compile, runtime.servlet.compile, runtime.pattern.compile, instrument.anno.compile">
		<compile srcdir="runtime/servlettestsrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
		<copy todir="runtime/servlettestweb/WEB-INF/classes">
			<fileset dir="build/classes/dsmf/src" />
			<fileset dir="build/classes/runtime/src" />
			<fileset dir="build/classes/runtime/dialects" />
			<fileset dir="build/classes/runtime/patternsrc" />
			<fileset dir="build/classes/runtime/servletsrc" />
			<fileset dir="build/classes/runtime/servlettestsrc" />
		</copy>
		<copy file ="runtime/servlettestweb/log4j.properties"
				todir="runtime/servlettestweb/WEB-INF/classes" />
		<copy todir="runtime/servlettestweb/WEB-INF/lib">
			<fileset file="lib/trove4j.jar" />
			<fileset file="lib/exedio-cope-util.jar" />
			<fileset file="lib/exedio-cope-servletutil.jar" />
			<fileset file="lib/exedio-cope-console.jar" />
			<fileset file="lib/exedio-cops.jar" />
			<fileset file="lib/hsqldb.jar" />
			<fileset file="lib/slf4j-api.jar" />
			<fileset file="lib/slf4j-log4j12.jar" />
			<fileset file="lib/log4j-bundle.jar" />
		</copy>
	</target>

	<target name="runtime.servlet.test.tomcat" depends="runtime.servlet.test.web, catalina">
		<copy tofile="tomcat/conf/Catalina/localhost/cope-runtime-servlet.xml"
				file="runtime/servlet-context.xml" />
	</target>

	<target name="runtime.servlet.webtest.compile">
		<compile srcdir="runtime/servlettestwebsrc">
			<classpath>
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
			</classpath>
		</compile>
	</target>

	<target name="runtime.servlet.webtest"
				depends="catalina,
							runtime.servlet.test.tomcat,
							runtime.servlet.webtest.compile">
		<runInTomcat name="runtime.servlet.webtest">
			<body>
				<ljunit test="com.exedio.cope.pattern.webtest.AllTests">
					<classpath>
						<pathelement location="build/classes/runtime/servlettestwebsrc" />
						<pathelement location="lib/exedio-cope-util.jar" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/cpsuite.jar" />
					</classpath>
				</ljunit>
			</body>
		</runInTomcat>
	</target>

	<target name="runtime.clean">
		<delete>
			<fileset dir="runtime/servletsrc"><!-- is not created anymore -->
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="runtime/servlettestsrc"><!-- is not created anymore -->
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
		<delete dir="build/runtime" />
		<delete dir="runtime/servlettestweb/WEB-INF/classes" />
		<delete dir="runtime/servlettestweb/WEB-INF/lib" />
	</target>

	<!-- instrument -->

	<target name="instrument.anno.compile">
		<compile srcdir="instrument/annosrc" />
	</target>

	<target name="instrument.anno.jar" depends="instrument.anno.compile">
		<ljarn name="cope instrumentor annotations" jarfile="build/exedio-cope-instrument-annotations.jar">
			<fileset dir="build/classes/instrument/annosrc" />
		</ljarn>
	</target>

	<target name="instrument.core.compile" depends="runtime.core.compile, runtime.pattern.compile, instrument.anno.compile">
		<compile srcdir="instrument/src">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" /><!-- TODO stricter, is for Composite only -->
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="lib/cojen.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="instrument.ant.compile" depends="instrument.core.compile">
		<compile srcdir="instrument/antsrc" includeAntRuntime="true">
			<classpath>
				<pathelement location="build/classes/instrument/src" />
				<pathelement location="lib/bsh-core.jar" />
			</classpath>
		</compile>
	</target>

	<target name="instrument.compile" depends="instrument.core.compile, instrument.ant.compile" />

	<target name="instrument.jar" depends="instrument.core.compile, instrument.ant.compile">
		<ljar name="cope instrumentor" jarfile="build/exedio-cope-instrument.jar" classpath="exedio-cope-instrument-annotations.jar exedio-cope.jar bsh-core.jar cojen.jar">
			<fileset dir="build/classes/instrument/src" />
			<fileset dir="build/classes/instrument/antsrc" />
		</ljar>
	</target>

	<target name="instrument.testfeature.compile" depends="runtime.core.compile, runtime.pattern.compile, runtime.servlet.compile, instrument.compile">
		<compile srcdir="instrument/testfeaturesrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="build/classes/instrument/src" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
		<copy todir="build/classes/instrument/testsrc">
			<fileset dir="instrument/examplesrc">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="instrument.taskdef" depends="dsmf.compile, runtime.core.compile, runtime.pattern.compile, runtime.servlet.compile, instrument.compile, instrument.testfeature.compile, runtime.test.feature.compile">
		<taskdef resource="com/exedio/cope/instrument/ant.properties">
			<classpath id="instrument.resources">
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" /><!-- TODO stricter, is for Composite only - just that instrumentor knows Hash, no static dependency -->
				<pathelement location="build/classes/runtime/servletsrc" /><!-- just that instrumentor knows Media, no static dependency -->
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="build/classes/instrument/src" />
				<pathelement location="build/classes/instrument/antsrc" />
				<pathelement location="build/classes/instrument/testfeaturesrc" />
				<pathelement location="build/classes/runtime/testfeaturesrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="lib/cojen.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/slf4j-api.jar" />
			</classpath>
		</taskdef>
		<mkdir dir="build/timestamps"/>
	</target>

	<target name="instrument.test.instrument" depends="instrument.taskdef" unless="skip.instrument">
		<instrument
				verify="${instrument.verify}"
				encoding="ascii"
				suppressUnusedWarningOnPrivateActivationConstructor="true"
				hidingWarningSuppressor="hiding"
				timestampFile="build/timestamps/instrument.test.timestamp">
			<resources refid="instrument.resources" />
			<fileset dir="instrument/testsrc/com/exedio/cope/instrument/testmodel">
				<include name="**/*.java" />
			</fileset>
		</instrument>
	</target>

	<target name="instrument.test.compile" depends="instrument.test.instrument, instrument.testfeature.compile, runtime.core.compile, runtime.pattern.compile, runtime.servlet.compile, runtime.junit.compile, instrument.compile">
		<compile srcdir="instrument/testsrc">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/runtime/junitsrc" />
				<pathelement location="build/classes/instrument/annosrc" />
				<pathelement location="build/classes/instrument/src" />
				<pathelement location="build/classes/instrument/testfeaturesrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</classpath>
		</compile>
		<copy todir="build/classes/instrument/testsrc">
			<fileset dir="instrument/examplesrc">
				<include name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="instrument.test"
				depends="runtime.compile, instrument.compile, instrument.test.compile">
		<ljunit test="com.exedio.cope.instrument.AllTests">
			<classpath>
				<pathelement location="build/classes/dsmf/src" />
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="build/classes/runtime/patternsrc" />
				<pathelement location="build/classes/runtime/servletsrc" />
				<pathelement location="build/classes/runtime/junitsrc" />
				<pathelement location="build/classes/instrument/src" />
				<pathelement location="build/classes/instrument/testfeaturesrc" />
				<pathelement location="build/classes/instrument/testsrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/cpsuite.jar" />
			</classpath>
		</ljunit>
	</target>

	<target name="instrument.clean">
		<delete dir="build/instrument" />
	</target>

	<!-- common -->

	<target name="src" depends="index" description="creates all sources, so the IDE does not complain" />

	<target name="instrument" depends="runtime.servlet.test.instrument, instrument.test.instrument, runtime.test.instrument" />

	<target name="compile"
			  depends="runtime.compile,
			  runtime.servlet.test.web,
			  runtime.test.compile,
			  instrument.compile" />

	<target name="jar" depends="runtime.jar, instrument.anno.jar, instrument.jar" />

	<target name="test" depends="dsmf.test, runtime.test, instrument.test" />

	<target name="web" depends="runtime.web" />

	<target name="tomcat" depends="runtime.tomcat, runtime.servlet.test.tomcat" />

	<target name="webtest" depends="runtime.servlet.webtest" />

	<target name="index">
		<foreachEnvironment skipSwitch="index">
			<body>
				<mkdir dir="build/environments" />
				<copy file="conf/environment.html" tofile="build/environments/@{env}.html">
					<filterset>
						<filter token="HOST" value="http://localhost:${tomcat.port.http}/" />
						<filter token="ENV" value="@{env}" />
					</filterset>
				</copy>
			</body>
		</foreachEnvironment>
	</target>

	<target name="clean" depends="dsmf.clean, runtime.clean, instrument.clean">
		<delete dir="build" />
		<delete dir="tomcat" />
	</target>

	<target name="api">
		<api title="cope persistence">
			<src>
				<fileset file="dsmf/src/com" includes="**/*.java" />
				<fileset file="runtime/src/com" includes="**/*.java" />
				<fileset file="runtime/patternsrc/com" includes="**/*.java" />
				<fileset file="runtime/servletsrc/com" includes="**/*.java" />
				<fileset file="runtime/junitsrc/com" includes="**/*.java" />
				<fileset file="instrument/annosrc/com" includes="**/*.java" />
				<fileset file="instrument/src/com" includes="**/*.java" />
				<fileset file="instrument/antsrc/com" includes="**/*.java" />
			</src>
			<myClasspath>
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="${ant.core.lib}" />
				<pathelement location="lib/bsh-core.jar" />
				<pathelement location="lib/cojen.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope-servletutil.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/findbugs-annotations.jar" />
			</myClasspath>
		</api>
	</target>

	<target name="testprotocol" depends="runtime.test.protocol, runtime.core.compile">
		<mkdir dir="build/runtime" />
		<java classname="com.exedio.cope.console.EnvironmentCop" taskname="testprotocol"
				fork="yes" failonerror="yes">
			<classpath>
				<pathelement location="build/classes/runtime/src" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope-console.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/slf4j-api.jar" />
			</classpath>
			<arg value="build/runtime/testprotocol.html"/>
			<assertions><enable/></assertions>
		</java>
		<LoadFile srcFile="build/runtime/testprotocol.html" property="testprotocol.html" />
		<copy file="runtime/testprotocol-template.html"
				tofile="build/testprotocol.html"
				overwrite="true">
			<filterset>
				<filter token="BUILD_TAG" value="${build.tag}" />
				<filter token="TABLE" value="${testprotocol.html}" />
			</filterset>
		</copy>
		<copy file="runtime/testprotocol.css" todir="build" />
	</target>

	<target name="build"
			depends="compile, test, jar, testprotocol,
						tomcat, index,
						webtest" />


	<target name="findbugs" depends="findbugs.taskdef, compile">
		<findbugs
					home="${basedir}/build/findbugs-home"
					jvmargs="-Xmx250M"
					output="${findbugs.output}"
					outputFile="${basedir}/build/findbugs.${findbugs.output}"
					excludeFilter="conf/findbugs-exclude.xml"
					effort="max"
					reportlevel="low">
			<class location="${basedir}/build/classes/dsmf/src" />
			<class location="${basedir}/build/classes/runtime/src" />
			<class location="${basedir}/build/classes/runtime/dialects" />
			<class location="${basedir}/build/classes/runtime/patternsrc" />
			<class location="${basedir}/build/classes/runtime/servletsrc" />
			<class location="${basedir}/build/classes/runtime/junitsrc" />
			<class location="${basedir}/build/classes/instrument/annosrc" />
			<class location="${basedir}/build/classes/instrument/src" />
			<class location="${basedir}/build/classes/instrument/antsrc" />
			<class location="${basedir}/build/classes/runtime/testsrc" />
			<auxclasspath>
				<pathelement location="${basedir}/lib/exedio-cope-util.jar" />
				<pathelement location="${basedir}/lib/exedio-cope-servletutil.jar" />
				<pathelement location="${basedir}/lib/trove4j.jar" />
				<pathelement location="${basedir}/lib/cojen.jar" />
				<pathelement location="${basedir}/lib/bsh-core.jar" />
				<pathelement location="${basedir}/lib/javax.servlet-api.jar" />
				<pathelement location="${basedir}/lib/junit.jar" />
				<pathelement location="${basedir}/lib/slf4j-api.jar" />
				<pathelement location="${basedir}/lib/slf4j-log4j12.jar" />
				<pathelement location="${basedir}/lib/log4j-bundle.jar" />
				<pathelement location="${ant.core.lib}" />
			</auxclasspath>
		</findbugs>
	</target>

	<target name="all" depends="build, runtime.jar.src, api, findbugs" />

	<target name="jenkins" depends="all">
		<copy todir="${basedir}/build/success">
			<fileset file="${basedir}/build/exedio-cope.jar" />
			<fileset file="${basedir}/build/exedio-cope-src.zip" />
			<fileset file="${basedir}/build/exedio-cope-junit.jar" />
			<fileset file="${basedir}/build/exedio-cope-instrument-annotations.jar" />
			<fileset file="${basedir}/build/exedio-cope-instrument.jar" />
			<fileset file="${basedir}/exedio-cope-log.txt" />
		</copy>
		<copy file="ivy/ivy.xml" tofile="build/success/ivy.xml" overwrite="true">
			<filterset>
				<filter token="BUILD_REVISION" value="${build.revision}" />
			</filterset>
		</copy>
	</target>

	<target name="licenseheaders" description="Updates the license headers in the source files.">
		<loadfile property="javaheader" srcFile="conf/javaheader.txt"/>
		<replaceregexp match="(/\*.*\*/.*)??^package " flags="sm" replace="${javaheader}${line.separator}package ">
			<fileset dir=".">
				<include name="dsmf/src/**/*.java" />
				<include name="dsmf/testsrc/**/*.java" />
				<include name="instrument/annosrc/**/*.java" />
				<include name="instrument/antsrc/**/*.java" />
				<include name="instrument/examplesrc/**/*.java" />
				<include name="instrument/testfeaturesrc/**/*.java" />
				<include name="instrument/testsrc/**/*.java" />
				<include name="runtime/junitsrc/**/*.java" />
				<include name="runtime/mysqlsrc/**/*.java" />
				<include name="runtime/patternsrc/**/*.java" />
				<include name="runtime/postgresqlsrc/**/*.java" />
				<include name="runtime/servletsrc/**/*.java" />
				<include name="runtime/servlettestsrc/**/*.java" />
				<include name="runtime/servlettestwebsrc/**/*.java" />
				<include name="runtime/src/**/*.java" />
				<include name="runtime/testfeaturesrc/**/*.java" />
				<include name="runtime/testsrc/**/*.java" />
			</fileset>
		</replaceregexp>
	</target>

	<target name="single.test" depends="runtime.test.compile">
		<fail unless="testpath">provide test class path name</fail>
		<propertyregex property="testclass"
							input="${testpath}"
							regexp="(.*testsrc\.)?(.*)"
							select="\2"/>
		<mkdir dir="build/testresults" />
		<foreachEnvironment skipSwitch="runtime.test">
			<body>
				<junit taskname="junit @{env}" fork="yes"
						 haltonerror="true" haltonfailure="true"
						 dir="${basedir}"
						 showoutput="true" printsummary="true">
					<formatter type="brief" usefile="false" />
					<formatter type="xml" />
					<!--jvmarg value="-Xdebug" />
					<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" /-->
					<classpath>
						<pathelement location="build/classes/dsmf/src" />
						<pathelement location="build/classes/runtime/src" />
						<pathelement location="build/classes/runtime/dialects" />
						<pathelement location="build/classes/runtime/patternsrc" />
						<pathelement location="build/classes/runtime/servletsrc" />
						<pathelement location="build/classes/runtime/junitsrc" />
						<pathelement location="build/classes/runtime/testfeaturesrc" />
						<pathelement location="build/classes/runtime/testsrc" />
						<pathelement location="lib/trove4j.jar" />
						<pathelement location="lib/javax.servlet-api.jar" />
						<pathelement location="lib/@{env.driver}" />
						<pathelement location="lib/junit.jar" />
						<pathelement location="lib/slf4j-api.jar" />
						<pathelement location="lib/slf4j-log4j12.jar" />
						<pathelement location="lib/log4j-bundle.jar" />
						<pathelement location="lib/exedio-cope-util.jar" />
					</classpath>
					<test name="${testclass}" todir="build/testresults" outfile="runtime-@{env}" />
					<sysproperty key="user.timezone" value="${test-DefaultTimeZone}" />
					<sysproperty key="com.exedio.cope.properties" file="@{env.file}" />
					<sysproperty key="contextPath" value="/junitContextPath" />
					<assertions><enable/></assertions>
				</junit>
			</body>
		</foreachEnvironment>
	</target>

</project>
